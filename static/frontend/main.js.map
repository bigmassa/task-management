{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/avatar.component.html","webpack:///./src/app/components/avatar.component.ts","webpack:///./src/app/components/calendar.component.ts","webpack:///./src/app/components/client-contact-form.component.html","webpack:///./src/app/components/client-contact-form.component.ts","webpack:///./src/app/components/client-delete.component.html","webpack:///./src/app/components/client-delete.component.ts","webpack:///./src/app/components/client-detail-form.component.html","webpack:///./src/app/components/client-detail-form.component.ts","webpack:///./src/app/components/client-list.component.html","webpack:///./src/app/components/client-list.component.ts","webpack:///./src/app/components/client.component.html","webpack:///./src/app/components/client.component.ts","webpack:///./src/app/components/job-board-column.component.html","webpack:///./src/app/components/job-board-column.component.ts","webpack:///./src/app/components/job-delete.component.html","webpack:///./src/app/components/job-delete.component.ts","webpack:///./src/app/components/job-detail-form.component.html","webpack:///./src/app/components/job-detail-form.component.ts","webpack:///./src/app/components/job-recurring-cost-form.component.html","webpack:///./src/app/components/job-recurring-cost-form.component.ts","webpack:///./src/app/components/job-relationship-form.component.html","webpack:///./src/app/components/job-relationship-form.component.ts","webpack:///./src/app/components/job.component.html","webpack:///./src/app/components/job.component.ts","webpack:///./src/app/components/loading-splash.component.html","webpack:///./src/app/components/loading-splash.component.ts","webpack:///./src/app/components/logo.ts","webpack:///./src/app/components/not-found.component.html","webpack:///./src/app/components/not-found.component.ts","webpack:///./src/app/components/search.component.ts","webpack:///./src/app/components/tabs.component.ts","webpack:///./src/app/components/tag.component.html","webpack:///./src/app/components/tag.component.ts","webpack:///./src/app/components/task-card.component.html","webpack:///./src/app/components/task-card.component.ts","webpack:///./src/app/components/task-form.component.html","webpack:///./src/app/components/task-form.component.ts","webpack:///./src/app/components/taskboard.component.html","webpack:///./src/app/components/taskboard.component.ts","webpack:///./src/app/components/time-entry-form.component.html","webpack:///./src/app/components/time-entry-form.component.ts","webpack:///./src/app/components/time-sheet-signoff.component.ts","webpack:///./src/app/components/time-sheet.component.html","webpack:///./src/app/components/time-sheet.component.ts","webpack:///./src/app/directives/auto-focus.directive.ts","webpack:///./src/app/directives/auto-resize.directive.ts","webpack:///./src/app/directives/auto-scroll.directive.ts","webpack:///./src/app/directives/formerror.directive.ts","webpack:///./src/app/forms/base.form.ts","webpack:///./src/app/forms/client-contact.form.ts","webpack:///./src/app/forms/client-detail.form.ts","webpack:///./src/app/forms/job-detail.form.ts","webpack:///./src/app/forms/job-note.form.ts","webpack:///./src/app/forms/job-recurring-cost.form.ts","webpack:///./src/app/forms/job-relationship.form.ts","webpack:///./src/app/forms/task-assignee.form.ts","webpack:///./src/app/forms/task-close.form.ts","webpack:///./src/app/forms/task-create.form.ts","webpack:///./src/app/forms/task-description.form.ts","webpack:///./src/app/forms/task-not-chargeable.form.ts","webpack:///./src/app/forms/task-note.form.ts","webpack:///./src/app/forms/task-status.form.ts","webpack:///./src/app/forms/task-tag.form.ts","webpack:///./src/app/forms/task-target-date.form.ts","webpack:///./src/app/forms/task-title.form.ts","webpack:///./src/app/forms/time-entry.form.ts","webpack:///./src/app/pipes/client-search.pipe.ts","webpack:///./src/app/pipes/closed-jobs.pipe.ts","webpack:///./src/app/pipes/get.pipe.ts","webpack:///./src/app/pipes/job-search.pipe.ts","webpack:///./src/app/pipes/open-jobs.pipe.ts","webpack:///./src/app/pipes/order-by.pipe.ts","webpack:///./src/app/pipes/task-search.pipe.ts","webpack:///./src/app/pipes/tasks-by-status.pipe.ts","webpack:///./src/app/services/api.ts","webpack:///./src/app/services/deletable.ts","webpack:///./src/app/services/globals.ts","webpack:///./src/app/services/interceptors.ts","webpack:///./src/app/state/actions/billingfrequency.ts","webpack:///./src/app/state/actions/client.ts","webpack:///./src/app/state/actions/clientcontact.ts","webpack:///./src/app/state/actions/clientcontacttag.ts","webpack:///./src/app/state/actions/data.ts","webpack:///./src/app/state/actions/filters.ts","webpack:///./src/app/state/actions/http.ts","webpack:///./src/app/state/actions/index.ts","webpack:///./src/app/state/actions/job.ts","webpack:///./src/app/state/actions/jobfile.ts","webpack:///./src/app/state/actions/jobnote.ts","webpack:///./src/app/state/actions/jobrecurringcost.ts","webpack:///./src/app/state/actions/jobrelationship.ts","webpack:///./src/app/state/actions/jobstatus.ts","webpack:///./src/app/state/actions/jobtiming.ts","webpack:///./src/app/state/actions/jobtype.ts","webpack:///./src/app/state/actions/makecall.ts","webpack:///./src/app/state/actions/me.ts","webpack:///./src/app/state/actions/paymentoption.ts","webpack:///./src/app/state/actions/position.ts","webpack:///./src/app/state/actions/recurringcosttype.ts","webpack:///./src/app/state/actions/relationship.ts","webpack:///./src/app/state/actions/socket.ts","webpack:///./src/app/state/actions/tabs.ts","webpack:///./src/app/state/actions/tag.ts","webpack:///./src/app/state/actions/task.ts","webpack:///./src/app/state/actions/taskassignee.ts","webpack:///./src/app/state/actions/taskfile.ts","webpack:///./src/app/state/actions/tasknote.ts","webpack:///./src/app/state/actions/taskstatus.ts","webpack:///./src/app/state/actions/tasktag.ts","webpack:///./src/app/state/actions/tasktiming.ts","webpack:///./src/app/state/actions/timeentry.ts","webpack:///./src/app/state/actions/timeentrysignoff.ts","webpack:///./src/app/state/actions/user.ts","webpack:///./src/app/state/api.ts","webpack:///./src/app/state/effects/billingfrequency.ts","webpack:///./src/app/state/effects/client.ts","webpack:///./src/app/state/effects/clientcontact.ts","webpack:///./src/app/state/effects/clientcontacttag.ts","webpack:///./src/app/state/effects/data.ts","webpack:///./src/app/state/effects/index.ts","webpack:///./src/app/state/effects/job.ts","webpack:///./src/app/state/effects/jobfile.ts","webpack:///./src/app/state/effects/jobnote.ts","webpack:///./src/app/state/effects/jobrecurringcost.ts","webpack:///./src/app/state/effects/jobrelationship.ts","webpack:///./src/app/state/effects/jobstatus.ts","webpack:///./src/app/state/effects/jobtiming.ts","webpack:///./src/app/state/effects/jobtype.ts","webpack:///./src/app/state/effects/makecall.ts","webpack:///./src/app/state/effects/me.ts","webpack:///./src/app/state/effects/paymentoption.ts","webpack:///./src/app/state/effects/position.ts","webpack:///./src/app/state/effects/recurringcosttype.ts","webpack:///./src/app/state/effects/relationship.ts","webpack:///./src/app/state/effects/socket.ts","webpack:///./src/app/state/effects/tag.ts","webpack:///./src/app/state/effects/task.ts","webpack:///./src/app/state/effects/taskassignee.ts","webpack:///./src/app/state/effects/taskfile.ts","webpack:///./src/app/state/effects/tasknote.ts","webpack:///./src/app/state/effects/taskstatus.ts","webpack:///./src/app/state/effects/tasktag.ts","webpack:///./src/app/state/effects/tasktiming.ts","webpack:///./src/app/state/effects/timeentry.ts","webpack:///./src/app/state/effects/timeentrysignoff.ts","webpack:///./src/app/state/effects/user.ts","webpack:///./src/app/state/generics.ts","webpack:///./src/app/state/reducers/billingfrequency.ts","webpack:///./src/app/state/reducers/client.ts","webpack:///./src/app/state/reducers/clientcontact.ts","webpack:///./src/app/state/reducers/clientcontacttag.ts","webpack:///./src/app/state/reducers/filter.ts","webpack:///./src/app/state/reducers/http.ts","webpack:///./src/app/state/reducers/job.ts","webpack:///./src/app/state/reducers/jobfile.ts","webpack:///./src/app/state/reducers/jobnote.ts","webpack:///./src/app/state/reducers/jobrecurringcost.ts","webpack:///./src/app/state/reducers/jobrelationship.ts","webpack:///./src/app/state/reducers/jobstatus.ts","webpack:///./src/app/state/reducers/jobtiming.ts","webpack:///./src/app/state/reducers/jobtype.ts","webpack:///./src/app/state/reducers/me.ts","webpack:///./src/app/state/reducers/paymentoption.ts","webpack:///./src/app/state/reducers/position.ts","webpack:///./src/app/state/reducers/recurringcosttype.ts","webpack:///./src/app/state/reducers/relationship.ts","webpack:///./src/app/state/reducers/tabs.ts","webpack:///./src/app/state/reducers/tag.ts","webpack:///./src/app/state/reducers/task.ts","webpack:///./src/app/state/reducers/taskassignee.ts","webpack:///./src/app/state/reducers/taskfile.ts","webpack:///./src/app/state/reducers/tasknote.ts","webpack:///./src/app/state/reducers/taskstatus.ts","webpack:///./src/app/state/reducers/tasktag.ts","webpack:///./src/app/state/reducers/tasktiming.ts","webpack:///./src/app/state/reducers/timeentry.ts","webpack:///./src/app/state/reducers/user.ts","webpack:///./src/app/state/selectors/client.ts","webpack:///./src/app/state/selectors/job.ts","webpack:///./src/app/state/selectors/tag.ts","webpack:///./src/app/state/selectors/task.ts","webpack:///./src/app/state/selectors/taskboard.ts","webpack:///./src/app/state/selectors/timeentry.ts","webpack:///./src/app/state/selectors/timesheet.ts","webpack:///./src/app/state/selectors/user.ts","webpack:///./src/app/state/state.ts","webpack:///./src/app/utils/colour.ts","webpack:///./src/app/utils/cookies.ts","webpack:///./src/app/utils/generic.ts","webpack:///./src/app/utils/regex.ts","webpack:///./src/app/utils/task.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<header>\\n    <div class=\\\"container-fluid header-inner\\\">\\n        <div class=\\\"nav-home\\\">\\n            <a routerLink=\\\"\\\" logo [width]=\\\"'37px'\\\" [height]=\\\"'37px'\\\"></a>\\n        </div>\\n        <ul class=\\\"nav\\\">\\n            <li><a routerLink=\\\"\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">Taskboard</a></li>\\n            <li><a routerLink=\\\"clients\\\" routerLinkActive=\\\"active\\\">Clients</a></li>\\n            <li><a routerLink=\\\"timesheet\\\" routerLinkActive=\\\"active\\\">Timesheet</a></li>\\n            <li><a class=\\\"external\\\" href=\\\"/reporting/\\\" target=\\\"_blank\\\">Reporting</a></li>\\n        </ul>\\n        <div class=\\\"user-nav\\\" *ngIf=\\\"me$ | async as me\\\">\\n            <a avatar [id]=\\\"me.id\\\" class=\\\"avatar\\\" href=\\\"{{ globals.logoutUrl }}\\\">\\n                <i class=\\\"avatar-close icon-cancel\\\"></i>\\n            </a>\\n        </div>\\n    </div>\\n</header>\\n<router-outlet></router-outlet>\\n<loading-splash></loading-splash>\\n\"","import { Observable } from 'rxjs';\n\nimport { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport { Globals } from './services/globals';\nimport * as actions from './state/actions';\nimport { IMe } from './state/reducers/me';\nimport { AppState, getMeState } from './state/state';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n\n    me$: Observable<IMe>;\n\n    constructor(\n        public globals: Globals,\n        public store: Store<AppState>\n    ) { }\n\n    ngOnInit() {\n        this.me$ = this.store.pipe(select(getMeState))\n        this.store.dispatch({ type: actions.DataActions.LOAD_DATA });\n        this.store.dispatch({ type: actions.SocketActions.START });\n    }\n\n}\n","import { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { NgxMaskModule } from 'ngx-mask';\n\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { HTTP_INTERCEPTORS, HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MAT_DATE_LOCALE, MatDatepickerModule, MatNativeDateModule } from '@angular/material';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { AvatarComponent } from './components/avatar.component';\nimport { CalendarComponent } from './components/calendar.component';\nimport { ClientContactFormComponent } from './components/client-contact-form.component';\nimport { ClientDeleteComponent } from './components/client-delete.component';\nimport { ClientDetailFormComponent } from './components/client-detail-form.component';\nimport { ClientListComponent } from './components/client-list.component';\nimport { ClientComponent } from './components/client.component';\nimport { JobBoardColumnComponent } from './components/job-board-column.component';\nimport { JobDeleteComponent } from './components/job-delete.component';\nimport { JobDetailFormComponent } from './components/job-detail-form.component';\nimport { JobRecurringCostFormComponent } from './components/job-recurring-cost-form.component';\nimport { JobRelationshipFormComponent } from './components/job-relationship-form.component';\nimport { JobComponent } from './components/job.component';\nimport { LoadingSplashComponent } from './components/loading-splash.component';\nimport { LogoComponent } from './components/logo';\nimport { NotFoundComponent } from './components/not-found.component';\nimport { SearchComponent } from './components/search.component';\nimport { TabsComponent } from './components/tabs.component';\nimport { TagComponent } from './components/tag.component';\nimport { TaskCardComponent } from './components/task-card.component';\nimport { TaskFormComponent } from './components/task-form.component';\nimport { TaskboardComponent } from './components/taskboard.component';\nimport { TimeEntryFormComponent } from './components/time-entry-form.component';\nimport { TimesheetSignoffComponent } from './components/time-sheet-signoff.component';\nimport { TimesheetComponent } from './components/time-sheet.component';\nimport { AutofocusDirective } from './directives/auto-focus.directive';\nimport { AutoResizeDirective } from './directives/auto-resize.directive';\nimport { AutoScrollDirective } from './directives/auto-scroll.directive';\nimport { FormErrorDirective } from './directives/formerror.directive';\nimport { ClientSearchPipe } from './pipes/client-search.pipe';\nimport { ClosedJobsPipe } from './pipes/closed-jobs.pipe';\nimport { GetPipe } from './pipes/get.pipe';\nimport { JobSearchPipe } from './pipes/job-search.pipe';\nimport { OpenJobsPipe } from './pipes/open-jobs.pipe';\nimport { OrderByPipe } from './pipes/order-by.pipe';\nimport { TaskSearchPipe } from './pipes/task-search.pipe';\nimport { TasksByStatusPipe } from './pipes/tasks-by-status.pipe';\nimport { LoadingInterceptor } from './services/interceptors';\nimport { effects } from './state/effects';\nimport { reducers } from './state/state';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        AutofocusDirective,\n        AutoResizeDirective,\n        AutoScrollDirective,\n        AvatarComponent,\n        CalendarComponent,\n        ClosedJobsPipe,\n        ClientComponent,\n        ClientContactFormComponent,\n        ClientDeleteComponent,\n        ClientDetailFormComponent,\n        ClientListComponent,\n        ClientSearchPipe,\n        FormErrorDirective,\n        GetPipe,\n        JobBoardColumnComponent,\n        JobComponent,\n        JobDeleteComponent,\n        JobDetailFormComponent,\n        JobRecurringCostFormComponent,\n        JobRelationshipFormComponent,\n        JobSearchPipe,\n        LoadingSplashComponent,\n        LogoComponent,\n        NotFoundComponent,\n        OpenJobsPipe,\n        OrderByPipe,\n        SearchComponent,\n        TabsComponent,\n        TagComponent,\n        TaskboardComponent,\n        TaskCardComponent,\n        TaskFormComponent,\n        TasksByStatusPipe,\n        TaskSearchPipe,\n        TimeEntryFormComponent,\n        TimesheetComponent,\n        TimesheetSignoffComponent\n    ],\n    imports: [\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        BrowserModule,\n        EffectsModule.forRoot(effects),\n        DragDropModule,\n        DropzoneModule,\n        FormsModule,\n        HttpClientModule,\n        HttpClientXsrfModule.withOptions({\n            cookieName: 'csrftoken',\n            headerName: 'X-CSRFTOKEN'\n        }),\n        MatDatepickerModule,\n        MatNativeDateModule,\n        NgxMaskModule.forRoot({}),\n        ReactiveFormsModule,\n        RouterModule,\n        StoreModule.forRoot(reducers)\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ClientContactFormComponent } from './components/client-contact-form.component';\nimport { ClientDeleteComponent } from './components/client-delete.component';\nimport { ClientDetailFormComponent } from './components/client-detail-form.component';\nimport { ClientListComponent } from './components/client-list.component';\nimport { ClientComponent } from './components/client.component';\nimport { JobDeleteComponent } from './components/job-delete.component';\nimport { JobDetailFormComponent } from './components/job-detail-form.component';\nimport { JobRecurringCostFormComponent } from './components/job-recurring-cost-form.component';\nimport { JobRelationshipFormComponent } from './components/job-relationship-form.component';\nimport { JobComponent } from './components/job.component';\nimport { NotFoundComponent } from './components/not-found.component';\nimport { TaskboardComponent } from './components/taskboard.component';\nimport { TimesheetComponent } from './components/time-sheet.component';\n\nconst routes: Routes = [\n    { path: '', component: TaskboardComponent },\n    { path: 'clients', component: ClientListComponent},\n    { path: 'clients/new', component: ClientDetailFormComponent},\n    { path: 'clients/:id', component: ClientComponent},\n    { path: 'clients/:id/detail', component: ClientDetailFormComponent},\n    { path: 'clients/:id/delete', component: ClientDeleteComponent},\n    { path: 'clients/:client_id/contacts/new', component: ClientContactFormComponent},\n    { path: 'clients/:client_id/contacts/:id', component: ClientContactFormComponent},\n    { path: 'clients/:client_id/jobs/new', component: JobDetailFormComponent},\n    { path: 'clients/:client_id/jobs/:id/detail', component: JobDetailFormComponent},\n    { path: 'clients/:client_id/jobs/:id/delete', component: JobDeleteComponent},\n    { path: 'clients/:client_id/jobs/:id', component: JobComponent},\n    { path: 'clients/:client_id/jobs/:job_id/recurring-costs/new', component: JobRecurringCostFormComponent},\n    { path: 'clients/:client_id/jobs/:job_id/recurring-costs/:id', component: JobRecurringCostFormComponent},\n    { path: 'clients/:client_id/jobs/:job_id/relationships/new', component: JobRelationshipFormComponent},\n    { path: 'clients/:client_id/jobs/:job_id/relationships/:id', component: JobRelationshipFormComponent},\n    { path: 'timesheet', component: TimesheetComponent},\n    { path: '404', component: NotFoundComponent },\n    { path: '**', redirectTo: '/404' }\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\n\nexport class AppRoutingModule { }","module.exports = \"<div class=\\\"avatar-text\\\">{{ (user | async)?.initials }}</div>\\n<ng-content></ng-content>\"","import * as _ from 'lodash';\n\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { AppState } from '../state/state';\nimport { IUser } from '../state/reducers/user';\nimport { Observable } from 'rxjs';\nimport { getUserById } from '../state/selectors/user';\n\n@Component({\n    selector: '[avatar]',\n    templateUrl: './avatar.component.html'\n})\nexport class AvatarComponent implements OnChanges {\n    @Input() id: number;\n\n    user: Observable<IUser>;\n\n    constructor(private store: Store<AppState>) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (_.has(changes, 'id.currentValue')) {\n            this.user = this.store.pipe(select(getUserById(this.id)));\n        }\n    }\n}\n\n","import { Calendar, Draggable } from 'fullcalendar';\nimport EventApi from 'fullcalendar/EventApi';\n\nimport {\n    AfterViewChecked, Component, DoCheck, ElementRef, EventEmitter, HostListener, Input,\n    IterableDiffers, OnChanges, OnDestroy, OnInit, Output, SimpleChanges\n} from '@angular/core';\n\nexport interface ViewSkeletonRenderInfo {\n    view: any;\n    el: HTMLElement;\n}\n\nexport interface DatesRenderInfo {\n    view: any;\n    el: HTMLElement;\n}\n\nexport interface EventRenderInfo {\n    event: EventObject;\n    el: HTMLElement;\n    isMirror: boolean;\n    isStart: boolean;\n    isEnd: boolean;\n    view: any;\n}\n\nexport interface DropInfo {\n    date: Date;\n    draggedEl: HTMLElement;\n    jsEvent: Event;\n    view: any;\n    allDay: boolean;\n}\n\nexport interface EventDropInfo {\n    event: EventApi;\n    prevEvent: EventApi;\n    el: HTMLElement;\n    delta: any;\n    revert: Function;\n    jsEvent: Event;\n    view: any\n}\n\nexport interface EventResizeInfo {\n    event: EventApi;\n    prevEvent: EventApi;\n    el: HTMLElement;\n    startDelta: any;\n    endDelta: any;\n    revert: Function;\n    jsEvent: Event;\n    view: any\n}\n\nexport interface EventClickInfo {\n    event: EventApi;\n    el: HTMLElement;\n    jsEvent: Event;\n    view: any\n}\n\nexport interface EventObject {\n    id?: string;\n    groupId?: string;\n    allDay?: boolean;\n    start: Date;\n    end?: Date;\n    title: string;\n    url?: string;\n    classNames?: string[];\n    editable?: boolean;\n    startEditable?: boolean;\n    durationEditable?: boolean;\n    resourceEditable?: boolean;\n    rendering?: '' | 'background' | 'inverse-background';\n    overlap?: boolean | Function;\n    constraint?: any;\n    backgroundColor?: string;\n    borderColor?: string;\n    textColor?: string;\n    extendedProps?: any;\n    source?: any;\n}\n\nexport interface CalendarOptions {\n    header?: any;\n    isRTL?: boolean;\n    weekends?: boolean;\n    hiddenDays?: number[];\n    firstDay?: number;\n    fixedWeekCount?: boolean;\n    weekNumbers?: boolean;\n    businessHours?: any;\n    height?: any;\n    contentHeight?: any;\n    aspectRatio?: number;\n    eventLimit?: any;\n    defaultDate?: any;\n    locale?: string;\n    timezone?: boolean | string;\n    timeFormat?: string | null;\n    editable?: boolean;\n    droppable?: boolean;\n    eventStartEditable?: boolean;\n    eventDurationEditable?: boolean;\n    defaultView?: string;\n    allDaySlot?: boolean;\n    allDayText?: string;\n    slotDuration?: any;\n    slotLabelInterval?: any;\n    snapDuration?: any;\n    defaultTimedEventDuration?: any;\n    scrollTime?: any;\n    minTime?: any;\n    maxTime?: any;\n    slotEventOverlap?: boolean;\n    nowIndicator?: boolean;\n    dragRevertDuration?: number;\n    dragOpacity?: number;\n    dragScroll?: boolean;\n    eventOverlap?: any;\n    eventConstraint?: any;\n    dayRender?: Function;\n    navLinks?: boolean;\n}\n\nconst defaultConfig: CalendarOptions = {\n    aspectRatio: 1.35,\n    defaultView: 'month',\n    slotDuration: '00:30:00',\n    scrollTime: '06:00:00',\n    minTime: '00:00:00',\n    maxTime: '24:00:00',\n    slotEventOverlap: true,\n    dragRevertDuration: 500,\n    dragOpacity: .75,\n    dragScroll: true,\n    timezone: false,\n    timeFormat: null\n};\n  \n@Component({\n    selector: 'calendar, [calendar]',\n    template: ``\n})\nexport class CalendarComponent implements OnInit, OnDestroy, AfterViewChecked, DoCheck, OnChanges {\n\n    @Input() externalEventsWrapperId: string = 'fc-event-wrapper';\n    @Input() externalEventItemClass: string = '.fc-event';\n    @Input() options: CalendarOptions;\n    @Input() events: EventObject[];\n    @Input() header: any;\n    @Input() isRTL: boolean;\n    @Input() weekends: boolean;\n    @Input() hiddenDays: number[];\n    @Input() fixedWeekCount: boolean;\n    @Input() weekNumbers: boolean;\n    @Input() businessHours: any;\n    @Input() height: any;\n    @Input() contentHeight: any;\n    @Input() aspectRatio: number;\n    @Input() eventLimit: any;\n    @Input() defaultDate: any;\n    @Input() editable: boolean;\n    @Input() droppable: boolean;\n    @Input() eventStartEditable: boolean;\n    @Input() eventDurationEditable: boolean;\n    @Input() defaultView: string;\n    @Input() allDaySlot: boolean;\n    @Input() allDayText: string;\n    @Input() slotDuration: any;\n    @Input() slotLabelInterval: any;\n    @Input() snapDuration: any;\n    @Input() scrollTime: any;\n    @Input() minTime: any;\n    @Input() maxTime: any;\n    @Input() slotEventOverlap: boolean;\n    @Input() nowIndicator: boolean;\n    @Input() dragRevertDuration: number;\n    @Input() dragOpacity: number;\n    @Input() dragScroll: boolean;\n    @Input() eventOverlap: any;\n    @Input() eventConstraint: any;\n    @Input() locale: string;\n    @Input() timezone: boolean | string;\n    @Input() timeFormat: string | null;\n    @Input() dayRender: Function;\n    @Input() navLinks: boolean;\n  \n    // tslint:disable:no-output-on-prefix\n    @Output() onViewSkeletonRender: EventEmitter<ViewSkeletonRenderInfo> = new EventEmitter<ViewSkeletonRenderInfo>();\n    @Output() onDatesRender: EventEmitter<DatesRenderInfo> = new EventEmitter<DatesRenderInfo>();\n    @Output() onEventRender: EventEmitter<EventRenderInfo> = new EventEmitter<EventRenderInfo>();\n    @Output() onDrop: EventEmitter<DropInfo> = new EventEmitter<DropInfo>();\n    @Output() onEventDrop: EventEmitter<EventDropInfo> = new EventEmitter<EventDropInfo>();\n    @Output() onEventClick: EventEmitter<EventClickInfo> = new EventEmitter<EventClickInfo>();\n    @Output() onEventResize: EventEmitter<EventResizeInfo> = new EventEmitter<EventResizeInfo>();\n    @Output() onWindowResize: EventEmitter<any> = new EventEmitter<any>();\n    // tslint:enable:no-output-on-prefix\n  \n    calendar: any;\n    initialized: boolean;\n    eventDiffer: any;\n    config: any;\n    copyableDraggable: Draggable;\n  \n    constructor(private el: ElementRef, differs: IterableDiffers) {\n        this.eventDiffer = differs.find([]).create(null);\n        this.initialized = false;\n    }\n  \n    ngOnInit() {\n        this.config = this.safeGenerateConfig();\n\n        this.config.viewSkeletonRender = (info: ViewSkeletonRenderInfo) => {\n            this.onViewSkeletonRender.emit(info);\n        };\n\n        this.config.datesRender = (info: DatesRenderInfo) => {\n            this.onDatesRender.emit(info);\n        };\n\n        this.config.eventRender = (info: EventRenderInfo) => {\n            this.onEventRender.emit(info);\n        };\n\n        this.config.drop = (info: DropInfo) => {\n            this.onDrop.emit(info);\n        };\n\n        this.config.eventDrop = (info: EventDropInfo) => {\n            this.onEventDrop.emit(info);\n        };\n\n        this.config.eventResize = (info: EventResizeInfo) => {\n            this.onEventResize.emit(info);\n        };\n        \n        this.config.eventClick = (info: EventClickInfo) => {\n            this.onEventClick.emit(info);\n        };\n        \n        this.config.windowResize = (info: any) => {\n            this.onWindowResize.emit(info);\n        };\n    }\n  \n    ngOnDestroy() {\n        if (this.calendar) {\n            this.calendar.destroy();\n            this.initialized = false;\n            this.calendar = null;\n        }\n    }\n  \n    ngOnChanges(changes: SimpleChanges) {\n        if (this.calendar) {\n            for (const propName in changes) {\n                if (propName !== 'events') {\n                    this.calendar.setOption(propName, changes[propName].currentValue);\n                }\n            }\n        }\n    }\n  \n    ngAfterViewChecked() {\n        if (!this.initialized && this.el.nativeElement.offsetParent) {\n            this.initialize();\n        }\n    }\n  \n    ngDoCheck() {\n        const eventChanges = this.eventDiffer.diff(this.events);\n        if (this.calendar && eventChanges) {\n            this.setEvents();\n        }\n    }\n  \n    private initialize() {\n        this.calendar = new Calendar(this.el.nativeElement, this.config);\n\n        const externalEventsEl = document.getElementById(this.externalEventsWrapperId);\n\n        new Draggable(externalEventsEl, {\n            itemSelector: this.externalEventItemClass\n        });\n\n        this.calendar.render();\n\n        this.setEvents();\n        \n        this.initialized = true;\n    }\n    \n    private setEvents() {\n        this.calendar.removeAllEventSources();\n        if (this.events) {\n            let source = {\n                events: this.events,\n                startEditable: this.eventStartEditable,\n                durationEditable: this.eventDurationEditable\n            }\n            this.calendar.addEventSource(source);\n        }\n    }\n\n    private safeGenerateConfig() {\n        const configFromAttrs = {\n            // tslint:disable:no-non-null-assertion\n            header: this.header!,\n            isRTL: this.isRTL!,\n            weekends: this.weekends!,\n            hiddenDays: this.hiddenDays!,\n            fixedWeekCount: this.fixedWeekCount!,\n            weekNumbers: this.weekNumbers!,\n            businessHours: this.businessHours!,\n            height: this.height!,\n            contentHeight: this.contentHeight!,\n            aspectRatio: this.aspectRatio!,\n            eventLimit: this.eventLimit!,\n            defaultDate: this.defaultDate!,\n            locale: this.locale!,\n            timezone: this.timezone!,\n            timeFormat: this.timeFormat!,\n            editable: this.editable!,\n            droppable: this.droppable!,\n            eventStartEditable: this.eventStartEditable!,\n            eventDurationEditable: this.eventDurationEditable!,\n            defaultView: this.defaultView!,\n            allDaySlot: this.allDaySlot!,\n            allDayText: this.allDayText!,\n            slotDuration: this.slotDuration!,\n            slotLabelInterval: this.slotLabelInterval!,\n            snapDuration: this.snapDuration!,\n            scrollTime: this.scrollTime!,\n            minTime: this.minTime!,\n            maxTime: this.maxTime!,\n            slotEventOverlap: this.slotEventOverlap!,\n            nowIndicator: this.nowIndicator!,\n            dragRevertDuration: this.dragRevertDuration!,\n            dragOpacity: this.dragOpacity!,\n            dragScroll: this.dragScroll!,\n            eventOverlap: this.eventOverlap!,\n            eventConstraint: this.eventConstraint!,\n            dayRender: this.dayRender!,\n            navLinks: this.navLinks!,\n            // tslint:enable:no-non-null-assertion\n        };\n    \n        return {\n            ...defaultConfig,\n            ...this.removeUndefinedProperties(this.options),\n            ...this.removeUndefinedProperties(configFromAttrs)\n        };\n    }\n  \n    removeUndefinedProperties<T>(object: Object): T {\n        return JSON.parse(JSON.stringify(typeof object === 'object' ? object : {}));\n    }\n\n    @HostListener('document:keydown.alt', ['$event'])\n    enableCopy(event: KeyboardEvent) {\n        this.eventStartEditable = false;\n        this.eventDurationEditable = false;\n        this.setEvents();\n\n        if (this.copyableDraggable) {\n            this.copyableDraggable.destroy();\n        }\n        \n        this.copyableDraggable = new Draggable(this.el.nativeElement, {\n            itemSelector: '.fc-event'\n        });\n    }\n\n    @HostListener('document:keyup.alt', ['$event'])\n    disableCopy(event: KeyboardEvent) {\n        this.eventStartEditable = true;\n        this.eventDurationEditable = true;\n        this.setEvents();\n\n        if (this.copyableDraggable) {\n            this.copyableDraggable.destroy();\n        }\n    }\n\n}\n","module.exports = \"<ng-container *ngIf=\\\"form\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"container-fluid d-flex align-items-center py-2\\\">\\n            <ng-container *ngIf=\\\"client\\\">\\n                <span class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"client.colour\\\"></span>\\n                <div class=\\\"h2\\\">\\n                    <a [routerLink]=\\\"['/clients', client.id]\\\" class=\\\"underline-dotted\\\">{{ client | get:'name' }}</a>\\n                    <ng-container *ngIf=\\\"contact\\\"> / {{ contact | get:'first_name' }} {{ contact | get:'last_name' }}</ng-container>\\n                </div>\\n                <div class=\\\"page-header-actions\\\">\\n                    <a class=\\\"button button-white\\\" (click)=\\\"form.save($event)\\\">Save</a>\\n                    <a [routerLink]=\\\"['/clients', client.id]\\\" class=\\\"button button-white button-clear\\\">Cancel</a>\\n                </div>\\n            </ng-container>\\n        </div>\\n        <div class=\\\"container-fluid\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li class=\\\"active\\\">Contact Detail</li>\\n            </ul>\\n        </div>\\n    </div>\\n    <div class=\\\"container-fluid inner-content\\\">\\n        <label>First Name</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.first_name\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.first_name\\\">Please enter a first name</p>\\n\\n        <label>Last Name</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.last_name\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.first_name\\\">Please enter a last name</p>\\n\\n        <label>Phone Number</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.phone_number\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.phone_number\\\">Please enter a valid phone number (ie 01603 766062)</p>\\n        \\n        <label>Mobile Number</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.mobile_number\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.mobile_number\\\">Please enter a valid mobile number (ie 07123 456789)</p>\\n        \\n        <label>Email Address</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.email_address\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.email_address\\\">Please enter a valid email address</p>\\n        \\n        <label>Position</label>\\n        <select [formControl]=\\\"form.controls.position\\\">\\n            <option [ngValue]=\\\"null\\\">Please select...</option>\\n            <option [ngValue]=\\\"option.id\\\" *ngFor=\\\"let option of positions$ | async\\\">{{ option.title }}</option>\\n        </select>\\n\\n        <label>Address</label>\\n        <textarea autoResize [formControl]=\\\"form.controls.address\\\"></textarea>\\n        \\n        <label>Notes</label>\\n        <textarea autoResize [formControl]=\\\"form.controls.notes\\\"></textarea>\\n\\n    </div>\\n</ng-container>\\n\"","import * as _ from 'lodash';\n\nimport { ActionsSubject, Store, select } from '@ngrx/store';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription, combineLatest, of, Observable } from 'rxjs';\nimport { getClientCollectionById, getClientContactCollectionById } from '../state/selectors/client';\nimport { mergeMap, take } from 'rxjs/operators';\n\nimport { AppState, getPositionState } from '../state/state';\nimport { ClientContactForm } from './../forms/client-contact.form';\nimport { IClient } from './../state/reducers/client';\nimport { IClientContact } from './../state/reducers/clientcontact';\nimport { IFormActionResult } from '../forms/base.form';\nimport { IPosition } from '../state/reducers/position';\n\n@Component({\n    templateUrl: './client-contact-form.component.html'\n})\nexport class ClientContactFormComponent implements OnDestroy, OnInit {\n\n    client: IClient;\n    contact: IClientContact;\n    form: ClientContactForm;\n    params: any;\n    positions$: Observable<IPosition[]>;\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) {\n        this.positions$ = store.pipe(select(getPositionState));\n        this.form = new ClientContactForm(this.store, this.actionsSubject, {alwaysEditable: true});\n    }\n\n    ngOnInit() {\n        const paramsObsv = this.route.params.pipe(\n            mergeMap(\n                params => combineLatest(\n                    of(params),\n                    this.store.pipe(select(getClientCollectionById(+params.client_id))),\n                    this.store.pipe(select(getClientContactCollectionById(+params.id)))\n                )\n            )\n        ).subscribe(\n            ([params, client, contact]) => {\n                this.params = params\n                this.client = client;\n                this.contact = contact;\n                if (contact) {\n                    this.form.load(this.contact);\n                } else if (client) {\n                    this.form.load({client: client.id});\n                }\n                this.form.formSaved.pipe(\n                    take(1)\n                ).subscribe(\n                    (result: IFormActionResult) => {\n                        this.router.navigate(['/clients', this.params.client_id]);\n                    }\n                )\n            }\n        )\n        this.subscriptions.push(paramsObsv);\n    }\n\n    ngOnDestroy() {\n        _.each(this.subscriptions, s => s.unsubscribe());\n    }\n\n}\n","module.exports = \"<ng-container *ngIf=\\\"client\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"container-fluid d-flex align-items-center py-2\\\">\\n            <span class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"client.colour\\\"></span>\\n            <div class=\\\"h2\\\">{{ client.name }}</div>\\n            <div class=\\\"page-header-actions\\\">\\n                <a *ngIf=\\\"canDelete\\\" class=\\\"button button-white\\\" (click)=\\\"delete()\\\">Confirm</a>\\n                <a [routerLink]=\\\"['/clients', client.id]\\\" class=\\\"button button-white button-clear\\\">Cancel</a>\\n            </div>\\n        </div>\\n        <div class=\\\"container-fluid\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li class=\\\"active\\\">Delete</li>\\n            </ul>\\n        </div>\\n    </div>\\n    <div class=\\\"container-fluid inner-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div class=\\\"panel panel-dark\\\" *ngIf=\\\"canDelete\\\">\\n                    <p class=\\\"strong\\\">Confirm</p>\\n                    <p class=\\\"ws-pre-wrap\\\">Please confirm you wish to delete this client</p>\\n                </div>\\n                <div class=\\\"panel panel-dark\\\" *ngIf=\\\"!canDelete\\\">\\n                    <p class=\\\"strong\\\">Oops</p>\\n                    <p class=\\\"ws-pre-wrap\\\">You cannot delete this client until all related data has been deleted first</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-container>\\n\"","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { filter, flatMap } from 'rxjs/operators';\n\nimport { AppState } from '../state/state';\nimport { DeletableService } from '../services/deletable';\nimport { IClient } from './../state/reducers/client';\nimport { Subscription } from 'rxjs';\nimport { getClientCollectionById } from '../state/selectors/client';\n\n@Component({\n    templateUrl: './client-delete.component.html'\n})\nexport class ClientDeleteComponent implements OnDestroy, OnInit {\n\n    canDelete: boolean;\n    client: IClient;\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private store: Store<AppState>,\n        private deletable: DeletableService\n    ) { }\n\n    ngOnInit() {\n        const subscription = this.route.params.pipe(\n            filter(params => _.get(params, 'id')),\n            flatMap(params => this.store.pipe(select(getClientCollectionById(+params.id))))\n        ).subscribe(\n            client => {\n                if (!client) { return; }\n                this.client = client;\n                this.deletable.check(DeletableService.CLIENT, this.client.id).then(check => this.canDelete = check);\n            }\n        );\n        this.subscriptions.push(subscription);\n    }\n\n    ngOnDestroy() {\n        _.each(this.subscriptions, s => s.unsubscribe());\n    }\n\n    delete() {\n        this.store.dispatch({type: actions.ClientActions.REMOVE, payload: this.client});\n        this.router.navigate(['/clients']);\n    }\n}\n","module.exports = \"<ng-container *ngIf=\\\"form\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"container-fluid d-flex align-items-center py-2\\\">\\n            <ng-container *ngIf=\\\"client; else newClient;\\\">\\n                <span class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"client.colour\\\"></span>\\n                <div class=\\\"h2\\\">{{ client.name }}</div>\\n                <div class=\\\"page-header-actions\\\">\\n                    <a class=\\\"button button-white\\\" (click)=\\\"form.save($event)\\\">Save</a>\\n                    <a [routerLink]=\\\"['/clients', client.id]\\\" class=\\\"button button-white button-clear\\\">Cancel</a>\\n                </div>\\n            </ng-container>\\n        </div>\\n        <div class=\\\"container-fluid\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li class=\\\"active\\\">Detail</li>\\n            </ul>\\n        </div>\\n    </div>\\n    <div class=\\\"container-fluid inner-content\\\">\\n        <label>Name</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.name\\\" />\\n        <label>Colour</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.colour\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.colour\\\">Please enter a hex colour (ie #fff or #ffffff)</p>\\n        <label>Phone Number</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.phone_number\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.phone_number\\\">Please enter a valid phone number (ie 01603 766062)</p>\\n        <label>Email Address</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.email_address\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.email_address\\\">Please enter a valid email address</p>\\n        <label>Website</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.website\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.website\\\">Please enter a valid url (ie https://google.com)</p>\\n        <label>Address</label>\\n        <textarea autoResize [formControl]=\\\"form.controls.address\\\"></textarea>\\n        <label>Notes</label>\\n        <textarea autoResize [formControl]=\\\"form.controls.notes\\\"></textarea>\\n    </div>\\n</ng-container>\\n\\n<ng-template #newClient>\\n    <span class=\\\"color-indicator\\\"></span>\\n    <div class=\\\"h2\\\">New</div>\\n    <div class=\\\"page-header-actions\\\">\\n        <button class=\\\"button button-white\\\" type=\\\"submit\\\" (click)=\\\"form.save($event)\\\">Save</button>\\n        <a [routerLink]=\\\"['/clients']\\\" class=\\\"button button-white button-clear\\\">Cancel</a>\\n    </div>\\n</ng-template>\"","import * as _ from 'lodash';\n\nimport { ActionsSubject, Store, select } from '@ngrx/store';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { filter, flatMap, take } from 'rxjs/operators';\n\nimport { AppState } from '../state/state';\nimport { ClientDetailForm } from '../forms/client-detail.form';\nimport { IClient } from './../state/reducers/client';\nimport { IFormActionResult } from '../forms/base.form';\nimport { Subscription } from 'rxjs';\nimport { getClientCollectionById } from '../state/selectors/client';\n\n@Component({\n    templateUrl: './client-detail-form.component.html'\n})\nexport class ClientDetailFormComponent implements OnDestroy, OnInit {\n\n    client: IClient;\n    form: ClientDetailForm;\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) {\n        this.form = new ClientDetailForm(this.store, this.actionsSubject, {alwaysEditable: true});\n    }\n\n    ngOnInit() {\n        const existingClient = this.route.params.pipe(\n            filter(params => _.get(params, 'id')),\n            flatMap(params => this.store.pipe(select(getClientCollectionById(+params.id))))\n        ).subscribe(\n            client => {\n                if (!client) { return; }\n                this.client = client;\n                this.form.load(this.client);\n                this.form.formSaved.pipe(take(1)).subscribe(\n                    (result: IFormActionResult) => {\n                        this.router.navigate(['/clients', result.payload.id])\n                    }\n                )\n            }\n        );\n        this.subscriptions.push(existingClient);\n        \n        const newClient = this.route.params.subscribe(\n            params => {\n                if (params.id) { return; }\n                this.form.formSaved.pipe(take(1)).subscribe(\n                    (result: IFormActionResult) => {\n                        this.router.navigate(['/clients', result.payload.id])\n                    }\n                )\n            }\n        );\n        this.subscriptions.push(newClient);\n    }\n\n    ngOnDestroy() {\n        _.each(this.subscriptions, s => s.unsubscribe());\n    }\n\n}\n","module.exports = \"<div class=\\\"page-header py-2\\\">\\n    <div class=\\\"container-fluid d-flex align-items-center\\\">\\n        <div class=\\\"h2\\\">Clients</div>\\n        <div class=\\\"page-header-actions\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"container-fluid inner-content\\\">\\n    <div class=\\\"panel\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\"><search [(ngModel)]=\\\"searchTerms\\\"></search></div>\\n            <div class=\\\"col-6\\\"><a routerLink=\\\"/clients/new\\\" class=\\\"button button-white pull-right\\\">Add Client</a></div>\\n        </div>\\n        <table class=\\\"table-headed table-hover margin-zero layout-fixed\\\">\\n            <thead>\\n                <tr>\\n                    <th>Name</th>\\n                    <th>Email Address</th>\\n                    <th>Phone Number</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr [routerLink]=\\\"['/clients', client.id]\\\" class=\\\"pointer\\\" *ngFor=\\\"let client of clients$ | async | clientSearch:searchTerms\\\">\\n                    <td>{{ client.name }}</td>\\n                    <td>{{ client | get:'email_address' }}</td>\\n                    <td>{{ client | get:'phone_number' }}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { AppState } from '../state/state';\nimport { IClient } from './../state/reducers/client';\nimport { Observable } from 'rxjs';\nimport { getClientState } from './../state/state';\n\n@Component({\n    templateUrl: './client-list.component.html'\n})\nexport class ClientListComponent implements OnInit {\n\n    searchTerms: string[] = [];\n    clients$: Observable<IClient[]>;\n\n    constructor(private store: Store<AppState>) { }\n\n    ngOnInit() {\n        this.clients$ = this.store.pipe(select(getClientState))\n    }\n}\n","module.exports = \"<ng-container *ngIf=\\\"client$ | async as client\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"container-fluid d-flex align-items-center py-2\\\">\\n            <span class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"client.colour\\\"></span>\\n            <div class=\\\"h2\\\">{{ client.name }}</div>\\n            <div class=\\\"page-header-actions\\\">\\n                <a class=\\\"button button-white\\\" [routerLink]=\\\"['/clients', client.id, 'detail']\\\">Edit</a>\\n                <a class=\\\"button button-white button-clear\\\" [routerLink]=\\\"['/clients', client.id, 'delete']\\\">Delete</a>\\n            </div>\\n        </div>\\n        <div class=\\\"container-fluid\\\">\\n            <ul [tabs]=\\\"(tabs$ | async).client\\\" [type]=\\\"'client'\\\" (activeTab)=\\\"selectedTab = $event\\\" class=\\\"tabs\\\"></ul>\\n        </div>\\n    </div>\\n    <div class=\\\"container-fluid inner-content\\\">\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"selectedTab.title == 'Detail'\\\">\\n            <div class=\\\"col-lg-3\\\">\\n                <p class=\\\"strong\\\">Email Address</p>\\n                <p>\\n                    <a *ngIf=\\\"client.email_address; else emptyValue\\\" href=\\\"mailto://{{ client.email_address }}\\\" class=\\\"underline-dotted\\\">{{ client.email_address }}</a>\\n                </p>\\n                <hr/>\\n                <p class=\\\"strong\\\">Phone Number</p>\\n                <p>\\n                    <ng-container *ngIf=\\\"client.phone_number; else emptyValue\\\">\\n                        <a href=\\\"tel:{{ client.phone_number }}\\\" class=\\\"underline-dotted\\\">{{ client.phone_number }}</a>\\n                        <a *ngIf=\\\"(me$ | async)?.is_gradwell_enabled\\\" (click)=\\\"call(client.phone_number)\\\" class=\\\"pointer\\\"><i class=\\\"icon-phone c-red\\\"></i></a>\\n                    </ng-container>    \\n                </p>\\n                <hr/>\\n                <p class=\\\"strong\\\">Website</p>\\n                <p>\\n                    <a *ngIf=\\\"client.website; else emptyValue\\\" href=\\\"{{ client.website }}\\\" class=\\\"underline-dotted\\\">{{ client.website }}</a>\\n                </p>\\n                <hr/>\\n                <p class=\\\"strong\\\">Address</p>\\n                <p class=\\\"ws-pre-wrap\\\">{{ client | get:'address' }}</p>\\n            </div>\\n            <div class=\\\"col-lg-9\\\">\\n                <div class=\\\"panel panel-dark\\\">\\n                    <p class=\\\"strong\\\">Notes</p>\\n                    <p class=\\\"ws-pre-wrap\\\">{{ client | get:'notes' }}</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panel\\\" *ngIf=\\\"selectedTab.title == 'Jobs'\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-6\\\"><search [(ngModel)]=\\\"openSearchTerms\\\"></search></div>\\n                <div class=\\\"col-6\\\"><a class=\\\"button button-white pull-right\\\" [routerLink]=\\\"['/clients', client.id, 'jobs', 'new']\\\">Add Job</a></div>\\n            </div>\\n            <table class=\\\"table-hover\\\">\\n                <thead>\\n                    <tr>\\n                        <th class=\\\"keep-min-width pointer\\\" (click)=\\\"orderOpenJobs('id')\\\">\\n                            ID <i *ngIf=\\\"openOrderBy == 'id'\\\" [class.icon-up-dir]=\\\"openOrderType == 'asc'\\\" [class.icon-down-dir]=\\\"openOrderType == 'desc'\\\"></i>\\n                        </th>\\n                        <th class=\\\"pointer\\\" (click)=\\\"orderOpenJobs('title')\\\">\\n                            Title <i *ngIf=\\\"openOrderBy == 'title'\\\" [class.icon-up-dir]=\\\"openOrderType == 'asc'\\\" [class.icon-down-dir]=\\\"openOrderType == 'desc'\\\"></i>\\n                        </th>\\n                        <th class=\\\"keep-min-width pointer\\\" (click)=\\\"orderOpenJobs('_status.title')\\\">\\n                            Status <i *ngIf=\\\"openOrderBy == '_status.title'\\\" [class.icon-up-dir]=\\\"openOrderType == 'asc'\\\" [class.icon-down-dir]=\\\"openOrderType == 'desc'\\\"></i>\\n                        </th>\\n                    </tr>\\n                </thead>\\n                <ng-container *ngIf=\\\"jobs$ | async | openJobs | jobSearch:openSearchTerms | orderBy : [openOrderBy] : [openOrderType] as jobs\\\">\\n                <tbody *ngIf=\\\"jobs.length > 0; else emptyJobs\\\">\\n                    <tr class=\\\"pointer\\\" [routerLink]=\\\"['/clients', job.client, 'jobs', job.id]\\\" *ngFor=\\\"let job of jobs\\\">\\n                        <td class=\\\"keep-min-width\\\">{{ job.id }}</td>\\n                        <td>{{ job.title }}</td>\\n                        <td class=\\\"keep-min-width\\\">{{ job | get:'_status.title' }}</td>\\n                    </tr>\\n                </tbody>\\n                </ng-container>\\n            </table>\\n        </div>\\n\\n        <div class=\\\"panel\\\" *ngIf=\\\"selectedTab.title == 'Closed Jobs'\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-6\\\"><search [(ngModel)]=\\\"closedSearchTerms\\\"></search></div>\\n            </div>\\n            <table class=\\\"table-hover\\\">\\n                <thead>\\n                    <tr>\\n                        <th class=\\\"keep-min-width pointer\\\" (click)=\\\"orderClosedJobs('id')\\\">\\n                            ID <i *ngIf=\\\"closedOrderBy == 'id'\\\" [class.icon-up-dir]=\\\"closedOrderType == 'asc'\\\" [class.icon-down-dir]=\\\"closedOrderType == 'desc'\\\"></i>\\n                        </th>\\n                        <th class=\\\"pointer\\\" (click)=\\\"orderClosedJobs('title')\\\">\\n                            Title <i *ngIf=\\\"closedOrderBy == 'title'\\\" [class.icon-up-dir]=\\\"closedOrderType == 'asc'\\\" [class.icon-down-dir]=\\\"closedOrderType == 'desc'\\\"></i>\\n                        </th>\\n                        <th class=\\\"keep-min-width pointer\\\" (click)=\\\"orderClosedJobs('_status.title')\\\">\\n                            Status <i *ngIf=\\\"closedOrderBy == '_status.title'\\\" [class.icon-up-dir]=\\\"closedOrderType == 'asc'\\\" [class.icon-down-dir]=\\\"closedOrderType == 'desc'\\\"></i>\\n                        </th>\\n                    </tr>\\n                </thead>\\n                <ng-container *ngIf=\\\"jobs$ | async | closedJobs | jobSearch:closedSearchTerms | orderBy : [closedOrderBy] : [closedOrderType] as jobs\\\">\\n                <tbody *ngIf=\\\"jobs.length > 0; else emptyJobs\\\">\\n                    <tr class=\\\"pointer\\\" [routerLink]=\\\"['/clients', job.client, 'jobs', job.id]\\\" *ngFor=\\\"let job of jobs\\\">\\n                        <td class=\\\"keep-min-width\\\">{{ job.id }}</td>\\n                        <td>{{ job.title }}</td>\\n                        <td class=\\\"keep-min-width\\\">{{ job | get:'_status.title' }}</td>\\n                    </tr>\\n                </tbody>\\n                </ng-container>\\n            </table>\\n        </div>\\n\\n        <div class=\\\"panel\\\" *ngIf=\\\"selectedTab.title == 'Contacts'\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\"><a class=\\\"button button-white pull-right\\\" [routerLink]=\\\"['/clients', client.id, 'contacts', 'new']\\\">Add Contact</a></div>\\n                </div>\\n                <table class=\\\"table-hover\\\">\\n                <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Email Address</th>\\n                        <th>Phone Number</th>\\n                        <th>Mobile Number</th>\\n                        <th>Position</th>\\n                        <th>Tags</th>\\n                    </tr>\\n                </thead>\\n                <ng-container *ngIf=\\\"contacts$ | async as contacts\\\">\\n                <tbody *ngIf=\\\"contacts.length > 0; else emptyContacts\\\">\\n                    <tr class=\\\"pointer\\\" [routerLink]=\\\"['/clients', client.id, 'contacts', contact.id]\\\" *ngFor=\\\"let contact of contacts\\\">\\n                        <td>{{ contact.first_name }} {{ contact.last_name }}</td>\\n                        <td>{{ contact | get:'email_address' }}</td>\\n                        <td>{{ contact | get:'phone_number' }}</td>\\n                        <td>{{ contact | get:'mobile_number' }}</td>\\n                        <td>{{ contact | get:'_position.title' }}</td>\\n                        <td><ul class=\\\"tags\\\"><li tag [id]=\\\"tag.tag\\\" class=\\\"tag\\\" *ngFor=\\\"let tag of contact._tags\\\"></li></ul></td>\\n                    </tr>\\n                </tbody>\\n                </ng-container>\\n            </table>\\n        </div>\\n\\n    </div>\\n</ng-container>\\n\\n<ng-template #emptyValue><span>-</span></ng-template>\\n<ng-template #emptyJobs><tbody><tr><td colspan=\\\"3\\\">No jobs found.</td></tr></tbody></ng-template>\\n<ng-template #emptyContacts><tbody><tr><td colspan=\\\"5\\\">No contacts found.</td></tr></tbody></ng-template>\"","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppState, getMeState, getTabState } from '../state/state';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { getClientCollectionById, getClientContactCollectionForClient } from '../state/selectors/client';\nimport { getJobCollectionForClient } from '../state/selectors/job';\nimport { IClient } from '../state/reducers/client';\nimport { IClientContact } from '../state/reducers/clientcontact';\nimport { IJob } from './../state/reducers/job';\nimport { IMakeCall } from '../state/models';\nimport { IMe } from './../state/reducers/me';\nimport { ITab, ITabs } from '../state/reducers/tabs';\nimport { Observable, Subscription } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\n\n\n\n@Component({\n    templateUrl: './client.component.html'\n})\nexport class ClientComponent implements OnDestroy, OnInit {\n\n    client$: Observable<IClient>;\n    contacts$: Observable<IClientContact[]>;\n    jobs$: Observable<IJob[]>;\n    me$: Observable<IMe>;\n    tabs$: Observable<ITabs>;\n    openSearchTerms: string[] = [];\n    closedSearchTerms: string[] = [];\n    selectedTab: ITab;\n    openOrderBy: string = 'id';\n    openOrderType: string = 'asc';\n    closedOrderBy: string = 'id';\n    closedOrderType: string = 'asc';\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private route: ActivatedRoute,\n        private store: Store<AppState>\n    ) { }\n\n    ngOnInit() {\n        const subscription = this.route.params.subscribe(\n            (params) => {\n                this.client$ = this.store.pipe(select(getClientCollectionById(+params.id)));\n                this.contacts$ = this.store.pipe(select(getClientContactCollectionForClient(+params.id)));\n                this.jobs$ = this.store.pipe(select(getJobCollectionForClient(+params.id)));\n            }\n        );\n        this.subscriptions.push(subscription);\n        // data subscriptions\n        this.tabs$ = this.store.pipe(select(getTabState));\n        this.me$ = this.store.pipe(select(getMeState));\n    }\n\n    ngOnDestroy() {\n        _.each(this.subscriptions, s => s.unsubscribe());\n    }\n\n    call(number: string) {\n        const payload: IMakeCall = {telephone_number: number};\n        this.store.dispatch({type: actions.MakeCallActions.MAKE_CALL, payload})\n    }\n\n    orderOpenJobs(by: string) {\n        if (by != this.openOrderBy) {\n            this.openOrderType = 'asc';\n        } else {\n            this.openOrderType = this.openOrderType == 'asc' ? 'desc' : 'asc';\n        }\n        this.openOrderBy = by;\n    }\n\n    orderClosedJobs(by: string) {\n        if (by != this.closedOrderBy) {\n            this.closedOrderType = 'asc';\n        } else {\n            this.closedOrderType = this.closedOrderType == 'asc' ? 'desc' : 'asc';\n        }\n        this.closedOrderBy = by;\n    }\n}\n","module.exports = \"<div class=\\\"button button-shadylady button-outline border-style-dotted mt-h mb-1\\\" (click)=\\\"newTask()\\\">\\n    <i class=\\\"icon-plus\\\"></i> {{ status.title }}\\n</div>\\n\\n<div class=\\\"board-card\\\" *ngIf=\\\"newFormOpen\\\">\\n    <textarea autoFocus autoResize [formControl]=\\\"newForm.controls.title\\\" (keydown.enter)=\\\"newForm.save($event); false\\\"></textarea>\\n    <button class=\\\"button\\\" (click)=\\\"newForm.save($event)\\\">Save</button>\\n</div>\\n\\n<div class=\\\"board-card-wrapper\\\"\\n    cdkDropList\\n    [cdkDropListData]=\\\"tasks\\\"\\n    (cdkDropListDropped)=\\\"dropTask($event)\\\"\\n    *ngIf=\\\"tasks\\\">\\n    <div task-card \\n        [id]=\\\"task.id\\\"\\n        cdkDrag\\n        [cdkDragData]=\\\"task\\\"\\n        (click)=\\\"selectedTaskId=task.id\\\"\\n        *ngFor=\\\"let task of tasks\\\">\\n    </div>\\n</div>\\n\\n<task-form\\n    [id]=\\\"selectedTaskId\\\"\\n    (close)=\\\"selectedTaskId = null\\\"\\n    *ngIf=\\\"selectedTaskId\\\">\\n</task-form>\\n\"","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { AppState } from '../state/state';\nimport {\n    Component,\n    Input,\n    OnDestroy,\n    OnInit\n    } from '@angular/core';\nimport { ITask } from '../state/reducers/task';\nimport { ITaskStatus } from '../state/reducers/taskstatus';\nimport { Subscription } from 'rxjs';\nimport { TaskCreateForm } from '../forms/task-create.form';\nimport { calculateOrder } from '../utils/task';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\n\n@Component({\n    selector: 'job-board-column, [job-board-column]',\n    templateUrl: './job-board-column.component.html'\n})\nexport class JobBoardColumnComponent implements OnDestroy, OnInit {\n\n    @Input() jobId: number;\n    @Input() status: ITaskStatus;\n    @Input() tasks: ITask[];\n\n    newForm: TaskCreateForm;\n    newFormOpen = false;\n    selectedTaskId: number = null;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) { }\n\n    ngOnInit() {\n        this.newForm = new TaskCreateForm(this.store, this.actionsSubject);\n        this.subscriptions.push(this.newForm.formSaved.subscribe(() => this.newFormOpen = false));\n    }\n\n    dropTask(event: CdkDragDrop<ITask[]>) {\n        // move the item in the ui\n        if (event.previousContainer === event.container) {\n            moveItemInArray(\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex\n            );\n          } else {\n            transferArrayItem(\n                event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex\n            );\n        }\n        // calculate the correct order\n        let order = calculateOrder(event.currentIndex, event.container.data, event.item.data);\n        // dispatch an action to patch the task's new order and status\n        const payload = {\n            id: event.item.data.id,\n            status: this.status.id,\n            order: order\n        }\n        this.store.dispatch({type: actions.TaskActions.PATCH, payload});\n    }\n\n    newTask() {\n        if (this.newFormOpen) {\n            this.newFormOpen = false;\n            return;\n        }\n\n        const data = {\n            job: this.jobId,\n            status: this.status.id,\n            order: this.tasks.length > 0 ? this.tasks[0].order / 2 : 16384\n        }\n        this.newForm.patchValue(data);\n        this.newFormOpen = true;\n    }\n\n    ngOnDestroy() {\n        _.each(this.subscriptions, s => s.unsubscribe());\n    }\n\n}\n","module.exports = \"<ng-container *ngIf=\\\"job\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"container-fluid d-flex align-items-center py-2\\\">\\n            <span class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"job.colour\\\"></span>\\n            <div class=\\\"h2\\\">\\n                <span>{{ job.id }} : </span>\\n                <a class=\\\"underline-dotted\\\" [routerLink]=\\\"['/clients', job.client]\\\">{{ job | get:'_client.name' }}</a> /\\n                <a class=\\\"underline-dotted\\\" [routerLink]=\\\"['/clients', job.client, 'jobs', job.id]\\\">{{ job | get:'title' }}</a>\\n            </div>\\n            <div class=\\\"page-header-actions\\\">\\n                <a *ngIf=\\\"canDelete\\\" class=\\\"button button-white\\\" (click)=\\\"delete()\\\">Confirm</a>\\n                <a [routerLink]=\\\"['/clients', job.client, 'jobs', job.id]\\\" class=\\\"button button-white button-clear\\\">Cancel</a>\\n            </div>\\n        </div>\\n        <div class=\\\"container-fluid\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li class=\\\"active\\\">Delete</li>\\n            </ul>\\n        </div>\\n    </div>\\n    <div class=\\\"container-fluid inner-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div class=\\\"panel panel-dark\\\" *ngIf=\\\"canDelete\\\">\\n                    <p class=\\\"strong\\\">Confirm</p>\\n                    <p class=\\\"ws-pre-wrap\\\">Please confirm you wish to delete this job</p>\\n                </div>\\n                <div class=\\\"panel panel-dark\\\" *ngIf=\\\"!canDelete\\\">\\n                    <p class=\\\"strong\\\">Oops</p>\\n                    <p class=\\\"ws-pre-wrap\\\">You cannot delete this job until all related data has been deleted first</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-container>\\n\"","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppState } from '../state/state';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { DeletableService } from '../services/deletable';\nimport { filter, flatMap } from 'rxjs/operators';\nimport { getJobCollectionById } from '../state/selectors/job';\nimport { IJob } from '../state/reducers/job';\nimport { select, Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    templateUrl: './job-delete.component.html'\n})\nexport class JobDeleteComponent implements OnDestroy, OnInit {\n\n    canDelete: boolean;\n    job: IJob;\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private store: Store<AppState>,\n        private deletable: DeletableService\n    ) { }\n\n    ngOnInit() {\n        const subscription = this.route.params.pipe(\n            filter(params => _.get(params, 'id')),\n            flatMap(params => this.store.pipe(select(getJobCollectionById(+params.id))))\n        ).subscribe(\n            job => {\n                if (!job) { return; }\n                this.job = job;\n                this.deletable.check(DeletableService.JOB, this.job.id).then(check => this.canDelete = check);\n            }\n        );\n        this.subscriptions.push(subscription);\n    }\n\n    ngOnDestroy() {\n        _.each(this.subscriptions, s => s.unsubscribe());\n    }\n\n    delete() {\n        this.store.dispatch({type: actions.JobActions.REMOVE, payload: this.job});\n        this.router.navigate(['/clients', this.job.client]);\n    }\n}\n","module.exports = \"<ng-container *ngIf=\\\"form\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"container-fluid d-flex align-items-center py-2\\\">\\n            <ng-container *ngIf=\\\"job; else newJob;\\\">\\n                <span class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"job.colour\\\"></span>\\n                <div class=\\\"h2\\\">{{ job.id }} : {{ client?.name }} / {{ job.title }}</div>\\n                <div class=\\\"page-header-actions\\\">\\n                    <a class=\\\"button button-white\\\" (click)=\\\"form.save($event)\\\">Save</a>\\n                    <a [routerLink]=\\\"['/clients', params.client_id, 'jobs', params.id]\\\" class=\\\"button button-white button-clear\\\">Cancel</a>\\n                </div>\\n            </ng-container>\\n        </div>\\n        <div class=\\\"container-fluid\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li class=\\\"active\\\">Detail</li>\\n            </ul>\\n        </div>\\n    </div>\\n    <div class=\\\"container-fluid inner-content\\\">\\n        <label>Title</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.title\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.title\\\">Please enter a title</p>\\n\\n        <label>Description</label>\\n        <textarea autoResize [formControl]=\\\"form.controls.description\\\"></textarea>\\n\\n        <label>Colour</label>\\n        <input type=\\\"text\\\" [formControl]=\\\"form.controls.colour\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.colour\\\">Please enter a hex colour (ie #fff or #ffffff)</p>\\n\\n        <label>Type</label>\\n        <select [formControl]=\\\"form.controls.type\\\">\\n            <option [ngValue]=\\\"null\\\">Please select...</option>\\n            <option [ngValue]=\\\"option.id\\\" *ngFor=\\\"let option of jobTypes$ | async\\\">{{ option.title }}</option>\\n        </select>\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.type\\\">Please choose a type</p>\\n\\n        <label>Estimated Hours</label>\\n        <input type=\\\"number\\\" [formControl]=\\\"form.controls.estimated_hours\\\" />\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.estimated_hours\\\">Please enter a valid number</p>\\n\\n        <label>Status</label>\\n        <select [formControl]=\\\"form.controls.status\\\">\\n            <option [ngValue]=\\\"null\\\">Please select...</option>\\n            <option [ngValue]=\\\"option.id\\\" *ngFor=\\\"let option of jobStatuses$ | async\\\">{{ option.title }}</option>\\n        </select>\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.status\\\">Please choose a status</p>\\n\\n        <label>Billed To</label>\\n        <div class=\\\"icon-input\\\">\\n            <input type=\\\"text\\\"\\n                [matDatepicker]=\\\"picker\\\"\\n                [formControl]=\\\"form.controls.billed_to\\\"\\n                (click)=\\\"picker.open()\\\">\\n            <span class=\\\"icon-calendar\\\"></span>\\n        </div>\\n        <mat-datepicker #picker></mat-datepicker>\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.billed_to\\\">Please enter a date</p>\\n        \\n    </div>\\n</ng-container>\\n\\n<ng-template #newJob>\\n    <span class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"client?.colour\\\"></span>\\n    <div class=\\\"h2\\\">{{ client?.name }} / New</div>\\n    <div class=\\\"page-header-actions\\\">\\n        <button class=\\\"button button-white\\\" type=\\\"submit\\\" (click)=\\\"form.save($event)\\\">Save</button>\\n        <a [routerLink]=\\\"['/clients', params.client_id]\\\" class=\\\"button button-white button-clear\\\">Cancel</a>\\n    </div>\\n</ng-template>\"","import * as _ from 'lodash';\n\nimport { ActionsSubject, Store, select } from '@ngrx/store';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppState, getJobStatusState, getJobTypeState } from './../state/state';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription, combineLatest, of } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\nimport { IClient } from '../state/reducers/client';\nimport { IFormActionResult } from '../forms/base.form';\nimport { IJob } from '../state/reducers/job';\nimport { IJobStatus } from './../state/reducers/jobstatus';\nimport { IJobType } from '../state/reducers/jobtype';\nimport { JobDetailForm } from '../forms/job-detail.form';\nimport { getClientCollectionById } from '../state/selectors/client';\nimport { getJobCollectionById } from '../state/selectors/job';\n\n@Component({\n    templateUrl: './job-detail-form.component.html'\n})\nexport class JobDetailFormComponent implements OnDestroy, OnInit {\n\n    form: JobDetailForm;\n    client: IClient;\n    job: IJob;\n    jobStatuses$: Observable<IJobStatus[]>;\n    jobTypes$: Observable<IJobType[]>;\n    params: any;\n    \n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) {\n        this.form = new JobDetailForm(this.store, this.actionsSubject, {alwaysEditable: true});\n    }\n\n    ngOnInit() {\n        this.jobStatuses$ = this.store.pipe(select(getJobStatusState));\n        this.jobTypes$ = this.store.pipe(select(getJobTypeState));\n        \n        const paramsObsv = this.route.params.pipe(\n            mergeMap(\n                params => combineLatest(\n                    of(params),\n                    this.store.pipe(select(getClientCollectionById(+params.client_id))),\n                    this.store.pipe(select(getJobCollectionById(+params.id)))\n                )\n            )\n        ).subscribe(\n            ([params, client, job]) => {\n                this.params = params\n                this.client = client;\n                this.job = job;\n                if (job) {\n                    this.form.load(this.job);\n                } else if (client) {\n                    this.form.load({client: client.id, colour: client.colour});\n                }\n                this.form.formSaved.pipe(\n                    take(1)\n                ).subscribe(\n                    (result: IFormActionResult) => {\n                        this.router.navigate(['/clients', this.params.client_id, 'jobs', result.payload.id]);\n                    }\n                )\n            }\n        )\n        this.subscriptions.push(paramsObsv);\n    }\n\n    ngOnDestroy() {\n        _.each(this.subscriptions, s => s.unsubscribe());\n    }\n\n}\n","module.exports = \"<ng-container *ngIf=\\\"form\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"container-fluid d-flex align-items-center py-2\\\">\\n            <ng-container>\\n                <span class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"job?.colour\\\"></span>\\n                <div class=\\\"h2\\\">\\n                    <span>{{ params.job_id }} : </span>\\n                    <a class=\\\"underline-dotted\\\" [routerLink]=\\\"['/clients', params.client_id]\\\">{{ client | get:'name' }}</a> /\\n                    <a class=\\\"underline-dotted\\\" [routerLink]=\\\"['/clients', params.client_id, 'jobs', params.job_id]\\\">{{ job | get:'title' }}</a>\\n                </div>\\n                <div class=\\\"page-header-actions\\\">\\n                    <a class=\\\"button button-white\\\" (click)=\\\"form.save($event)\\\">Save</a>\\n                    <a [routerLink]=\\\"['/clients', params.client_id, 'jobs', params.job_id]\\\" class=\\\"button button-white button-clear\\\">Cancel</a>\\n                </div>\\n            </ng-container>\\n        </div>\\n        <div class=\\\"container-fluid\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li class=\\\"active\\\">Recurring Cost Detail</li>\\n            </ul>\\n        </div>\\n    </div>\\n    <div class=\\\"container-fluid inner-content\\\">\\n        <label>Type</label>\\n        <select [formControl]=\\\"form.controls.type\\\">\\n            <option [ngValue]=\\\"null\\\">Please select...</option>\\n            <option [ngValue]=\\\"option.id\\\" *ngFor=\\\"let option of recurringCostTypes$ | async\\\">{{ option.title }}</option>\\n        </select>\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.type\\\">Please choose a type</p>\\n\\n        <label>Last Invoiced Date</label>\\n        <div class=\\\"icon-input\\\">\\n            <input type=\\\"text\\\"\\n                [matDatepicker]=\\\"picker\\\"\\n                [formControl]=\\\"form.controls.last_invoiced_date\\\"\\n                (click)=\\\"picker.open()\\\">\\n            <span class=\\\"icon-calendar\\\"></span>\\n        </div>\\n        <mat-datepicker #picker></mat-datepicker>\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.last_invoiced_date\\\">Please choose a last invoiced date</p>\\n\\n        <label>Billing Interval</label>\\n        <input type=\\\"number\\\" [formControl]=\\\"form.controls.billing_interval\\\" min=\\\"0\\\" step=\\\"1\\\">\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.billing_interval\\\">Please choose a valid billing interval</p>\\n\\n        <label>Billing Frequency</label>\\n        <select [formControl]=\\\"form.controls.billing_frequency\\\">\\n            <option [ngValue]=\\\"null\\\">Please select...</option>\\n            <option [ngValue]=\\\"option.id\\\" *ngFor=\\\"let option of billingFrequencies$ | async\\\">{{ option.title }}</option>\\n        </select>\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.billing_frequency\\\">Please choose a billing frequency</p>\\n\\n        <label>Payment Option</label>\\n        <select [formControl]=\\\"form.controls.payment_option\\\">\\n            <option [ngValue]=\\\"null\\\">Please select...</option>\\n            <option [ngValue]=\\\"option.id\\\" *ngFor=\\\"let option of paymentOptions$ | async\\\">{{ option.title }}</option>\\n        </select>\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.payment_option\\\">Please choose a billing frequency</p>\\n    </div>\\n</ng-container>\\n\"","import * as _ from 'lodash';\nimport { ActionsSubject, select, Store } from '@ngrx/store';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AppState,\n    getBillingFrequencyState,\n    getPaymentOptionState,\n    getRecurringCostTypeState\n    } from './../state/state';\nimport {\n    combineLatest,\n    Observable,\n    of,\n    Subscription\n    } from 'rxjs';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { getClientCollectionById } from '../state/selectors/client';\nimport { getJobCollectionById, getJobRecurringCostCollectionById } from '../state/selectors/job';\nimport { IBillingFrequency } from '../state/reducers/billingfrequency';\nimport { IClient } from '../state/reducers/client';\nimport { IFormActionResult } from '../forms/base.form';\nimport { IJob } from '../state/reducers/job';\nimport { IJobRecurringCost } from '../state/reducers/jobrecurringcost';\nimport { IPaymentOption } from '../state/reducers/paymentoption';\nimport { IRecurringCostType } from '../state/reducers/recurringcosttype';\nimport { JobRecurringCostForm } from '../forms/job-recurring-cost.form';\nimport { mergeMap, take } from 'rxjs/operators';\n\n@Component({\n    templateUrl: './job-recurring-cost-form.component.html'\n})\nexport class JobRecurringCostFormComponent implements OnDestroy, OnInit {\n\n    form: JobRecurringCostForm;\n    client: IClient;\n    job: IJob;\n    recurringCost: IJobRecurringCost;\n    billingFrequencies$: Observable<IBillingFrequency[]>;\n    paymentOptions$: Observable<IPaymentOption[]>;\n    recurringCostTypes$: Observable<IRecurringCostType[]>;\n    params: any;\n    \n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) {\n        this.form = new JobRecurringCostForm(this.store, this.actionsSubject, {alwaysEditable: true});\n    }\n\n    ngOnInit() {\n        this.billingFrequencies$ = this.store.pipe(select(getBillingFrequencyState));\n        this.paymentOptions$ = this.store.pipe(select(getPaymentOptionState));\n        this.recurringCostTypes$ = this.store.pipe(select(getRecurringCostTypeState));\n        \n        const paramsObsv = this.route.params.pipe(\n            mergeMap(\n                params => combineLatest(\n                    of(params),\n                    this.store.pipe(select(getClientCollectionById(+params.client_id))),\n                    this.store.pipe(select(getJobCollectionById(+params.job_id))),\n                    this.store.pipe(select(getJobRecurringCostCollectionById(+params.id)))\n                )\n            )\n        ).subscribe(\n            ([params, client, job, recurringCost]) => {\n                this.params = params\n                this.client = client;\n                this.job = job;\n                this.recurringCost = recurringCost;\n                if (recurringCost) {\n                    this.form.load(recurringCost);\n                } else if (job) {\n                    this.form.load({job: job.id});\n                }\n                this.form.formSaved.pipe(\n                    take(1)\n                ).subscribe(\n                    (result: IFormActionResult) => {\n                        this.router.navigate(['/clients', this.params.client_id, 'jobs', this.params.job_id]);\n                    }\n                )\n            }\n        )\n        this.subscriptions.push(paramsObsv);\n    }\n\n    ngOnDestroy() {\n        _.each(this.subscriptions, s => s.unsubscribe());\n    }\n\n}\n","module.exports = \"<ng-container *ngIf=\\\"form\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"container-fluid d-flex align-items-center py-2\\\">\\n            <ng-container>\\n                <span class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"job?.colour\\\"></span>\\n                <div class=\\\"h2\\\">\\n                    <span>{{ params.job_id }} : </span>\\n                    <a class=\\\"underline-dotted\\\" [routerLink]=\\\"['/clients', params.client_id]\\\">{{ client | get:'name' }}</a> /\\n                    <a class=\\\"underline-dotted\\\" [routerLink]=\\\"['/clients', params.client_id, 'jobs', params.job_id]\\\">{{ job | get:'title' }}</a>\\n                </div>\\n                <div class=\\\"page-header-actions\\\">\\n                    <a class=\\\"button button-white\\\" (click)=\\\"form.save($event)\\\">Save</a>\\n                    <a [routerLink]=\\\"['/clients', params.client_id, 'jobs', params.job_id]\\\" class=\\\"button button-white button-clear\\\">Cancel</a>\\n                </div>\\n            </ng-container>\\n        </div>\\n        <div class=\\\"container-fluid\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li class=\\\"active\\\">Relationship Detail</li>\\n            </ul>\\n        </div>\\n    </div>\\n    <div class=\\\"container-fluid inner-content\\\">\\n        <label>User</label>\\n        <select [formControl]=\\\"form.controls.user\\\">\\n            <option [ngValue]=\\\"null\\\">Please select...</option>\\n            <option [ngValue]=\\\"option.id\\\" *ngFor=\\\"let option of users$ | async\\\">{{ option.full_name }}</option>\\n        </select>\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.user\\\">Please choose a user</p>\\n\\n        <label>Relationship</label>\\n        <select [formControl]=\\\"form.controls.relationship\\\">\\n            <option [ngValue]=\\\"null\\\">Please select...</option>\\n            <option [ngValue]=\\\"option.id\\\" *ngFor=\\\"let option of relationships$ | async\\\">{{ option.title }}</option>\\n        </select>\\n        <p class=\\\"c-red\\\" *formError=\\\"form.controls.relationship\\\">Please choose a relationship</p>\\n    </div>\\n</ng-container>\"","import * as _ from 'lodash';\nimport { ActionsSubject, select, Store } from '@ngrx/store';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppState, getRelationshipState } from './../state/state';\nimport {\n    combineLatest,\n    Observable,\n    of,\n    Subscription\n    } from 'rxjs';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { getClientCollectionById } from '../state/selectors/client';\nimport { getJobCollectionById, getJobRelationshipCollectionById } from '../state/selectors/job';\nimport { IClient } from '../state/reducers/client';\nimport { IFormActionResult } from '../forms/base.form';\nimport { IJob } from '../state/reducers/job';\nimport { IJobRelationship } from '../state/reducers/jobrelationship';\nimport { IRelationship } from '../state/reducers/relationship';\nimport { IUser } from '../state/reducers/user';\nimport { JobRelationshipForm } from '../forms/job-relationship.form';\nimport { mergeMap, take } from 'rxjs/operators';\nimport { getActiveUsers } from '../state/selectors/user';\n\n@Component({\n    templateUrl: './job-relationship-form.component.html'\n})\nexport class JobRelationshipFormComponent implements OnDestroy, OnInit {\n\n    form: JobRelationshipForm;\n    client: IClient;\n    job: IJob;\n    relationship: IJobRelationship;\n    relationships$: Observable<IRelationship[]>;\n    users$: Observable<IUser[]>;\n    params: any;\n    \n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) {\n        this.form = new JobRelationshipForm(this.store, this.actionsSubject, {alwaysEditable: true});\n    }\n\n    ngOnInit() {\n        this.relationships$ = this.store.pipe(select(getRelationshipState));\n        this.users$ = this.store.pipe(select(getActiveUsers));\n        \n        const paramsObsv = this.route.params.pipe(\n            mergeMap(\n                params => combineLatest(\n                    of(params),\n                    this.store.pipe(select(getClientCollectionById(+params.client_id))),\n                    this.store.pipe(select(getJobCollectionById(+params.job_id))),\n                    this.store.pipe(select(getJobRelationshipCollectionById(+params.id)))\n                )\n            )\n        ).subscribe(\n            ([params, client, job, relationship]) => {\n                this.params = params\n                this.client = client;\n                this.job = job;\n                this.relationship = relationship;\n                if (relationship) {\n                    this.form.load(relationship);\n                } else if (job) {\n                    this.form.load({job: job.id});\n                }\n                this.form.formSaved.pipe(\n                    take(1)\n                ).subscribe(\n                    (result: IFormActionResult) => {\n                        this.router.navigate(['/clients', this.params.client_id, 'jobs', this.params.job_id]);\n                    }\n                )\n            }\n        )\n        this.subscriptions.push(paramsObsv);\n    }\n\n    ngOnDestroy() {\n        _.each(this.subscriptions, s => s.unsubscribe());\n    }\n\n}\n","module.exports = \"<div [class.flex-fill-container]=\\\"selectedTab.title == 'Tasks'\\\" *ngIf=\\\"job$ | async as job\\\">\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"container-fluid d-flex align-items-center py-2\\\">\\n            <span class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"job.colour\\\"></span>\\n            <div class=\\\"h2\\\">\\n                <span>{{ job.id }} : </span>\\n                <a [routerLink]=\\\"['/clients', job.client]\\\" class=\\\"underline-dotted\\\">{{ job | get:'_client.name' }}</a> /\\n                <a>{{ job.title }}</a>\\n            </div>\\n            <div class=\\\"page-header-actions\\\">\\n                <a class=\\\"button button-white\\\" [routerLink]=\\\"['/clients', job.client, 'jobs', job.id, 'detail']\\\">Edit</a>\\n                <a class=\\\"button button-white button-clear\\\" [routerLink]=\\\"['/clients', job.client, 'jobs', job.id, 'delete']\\\">Delete</a>\\n            </div>\\n        </div>\\n        <div class=\\\"container-fluid\\\">\\n            <ul [tabs]=\\\"(tabs$ | async).job\\\" [type]=\\\"'job'\\\" (activeTab)=\\\"selectedTab = $event\\\" class=\\\"tabs\\\"></ul>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"container-fluid ov-hidden full-height\\\" *ngIf=\\\"selectedTab.title == 'Tasks'\\\">\\n        <div class=\\\"board-column-wrapper\\\" cdkDropListGroup>\\n            <div class=\\\"board-column\\\"\\n                job-board-column\\n                [jobId]=\\\"jobId\\\"\\n                [status]=\\\"status\\\"\\n                [tasks]=\\\"tasks$ | async | tasksByStatus:status.id\\\"\\n                *ngFor=\\\"let status of statuses$ | async\\\">\\n            </div>\\n        </div>\\n\\n        <div task-form [id]=\\\"selectedTaskId\\\" (close)=\\\"selectedTaskId = null\\\" *ngIf=\\\"selectedTaskId != null\\\"></div>\\n    \\n    </div>\\n    \\n    <div class=\\\"container-fluid inner-content\\\" *ngIf=\\\"selectedTab.title != 'Tasks'\\\">\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"selectedTab.title == 'Detail'\\\">\\n            <div class=\\\"col-lg-3\\\">\\n                <p class=\\\"strong\\\">Time Spent (hrs)</p>\\n                <p [class.c-red]=\\\"timings.is_over_allocated_hours\\\" *ngIf=\\\"timings$ | async as timings\\\">{{ timings.time_spent_hours }} of {{ timings.allocated_hours }}</p>\\n                <hr>\\n                <p class=\\\"strong\\\">Estimated (hrs)</p>\\n                <p>{{ job | get:'estimated_hours' }}</p>\\n                <hr/>\\n                <p class=\\\"strong\\\">Type</p>\\n                <p>{{ job | get:'_type.title' }}</p>\\n                <hr/>\\n                <p class=\\\"strong\\\">Status</p>\\n                <p>{{ job | get:'_status.title' }}</p>\\n                <hr/>\\n                <p class=\\\"strong\\\">Created at</p>\\n                <p>{{ job | get:'created_at' | date:'yyyy-MM-dd' }}</p>\\n                <hr/>\\n                <p class=\\\"strong\\\">Billed To</p>\\n                <p>{{ job | get:'billed_to' }}</p>\\n            </div>\\n            <div class=\\\"col-lg-9\\\">\\n                <div class=\\\"panel panel-dark\\\">\\n                    <p class=\\\"strong\\\">Description</p>\\n                    <p class=\\\"ws-pre-wrap\\\">{{ job | get:'description' }}</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panel\\\" *ngIf=\\\"selectedTab.title == 'Files'\\\">\\n            <dropzone [config]=\\\"dropzoneConfig\\\" [message]=\\\"'Click or drag files here to upload'\\\" (sending)=\\\"onFileSending($event)\\\" (success)=\\\"onFileSuccess($event)\\\"></dropzone>\\n            <table class=\\\"table-hover\\\">\\n                <thead>\\n                    <tr>\\n                        <th>File</th>\\n                        <th class=\\\"keep-min-width\\\">Size</th>\\n                        <th class=\\\"keep-min-width\\\"></th>\\n                        <th class=\\\"keep-min-width\\\"></th>\\n                    </tr>\\n                </thead>\\n                <ng-container *ngIf=\\\"files$ | async as files\\\">\\n                <tbody *ngIf=\\\"files.length > 0; else emptyFiles\\\">\\n                    <tr *ngFor=\\\"let file of files\\\">\\n                        <td>{{ file.name }}</td>\\n                        <td class=\\\"keep-min-width\\\">{{ file.size_mb }}</td>\\n                        <td class=\\\"keep-min-width\\\"><a class=\\\"pointer\\\" (click)=\\\"downloadFile(file)\\\"><i class=\\\"icon-download\\\"></i></a></td>\\n                        <td class=\\\"keep-min-width\\\"><a class=\\\"pointer\\\" (click)=\\\"deleteFile(file)\\\"><i class=\\\"icon-trash\\\"></i></a></td>\\n                    </tr>\\n                </tbody>\\n                </ng-container>\\n            </table>\\n        </div>\\n        \\n        <div class=\\\"panel\\\" *ngIf=\\\"selectedTab.title == 'Notes'\\\">\\n            <div class=\\\"row mb-1h\\\">\\n                <div class=\\\"col-1\\\"></div>\\n                <div class=\\\"col\\\">\\n                    <textarea autoResize placeholder=\\\"Write some notes\\\" [formControl]=\\\"newNoteForm.controls.note\\\"></textarea>\\n                    <button class=\\\"button button-primary pull-right\\\" (click)=\\\"newNoteForm.save($event)\\\">Add</button>\\n                </div>\\n            </div>\\n            <ng-container *ngFor=\\\"let note of notes$ | async\\\">\\n                <div class=\\\"row mb-1h\\\" *ngIf=\\\"getOrCreateEditNoteForm(note) as form\\\">\\n                    <div class=\\\"col-1\\\"><div avatar [id]=\\\"note.user\\\" class=\\\"avatar\\\"></div></div>\\n                    <div class=\\\"col\\\">\\n                        <div class=\\\"comment ws-pre-wrap\\\" *ngIf=\\\"!form.editable\\\">{{ note.note }}</div>\\n                        <textarea autoResize [formControl]=\\\"form.controls.note\\\" *ngIf=\\\"form.editable\\\"></textarea>\\n                        <span class=\\\"muted mr-1\\\">{{ note.updated_at | date:'MMM d, y, h:mm a' }}</span>\\n                        <ng-container *ngIf=\\\"!form.editable\\\">\\n                            <a class=\\\"button button-clear\\\" (click)=\\\"form.editable = true\\\">Edit</a> |\\n                            <a class=\\\"button button-clear\\\" *ngIf=\\\"!form.editable\\\" (click)=\\\"form.delete($event)\\\">Delete</a>\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"form.editable\\\">\\n                            <a class=\\\"button button-secondary\\\" (click)=\\\"form.save($event)\\\">Save</a>\\n                            <a class=\\\"button button-clear\\\" (click)=\\\"form.cancel($event)\\\">Cancel</a>\\n                        </ng-container>\\n                    </div>\\n                </div>\\n            </ng-container>\\n        </div>\\n\\n        <div class=\\\"panel\\\" *ngIf=\\\"selectedTab.title == 'Relationships'\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-6\\\"></div>\\n                <div class=\\\"col-6\\\">\\n                    <a class=\\\"button button-white pull-right\\\" [routerLink]=\\\"['/clients', job.client, 'jobs', job.id, 'relationships', 'add']\\\">Add Relationship</a>\\n                </div>\\n            </div>\\n            <table class=\\\"table-hover\\\">\\n                <thead>\\n                    <tr>\\n                        <th>User</th>\\n                        <th>Relationship</th>\\n                        <th></th>\\n                    </tr>\\n                </thead>\\n                <ng-container *ngIf=\\\"relationships$ | async as relationships\\\">\\n                <tbody *ngIf=\\\"relationships.length > 0; else emptyRelationships\\\">\\n                    <tr class=\\\"pointer\\\" [routerLink]=\\\"['/clients', job.client, 'jobs', job.id, 'relationships', relationship.id]\\\" *ngFor=\\\"let relationship of relationships\\\">\\n                        <td>{{ relationship | get:'_user.full_name' }}</td>\\n                        <td>{{ relationship | get:'_relationship.title' }}</td>\\n                        <td class=\\\"keep-min-width\\\"><a class=\\\"pointer\\\" (click)=\\\"deleteRelationship($event, relationship)\\\"><i class=\\\"icon-trash\\\"></i></a></td>\\n                    </tr>\\n                </tbody>\\n                </ng-container>\\n            </table>\\n        </div>\\n\\n        <div class=\\\"panel\\\" *ngIf=\\\"selectedTab.title == 'Recurring Costs'\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-6\\\"></div>\\n                <div class=\\\"col-6\\\">\\n                    <a class=\\\"button button-white pull-right\\\" [routerLink]=\\\"['/clients', job.client, 'jobs', job.id, 'recurring-costs', 'add']\\\">Add Recurring Cost</a>\\n                </div>\\n            </div>\\n            <table class=\\\"table-hover\\\">\\n                <thead>\\n                    <tr>\\n                        <th>Type</th>\\n                        <th>Last Invoiced Date</th>\\n                        <th>Billing Interval</th>\\n                        <th>Billing Frequency</th>\\n                        <th>Payment Option</th>\\n                        <th></th>\\n                    </tr>\\n                </thead>\\n                <ng-container *ngIf=\\\"recurringCosts$ | async as recurringCosts\\\">\\n                <tbody *ngIf=\\\"recurringCosts.length > 0; else emptyRecurringCosts\\\">\\n                    <tr class=\\\"pointer\\\" [routerLink]=\\\"['/clients', job.client, 'jobs', job.id, 'recurring-costs', recurringCost.id]\\\" *ngFor=\\\"let recurringCost of recurringCosts\\\">\\n                        <td>{{ recurringCost | get:'_type.title' }}</td>\\n                        <td>{{ recurringCost | get:'last_invoiced_date' }}</td>\\n                        <td>{{ recurringCost | get:'billing_interval' }}</td>\\n                        <td>{{ recurringCost | get:'_billing_frequency.title' }}</td>\\n                        <td>{{ recurringCost | get:'_payment_option.title' }}</td>\\n                        <td class=\\\"keep-min-width\\\"><a class=\\\"pointer\\\" (click)=\\\"deleteRecurringCost($event, recurringCost)\\\"><i class=\\\"icon-trash\\\"></i></a></td>\\n                    </tr>\\n                </tbody>\\n                </ng-container>\\n            </table>\\n        </div>\\n\\n    </div>\\n</div>    \\n\\n<ng-template #emptyFiles><tbody><tr><td colspan=\\\"4\\\">No files found.</td></tr></tbody></ng-template>\\n<ng-template #emptyRelationships><tbody><tr><td colspan=\\\"3\\\">No relationships found.</td></tr></tbody></ng-template>\\n<ng-template #emptyRecurringCosts><tbody><tr><td colspan=\\\"6\\\">No recurring costs found.</td></tr></tbody></ng-template>\"","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActionsSubject, select, Store } from '@ngrx/store';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppState, getTabState } from '../state/state';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\nimport { FormCleanAfterMethod } from '../forms/base.form';\nimport { getCookie } from '../utils/cookies';\nimport {\n    getJobCollectionById,\n    getJobFilesForJob,\n    getJobNoteCollectionForJob,\n    getJobRecurringCostCollectionForJob,\n    getJobRelationshipCollectionForJob,\n    getJobTimingsById\n    } from '../state/selectors/job';\nimport { getTaskStateForJob } from '../state/selectors/task';\nimport { getTaskStatusState } from './../state/state';\nimport { IJob } from '../state/reducers/job';\nimport { IJobFile } from '../state/reducers/jobfile';\nimport { IJobNote } from './../state/reducers/jobnote';\nimport { IJobRecurringCost } from './../state/reducers/jobrecurringcost';\nimport { IJobRelationship } from './../state/reducers/jobrelationship';\nimport { IJobTiming } from '../state/reducers/jobtiming';\nimport { ITab, ITabs } from '../state/reducers/tabs';\nimport { ITask } from '../state/reducers/task';\nimport { ITaskStatus } from '../state/reducers/taskstatus';\nimport { JobNoteForm } from '../forms/job-note.form';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { IActionWithPayload } from '../state/models';\n\n@Component({\n    templateUrl: './job.component.html'\n})\nexport class JobComponent implements OnDestroy, OnInit {\n\n    dropzoneConfig: DropzoneConfigInterface = {\n        url: '/api/job-files/',\n        maxFilesize: 50,\n        headers: { 'X-CSRFTOKEN': getCookie('csrftoken') }\n    };\n    jobId: number;\n    files$: Observable<IJobFile[]>;\n    job$: Observable<IJob>;\n    notes$: Observable<IJobNote[]>;\n    tabs$: Observable<ITabs>;\n    timings$: Observable<IJobTiming>;\n    jobNoteForms = {};\n    newNoteForm: JobNoteForm;\n    recurringCosts$: Observable<IJobRecurringCost[]>;\n    relationships$: Observable<IJobRelationship[]>;\n    selectedTab: ITab;\n    selectedTaskId: number = null;\n    statuses$: Observable<ITaskStatus[]>;\n    tasks$: Observable<ITask[]>;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private route: ActivatedRoute,\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) {\n        this.newNoteForm = new JobNoteForm(\n            this.store,\n            this.actionsSubject,\n            {cleanAfterMethod: FormCleanAfterMethod.resetToInitial}\n        );\n    }\n\n    ngOnInit() {\n        this.tabs$ = this.store.pipe(select(getTabState));\n        this.statuses$ = this.store.pipe(select(getTaskStatusState));\n\n        const paramsSub = this.route.params.subscribe(\n            (params) => {\n                this.jobId = +params.id;\n                // data\n                this.files$ = this.store.pipe(select(getJobFilesForJob(this.jobId)));\n                this.job$ = this.store.pipe(select(getJobCollectionById(this.jobId)));\n                this.notes$ = this.store.pipe(select(getJobNoteCollectionForJob(this.jobId)));\n                this.recurringCosts$ = this.store.pipe(select(getJobRecurringCostCollectionForJob(this.jobId)));\n                this.relationships$ = this.store.pipe(select(getJobRelationshipCollectionForJob(this.jobId)));\n                this.tasks$ = this.store.pipe(select(getTaskStateForJob(this.jobId)));\n                this.timings$ = this.store.pipe(select(getJobTimingsById(this.jobId)));\n                // forms\n                this.newNoteForm.load({job: this.jobId});\n            }\n        );\n        this.subscriptions.push(paramsSub);\n\n        const querySub = this.route.queryParams.subscribe(\n            params => {\n                if (params['task']) {\n                    this.activateTabAndOpenTask(+params['task']);\n                }\n            }\n        );\n        this.subscriptions.push(querySub);\n    }\n\n    ngOnDestroy() {\n        _.each(this.subscriptions, s => s.unsubscribe());\n    }\n\n    // tasks\n\n    activateTabAndOpenTask(id: number) {\n        this.store.dispatch({type: actions.TabActions.JOB_ACTIVATE_TAB, payload: {title: 'Tasks'}});\n        this.selectedTaskId = id;\n    }\n\n    // files\n    \n    onFileSending(event: any) {\n        event[2].set('job', this.jobId);\n    }\n\n    onFileSuccess(event: any) {\n        const payload = event[1];\n        this.store.dispatch({type: actions.JobFileActions.LOAD_ONE_SUCCESS, payload});\n    }\n\n    deleteFile(payload: IJobFile) {\n        this.store.dispatch({type: actions.JobFileActions.REMOVE, payload});\n    }\n\n    downloadFile(payload: IJobFile) {\n        this.store.dispatch({type: actions.JobFileActions.LOAD_ONE, payload: payload.id});\n        this.actionsSubject.pipe(\n            filter((action: IActionWithPayload) => action.type === actions.JobFileActions.LOAD_ONE_SUCCESS),\n            take(1)\n        ).subscribe(action => window.open(action.payload.file, \"_blank\"));\n    }\n\n    // notes\n\n    getOrCreateEditNoteForm(note: IJobNote) {\n        if (_.has(this.jobNoteForms, note.id)) {\n            return this.jobNoteForms[note.id];\n        }\n        const form = new JobNoteForm(\n            this.store,\n            this.actionsSubject,\n            {alwaysEditable: false, cleanAfterMethod: FormCleanAfterMethod.loadSaved}\n        );\n        form.load(note);\n        this.jobNoteForms[note.id] = form;\n        return this.jobNoteForms[note.id];\n    }\n\n    // relationships\n\n    deleteRelationship(event: Event, payload: IJobRelationship) {\n        event.stopPropagation();\n        this.store.dispatch({type: actions.JobRelationshipActions.REMOVE, payload});\n    }\n\n    // recurring costs\n\n    deleteRecurringCost(event: Event, payload: IJobRecurringCost) {\n        event.stopPropagation();\n        this.store.dispatch({type: actions.JobRecurringCostActions.REMOVE, payload});\n    }\n\n}\n","module.exports = \"<div class=\\\"loading-splash\\\" [class.d-hidden]=\\\"!show\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col text-center\\\">\\n                <logo></logo>\\n            </div>    \\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col text-center\\\">\\n                <p class=\\\"h3 c-white\\\">Loading {{ pendingRequests }} remaining items</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { AppState, getHttpState } from '../state/state';\nimport { Component, OnInit } from '@angular/core';\nimport { Globals } from '../services/globals';\nimport { select, Store } from '@ngrx/store';\n\n\n@Component({\n    selector: 'loading-splash',\n    templateUrl: './loading-splash.component.html'\n})\nexport class LoadingSplashComponent implements OnInit {\n\n    show: boolean = true;\n    pendingRequests: number = 0;\n\n    constructor(private store: Store<AppState>) { }\n\n    ngOnInit() {\n        this.store.pipe(select(getHttpState)).subscribe(\n            (data) => {\n                this.pendingRequests = data.pendingRequests;\n                if (this.pendingRequests > 3) {\n                    // only show if we have more than x number of concurrent requests\n                    this.show = true;\n                } else if (this.pendingRequests == 0) {\n                    // and hide when we have none\n                    this.show = false;\n                }\n            }\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'logo, [logo]',\n    template: `\n    <svg [attr.width]=\"width\" [attr.height]=\"height\" viewBox=\"0 0 114 114\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <!-- Generator: Sketch 52.1 (67048) - http://www.bohemiancoding.com/sketch -->\n        <title>Logo Check</title>\n        <desc>Created with Sketch.</desc>\n        <g id=\"Logo\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <g id=\"Logo-Check-Green\" transform=\"translate(56.568542, 56.568542) rotate(-45.000000) translate(-56.568542, -56.568542) translate(16.568542, 16.568542)\">\n                <rect id=\"Rectangle\" fill=\"#A2CF6E\" x=\"0\" y=\"0\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-3\" fill=\"#618833\" x=\"0\" y=\"20\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-7\" fill=\"#618833\" x=\"0\" y=\"40\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-8\" fill=\"#8BC34A\" x=\"0\" y=\"60\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-9\" fill=\"#8BC34A\" x=\"20\" y=\"60\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-10\" fill=\"#A2CF6E\" x=\"40\" y=\"60\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-11\" fill=\"#A2CF6E\" x=\"60\" y=\"60\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy\" fill=\"#A2CF6E\" x=\"20\" y=\"0\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-12\" fill=\"#FFFFFF\" x=\"20\" y=\"20\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-13\" fill=\"#FFFFFF\" x=\"20\" y=\"40\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-14\" fill=\"#FFFFFF\" x=\"40\" y=\"40\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-15\" fill=\"#FFFFFF\" x=\"60\" y=\"40\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-2\" fill=\"#8BC34A\" x=\"40\" y=\"0\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-6\" fill=\"#618833\" x=\"40\" y=\"20\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-4\" fill=\"#8BC34A\" x=\"60\" y=\"0\" width=\"20\" height=\"20\"></rect>\n                <rect id=\"Rectangle-Copy-5\" fill=\"#618833\" x=\"60\" y=\"20\" width=\"20\" height=\"20\"></rect>\n            </g>\n        </g>\n    </svg>\n    `\n})\n\nexport class LogoComponent {\n    @Input() width: string = '114px';\n    @Input() height: string = '116px';\n}","module.exports = \"<div class=\\\"full-visual-height d-flex align-items-center\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12 text-center\\\">\\n                <p><logo></logo></p>\\n                <p><strong>404</strong></p>\\n                <p>Where's the page, Lebowski?, Where’s the page? ...</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { Globals } from '../services/globals';\n\n@Component({\n    templateUrl: './not-found.component.html'\n})\nexport class NotFoundComponent { }\n","import { Component, Input, forwardRef } from '@angular/core';\n\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst noop = () => {};\n\nconst SEARCH_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SearchComponent),\n  multi: true\n};\n\n@Component({\n    selector: 'search, [search]',\n    template: `\n    <div class=\"icon-input\">\n        <input name=\"search\" type=\"search\" placeholder=\"Search\" [(ngModel)]=\"searchVal\" (ngModelChange)=\"searchChange($event)\">\n        <span class=\"icon-search\"></span>\n    </div>\n    `,\n    providers: [SEARCH_CONTROL_VALUE_ACCESSOR]\n})\nexport class SearchComponent {\n\n    searchVal: string = '';\n    private _value: any = [];\n\n    private _onTouchedCallback: () => void = noop;\n    private _onChangeCallback: (_:any) => void = noop;\n\n    get value(): any {\n        return this._value;\n    };\n\n    set value(value: any) {\n        if (value !== this._value) {\n            this._value = value;\n            this._onChangeCallback(value);\n        }\n    }\n\n    onTouched(){\n        this._onTouchedCallback();\n    }\n\n    writeValue(value: any) {\n        this._value = value;\n        if (value) {\n            this.searchVal = value.join(\" \");\n        }\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    searchChange(value) {\n        if (value) {\n            this.value = value.split(\" \");\n        } else {\n            this.value = [];\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { AppState } from '../state/state';\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output\n    } from '@angular/core';\nimport { ITab } from '../state/reducers/tabs';\nimport { Store } from '@ngrx/store';\n\n@Component({\n    selector: '[tabs]',\n    template: `\n    <li [class.active]=\"tab.active\" (click)=\"activate(tab)\" *ngFor=\"let tab of tabs$\">{{ tab.title }}</li>\n    `\n})\nexport class TabsComponent implements OnChanges {\n    @Input('tabs') tabs$: ITab[];\n    @Input() type: string;\n\n    @Output() activeTab: EventEmitter<ITab> = new EventEmitter<ITab>();\n\n    constructor(private store: Store<AppState>) { }\n\n    ngOnChanges() {\n        if (this.tabs$) {\n            const active = _.find(this.tabs$, ['active', true]);\n            if (active) {\n                this.activeTab.emit(active);\n            }\n        }\n    }\n    \n    activate(payload: ITab) {\n        switch (this.type) {\n\n            case 'client':\n                this.store.dispatch({type: actions.TabActions.CLIENT_ACTIVATE_TAB, payload});\n                break;\n\n            case 'job':\n                this.store.dispatch({type: actions.TabActions.JOB_ACTIVATE_TAB, payload});\n                break;\n\n            default:\n                break;\n        }\n\n        this.activeTab.emit(payload);\n    }\n\n}\n\n","module.exports = \"<span>{{ tag$ | async | get:'name' }}</span>\"","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { AppState } from '../state/state';\nimport { ITag } from '../state/reducers/tag';\nimport { Observable } from 'rxjs';\nimport { getTagById } from '../state/selectors/tag';\n\n@Component({\n    selector: 'tag, [tag]',\n    templateUrl: './tag.component.html'\n})\nexport class TagComponent implements OnChanges {\n\n    @Input() id: number;\n    \n    tag$: Observable<ITag>;\n    \n    constructor(private store: Store<AppState>) { }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.tag$ = this.store.pipe(select(getTagById(this.id)))\n    }\n}\n","module.exports = \"<div class=\\\"board-card d-flex flex-column pointer\\\" *ngIf=\\\"task$ | async as task\\\">\\n    <p class=\\\"board-card-desc\\\">\\n        <span class=\\\"small strong uppercase b-whitelilac px-h\\\" *ngIf=\\\"task.closed\\\">closed</span>\\n        {{ task.title }}\\n    </p>\\n    <div class=\\\"d-flex\\\">\\n        <div class=\\\"mr-auto\\\">\\n            <span class=\\\"uppercase small mr-1\\\" [class.c-red]=\\\"task.is_overdue\\\" *ngIf=\\\"task.target_date\\\">\\n                <i class=\\\"icon-bell\\\"></i> {{ task.target_date | date:'d MMM' }}\\n            </span>\\n            <span class=\\\"uppercase small\\\" [class.c-red]=\\\"timing.is_over_allocated_hours\\\" *ngIf=\\\"timing$ | async as timing\\\">\\n                <i class=\\\"icon-clock\\\"></i> {{ timing.time_spent_hours }}/{{ timing.allocated_hours }}\\n            </span>\\n        </div>\\n        <div>\\n            <div avatar [id]=\\\"assignee.user\\\" class=\\\"avatar avatar-small\\\" *ngFor=\\\"let assignee of assignees$ | async\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\"","import * as _ from 'lodash';\nimport { AppState } from '../state/state';\nimport {\n    Component,\n    Input,\n    OnChanges,\n    SimpleChanges\n    } from '@angular/core';\nimport { getTaskAssigneesForTask, getTaskById, getTaskTimingsById } from './../state/selectors/task';\nimport { ITask } from '../state/reducers/task';\nimport { ITaskAssignee } from './../state/reducers/taskassignee';\nimport { ITaskTiming } from '../state/reducers/tasktiming';\nimport { Observable } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\n\n@Component({\n    selector: 'task-card, [task-card]',\n    templateUrl: './task-card.component.html'\n})\nexport class TaskCardComponent implements OnChanges {\n    @Input() id: number;\n\n    assignees$: Observable<ITaskAssignee[]>;\n    task$: Observable<ITask>;\n    timing$: Observable<ITaskTiming>;\n\n    constructor(private store: Store<AppState>) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (_.has(changes, 'id.currentValue')) {\n            this.assignees$ = this.store.pipe(select(getTaskAssigneesForTask(this.id)));\n            this.task$ = this.store.pipe(select(getTaskById(this.id)));\n            this.timing$ = this.store.pipe(select(getTaskTimingsById(this.id)));\n        }\n    }\n}\n","module.exports = \"<div class=\\\"modal {{ id ? 'in': '' }}\\\" *ngIf=\\\"task$ | async as task\\\" (click)=\\\"closeEvent($event)\\\">\\n    <div class=\\\"modal-panel\\\" #modalPanel>\\n        <div class=\\\"container b-secondary px-2 py-2\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                    <textarea autoResize rows=\\\"1\\\" class=\\\"toggleable\\\"\\n                        [formControl]=\\\"titleForm.controls.title\\\"\\n                        (blur)=\\\"titleForm.dirty ? titleForm.save($event) : false\\\"\\n                        (keydown.enter)=\\\"false\\\">\\n                    </textarea>\\n                </div>\\n                <div class=\\\"col-9\\\">\\n                    <p class=\\\"small muted\\\">{{ task | get:'_job._client.name' }} / {{ task | get:'_job.title' }}</p>\\n                </div>\\n                <div class=\\\"col-3\\\">\\n                    <select class=\\\"toggleable\\\" [formControl]=\\\"statusForm.controls.status\\\" (blur)=\\\"statusForm.save($event)\\\">\\n                        <option [ngValue]=\\\"option.id\\\" *ngFor=\\\"let option of taskStatuses$ | async\\\">{{ option.title }}</option>\\n                    </select>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"container b-secondary px-2\\\">\\n            <ul class=\\\"tabs tabs-light\\\">\\n                <li [class.active]=\\\"activeTab == 'detail'\\\" (click)=\\\"activeTab = 'detail'\\\">Detail</li>\\n                <li [class.active]=\\\"activeTab == 'notes'\\\" (click)=\\\"activeTab = 'notes'\\\">Notes ({{ (taskNotes$ | async).length }})</li>\\n                <li [class.active]=\\\"activeTab == 'files'\\\" (click)=\\\"activeTab = 'files'\\\">Files ({{ (taskFiles$ | async).length }})</li>\\n                <li [class.active]=\\\"activeTab == 'delete'\\\" (click)=\\\"activeTab = 'delete'\\\" *ngIf=\\\"canDelete\\\">Delete</li>\\n            </ul>\\n        </div>\\n\\n        <div class=\\\"container px-2 py-2\\\" *ngIf=\\\"activeTab == 'detail'\\\">\\n            <div class=\\\"row mb-1h\\\">\\n                <div class=\\\"col\\\">\\n                    <p class=\\\"mb-h\\\"><strong>Assignees</strong></p>\\n                    <div *ngFor=\\\"let assignee of taskAssignees$ | async\\\" class=\\\"d-inline-block text-center mr-h\\\">\\n                        <div avatar [id]=\\\"assignee.user\\\" class=\\\"avatar pointer d-block\\\" (click)=\\\"editAssignee(assignee)\\\"></div>\\n                        <small>{{ assignee.allocated_hours }}</small>\\n                    </div>\\n                    <div class=\\\"d-inline-block text-center mr-h\\\">\\n                        <div class=\\\"avatar new pointer d-block\\\" (click)=\\\"editAssignee({task: task.id})\\\">\\n                            <div class=\\\"avatar-text\\\"><i class=\\\"icon-plus\\\"></i></div>\\n                        </div>\\n                        <small>&nbsp;</small>\\n                    </div>\\n                    <div class=\\\"relative\\\">\\n                        <div class=\\\"panel panel-popup mt-1 mt-1\\\" *ngIf=\\\"assigneeEditForm && assigneeEditForm.editable\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <select [formControl]=\\\"assigneeEditForm.controls.user\\\" class=\\\"mr-1 flex-fill\\\">\\n                                    <option [ngValue]=\\\"null\\\">Select...</option>\\n                                    <ng-container *ngFor=\\\"let option of users$ | async\\\">\\n                                        <option [ngValue]=\\\"option.id\\\">{{ option.full_name }}</option>\\n                                    </ng-container>\\n                                </select>\\n                                <input type=\\\"number\\\" [formControl]=\\\"assigneeEditForm.controls.allocated_hours\\\">\\n                            </div>\\n                            <div class=\\\"d-flex\\\">\\n                                <button class=\\\"button button-secondary\\\" (click)=\\\"assigneeEditForm.save($event)\\\">Save</button>\\n                                <button class=\\\"button button-clear\\\" (click)=\\\"assigneeEditForm.cancel($event)\\\">Cancel</button>\\n                                <button class=\\\"button button-clear ml-auto\\\" *ngIf=\\\"assigneeEditForm.value.id\\\" (click)=\\\"assigneeEditForm.delete($event)\\\">Remove</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <p class=\\\"mb-h\\\"><strong>Tags</strong></p>\\n                    <ul class=\\\"tags\\\">\\n                        <li tag [id]=\\\"tag.tag\\\" *ngFor=\\\"let tag of taskTags$ | async\\\" class=\\\"tag pointer mb-h\\\" (click)=\\\"editTag(tag)\\\"></li>\\n                        <li class=\\\"tag outline pointer mb-h\\\" (click)=\\\"editTag({object_id: id})\\\"><i class=\\\"icon-plus\\\"></i></li>\\n                    </ul>\\n                    <div class=\\\"relative\\\">\\n                        <div class=\\\"panel panel-popup mt-1\\\" *ngIf=\\\"tagEditForm && tagEditForm.editable\\\">\\n                            <select [formControl]=\\\"tagEditForm.controls.tag\\\">\\n                                <option [ngValue]=\\\"null\\\">Select...</option>\\n                                <ng-container *ngFor=\\\"let option of tags$ | async\\\">\\n                                    <option [ngValue]=\\\"option.id\\\">{{ option.name }}</option>\\n                                </ng-container>\\n                            </select>\\n                            <div class=\\\"input-group\\\">\\n                                <input #newTag type=\\\"text\\\" placeholder=\\\"Create a new tag...\\\">\\n                                <button class=\\\"button input-group-addon\\\" (click)=\\\"tagEditForm.addNew(newTag.value)\\\">Add</button>\\n                            </div>\\n                            <div class=\\\"d-flex\\\">\\n                                <button class=\\\"button button-secondary\\\" (click)=\\\"tagEditForm.save($event)\\\">Save</button>\\n                                <button class=\\\"button button-clear\\\" (click)=\\\"tagEditForm.cancel($event)\\\">Cancel</button>\\n                                <button class=\\\"button button-clear ml-auto\\\" *ngIf=\\\"tagEditForm.value.id\\\" (click)=\\\"tagEditForm.delete($event)\\\">Remove</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row mb-1h\\\">\\n                <div class=\\\"col\\\">\\n                    <p class=\\\"mb-h\\\"><strong>Target Date</strong></p>\\n                    <div class=\\\"icon-input\\\">\\n                        <input type=\\\"text\\\" class=\\\"toggleable\\\"\\n                            [matDatepicker]=\\\"picker\\\"\\n                            [formControl]=\\\"targetDateForm.controls.target_date\\\"\\n                            (click)=\\\"picker.open()\\\">\\n                        <span class=\\\"icon-calendar\\\"></span>\\n                    </div>\\n                    <mat-datepicker #picker></mat-datepicker>\\n                    <button class=\\\"button\\\" *ngIf=\\\"targetDateForm.dirty\\\" (click)=\\\"targetDateForm.save($event)\\\">Save</button>\\n                    <button class=\\\"button button-clear\\\" *ngIf=\\\"targetDateForm.dirty\\\" (click)=\\\"targetDateForm.cancel($event)\\\">Cancel</button>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <p class=\\\"mb-1\\\"><strong>Time Spent (hrs)</strong></p>\\n                    <p [class.c-red]=\\\"taskTiming.is_over_allocated_hours\\\" *ngIf=\\\"taskTiming$ | async as taskTiming\\\">{{ taskTiming.time_spent_hours }} of {{ taskTiming.allocated_hours }}</p>        \\n                </div>\\n            </div>\\n            <div class=\\\"row mb-1h\\\">\\n                <div class=\\\"col\\\">\\n                    <p class=\\\"mb-h\\\"><strong>Description</strong></p>\\n                    <textarea autoResize class=\\\"toggleable\\\" rows=\\\"2\\\"\\n                        [formControl]=\\\"descriptionForm.controls.description\\\"\\n                        (blur)=\\\"descriptionForm.dirty ? descriptionForm.save($event) : false\\\"></textarea>\\n                </div>\\n            </div>\\n            <div class=\\\"row mb-1h\\\">\\n                <div class=\\\"col-12\\\">\\n                    <p class=\\\"mb-h\\\"><strong>Not Chargeable</strong></p>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"checkbox\\\">\\n                        <label>\\n                            <input type=\\\"checkbox\\\" [formControl]=\\\"notChargeableForm.controls.not_chargeable\\\">\\n                            <span></span>\\n                        </label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"text-right\\\" *ngIf=\\\"notChargeableForm.dirty\\\">\\n                        <button class=\\\"button\\\" (click)=\\\"notChargeableForm.save($event)\\\">Save</button>\\n                        <button class=\\\"button button-clear\\\" (click)=\\\"notChargeableForm.cancel($event)\\\">Cancel</button>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row mb-1h\\\">\\n                <div class=\\\"col-12\\\">\\n                    <p class=\\\"mb-h\\\"><strong>Closed</strong></p>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <p>Closing the task means its no longer available to add time.</p>\\n                    <div class=\\\"checkbox\\\">\\n                        <label>\\n                            <input type=\\\"checkbox\\\" [formControl]=\\\"closedForm.controls.closed\\\">\\n                            <span></span>\\n                        </label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"text-right\\\" *ngIf=\\\"closedForm.dirty\\\">\\n                        <button class=\\\"button\\\" (click)=\\\"closedForm.save($event)\\\">Save</button>\\n                        <button class=\\\"button button-clear\\\" (click)=\\\"closedForm.cancel($event)\\\">Cancel</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"container px-2 py-2\\\" *ngIf=\\\"activeTab == 'notes'\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"mb-2\\\">\\n                        <p class=\\\"mb-h\\\"><strong>Notes</strong></p>\\n                        <textarea autoResize placeholder=\\\"Write a note...\\\" rows=\\\"2\\\"\\n                            [formControl]=\\\"newNoteForm.controls.note\\\"></textarea>\\n                        <button class=\\\"button button-secondary\\\" (click)=\\\"newNoteForm.save($event)\\\">Add</button>\\n                    </div>\\n                    \\n                    <ng-container *ngFor=\\\"let note of taskNotes$ | async\\\">\\n                        <div class=\\\"mb-2\\\" *ngIf=\\\"getOrCreateEditNoteForm(note) as form\\\">\\n                            <div class=\\\"d-flex align-items-center mb-1\\\">\\n                                <div avatar [id]=\\\"note.user\\\" class=\\\"avatar mr-1\\\"></div>\\n                                <div>{{ note.updated_at | date:'MMM d, y, h:mm a' }}</div>\\n                            </div>\\n                            <textarea autoResize class=\\\"toggleable\\\" rows=\\\"1\\\" [formControl]=\\\"form.controls.note\\\"></textarea>\\n                            <div *ngIf=\\\"form.dirty\\\">\\n                                <button class=\\\"button button-secondary\\\" (click)=\\\"form.save($event)\\\">Save</button>\\n                                <button class=\\\"button button-clear\\\" (click)=\\\"form.cancel($event)\\\">Cancel</button>\\n                            </div>\\n                        </div>\\n                    </ng-container>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"container px-2 py-2\\\" *ngIf=\\\"activeTab == 'files'\\\">\\n            <div class=\\\"row mb-1h\\\">\\n                <div class=\\\"col\\\">\\n                    <p class=\\\"mb-h\\\"><strong>Files</strong></p>\\n                    <dropzone [config]=\\\"dropzoneConfig\\\" [message]=\\\"'Click or drag files here to upload'\\\" (sending)=\\\"onFileSending($event)\\\" (success)=\\\"onFileSuccess($event)\\\"></dropzone>\\n                    <table class=\\\"table-hover\\\">\\n                        <ng-container *ngIf=\\\"taskFiles$ | async as files\\\">\\n                        <tbody *ngIf=\\\"files.length > 0; else emptyFiles\\\">\\n                            <tr *ngFor=\\\"let file of files\\\">\\n                                <td>{{ file.name }}</td>\\n                                <td class=\\\"keep-min-width\\\">{{ file.size_mb }}</td>\\n                                <td class=\\\"keep-min-width\\\"><a class=\\\"pointer\\\" (click)=\\\"downloadFile(file)\\\"><i class=\\\"icon-download\\\"></i></a></td>\\n                                <td class=\\\"keep-min-width\\\"><a class=\\\"pointer\\\" (click)=\\\"deleteFile(file)\\\"><i class=\\\"icon-trash\\\"></i></a></td>\\n                            </tr>\\n                        </tbody>\\n                        <ng-template #emptyFiles><tbody><tr><td colspan=\\\"4\\\">No files found.</td></tr></tbody></ng-template>\\n                        </ng-container>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"container px-2 py-2\\\" *ngIf=\\\"activeTab == 'delete'\\\">\\n            <div class=\\\"row mb-1h\\\">\\n                <div class=\\\"col\\\">\\n                    <p class=\\\"mb-h\\\">Delete this task?</p>\\n                    <a (click)=\\\"delete(task)\\\" class=\\\"button button-primary\\\">Delete</a>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActionsSubject, select, Store } from '@ngrx/store';\nimport { AppState, getTaskStatusState } from '../state/state';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewChild\n    } from '@angular/core';\nimport { DeletableService } from '../services/deletable';\nimport { DropzoneConfigInterface } from '../../../node_modules/ngx-dropzone-wrapper';\nimport { filter, take } from 'rxjs/operators';\nimport { FormCleanAfterMethod } from '../forms/base.form';\nimport { getActiveUsers } from '../state/selectors/user';\nimport { getCookie } from '../utils/cookies';\nimport { getTagCollection } from '../state/selectors/tag';\nimport {\n    getTaskAssigneesForTask,\n    getTaskCollectionById,\n    getTaskFilesForTask,\n    getTaskNotesForTask,\n    getTaskTagsForTask,\n    getTaskTimingsById\n    } from './../state/selectors/task';\nimport { ITag } from '../state/reducers/tag';\nimport { ITask } from '../state/reducers/task';\nimport { ITaskAssignee } from '../state/reducers/taskassignee';\nimport { ITaskFile } from './../state/reducers/taskfile';\nimport { ITaskNote } from '../state/reducers/tasknote';\nimport { ITaskTag } from './../state/reducers/tasktag';\nimport { ITaskTiming } from '../state/reducers/tasktiming';\nimport { IUser } from '../state/reducers/user';\nimport { Observable } from 'rxjs';\nimport { TaskAssigneeForm } from '../forms/task-assignee.form';\nimport { TaskClosedForm } from '../forms/task-close.form';\nimport { TaskDescriptionForm } from '../forms/task-description.form';\nimport { TaskNotChargeableForm } from '../forms/task-not-chargeable.form';\nimport { TaskNoteForm } from '../forms/task-note.form';\nimport { TaskTagForm } from '../forms/task-tag.form';\nimport { TaskTargetDateForm } from '../forms/task-target-date.form';\nimport { TaskTitleForm } from '../forms/task-title.form';\nimport { TaskStatusForm } from '../forms/task-status.form';\nimport { ITaskStatus } from '../state/reducers/taskstatus';\nimport { IActionWithPayload } from '../state/models';\n\n@Component({\n    selector: 'task-form, [task-form]',\n    templateUrl: './task-form.component.html'\n})\nexport class TaskFormComponent implements OnChanges {\n    @Input() id: number;\n\n    @Output() close = new EventEmitter();\n    @Output() moveStatuses = new EventEmitter();\n\n    @ViewChild('modalPanel') modalPanelRef: ElementRef;\n\n    activeTab: string;\n    assigneeEditForm: TaskAssigneeForm;\n    canDelete: boolean = false;\n    closedForm: TaskClosedForm;\n    descriptionForm: TaskDescriptionForm;\n    dropzoneConfig: DropzoneConfigInterface = {\n        url: '/api/task-files/',\n        maxFilesize: 50,\n        headers: { 'X-CSRFTOKEN': getCookie('csrftoken') }\n    };\n    newNoteForm: TaskNoteForm;\n    notChargeableForm: TaskNotChargeableForm;\n    statusForm: TaskStatusForm;\n    tagEditForm: TaskTagForm;\n    tags$: Observable<ITag[]>;\n    targetDateForm: TaskTargetDateForm;\n    task$: Observable<ITask>;\n    taskAssignees$: Observable<ITaskAssignee[]>;\n    taskFiles$: Observable<ITaskFile[]>;\n    taskNotes$: Observable<ITaskNote[]>;\n    taskStatuses$: Observable<ITaskStatus[]>;\n    taskTags$: Observable<ITaskTag[]>;\n    taskTiming$: Observable<ITaskTiming>;\n    taskNoteForms = {};\n    titleForm: TaskTitleForm;\n    users$: Observable<IUser[]>;\n\n    constructor(\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject,\n        private deletable: DeletableService\n    ) {\n        this.taskStatuses$ = this.store.pipe(select(getTaskStatusState));\n        this.tags$ = this.store.pipe(select(getTagCollection));\n        this.users$ = this.store.pipe(select(getActiveUsers));\n\n        this.closedForm = new TaskClosedForm(this.store, this.actionsSubject, { alwaysEditable: true });\n        this.descriptionForm = new TaskDescriptionForm(this.store, this.actionsSubject);\n        this.statusForm = new TaskStatusForm(this.store, this.actionsSubject);\n        this.titleForm = new TaskTitleForm(this.store, this.actionsSubject);\n        this.targetDateForm = new TaskTargetDateForm(this.store, this.actionsSubject);\n        this.newNoteForm = new TaskNoteForm(this.store, this.actionsSubject);\n        this.notChargeableForm = new TaskNotChargeableForm(this.store, this.actionsSubject, { alwaysEditable: true });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (_.has(changes, 'id.currentValue')) {\n            this.activeTab = 'detail';\n            this.taskFiles$ = this.store.pipe(select(getTaskFilesForTask(this.id)));\n            this.task$ = this.store.pipe(select(getTaskCollectionById(this.id)));\n            this.taskAssignees$ = this.store.pipe(select(getTaskAssigneesForTask(this.id)));\n            this.taskNotes$ = this.store.pipe(select(getTaskNotesForTask(this.id)));\n            this.taskTags$ = this.store.pipe(select(getTaskTagsForTask(this.id)));\n            this.taskTiming$ = this.store.pipe(select(getTaskTimingsById(this.id)));\n            this.task$.pipe(\n                filter(d => _.isObject(d))\n            ).subscribe(\n                d => {\n                    this.closedForm.load(d);\n                    this.descriptionForm.load(d);\n                    this.newNoteForm.load({task: d.id});\n                    this.notChargeableForm.load(d);\n                    this.statusForm.load(d);\n                    this.titleForm.load(d);\n                    this.targetDateForm.load(d);\n                }\n            );\n            this.deletable.check(DeletableService.TASK, this.id).then(check => this.canDelete = check);\n        }\n    }\n\n    closeEvent(event) {\n        if (this.modalPanelRef.nativeElement.contains(event.target)) {\n            // inside modal - do not close\n        } else {\n            this.close.emit(event);\n        }\n    }\n\n    // note\n\n    getOrCreateEditNoteForm(note: ITaskNote) {\n        if (!_.has(this.taskNoteForms, note.id)) {\n            const form = new TaskNoteForm(\n                this.store,\n                this.actionsSubject,\n                { cleanAfterMethod: FormCleanAfterMethod.loadSaved }\n            );\n            form.load(note);\n            this.taskNoteForms[note.id] = form;\n            return this.taskNoteForms[note.id];\n        }\n        return this.taskNoteForms[note.id];\n    }\n\n    // assignee\n\n    editAssignee(assignee: ITaskAssignee) {\n        this.assigneeEditForm = new TaskAssigneeForm(\n            this.store,\n            this.actionsSubject\n        );\n        this.assigneeEditForm.editable = true;\n        this.assigneeEditForm.load(assignee);\n    }\n\n    // files\n    \n    onFileSending(event: any) {\n        event[2].set('task', this.id);\n    }\n\n    onFileSuccess(event: any) {\n        const payload = event[1];\n        this.store.dispatch({type: actions.TaskFileActions.LOAD_ONE_SUCCESS, payload});\n    }\n\n    deleteFile(payload: ITaskFile) {\n        this.store.dispatch({type: actions.TaskFileActions.REMOVE, payload});\n    }\n\n    downloadFile(payload: ITaskFile) {\n        this.store.dispatch({type: actions.TaskFileActions.LOAD_ONE, payload: payload.id});\n        this.actionsSubject.pipe(\n            filter((action: IActionWithPayload) => action.type === actions.TaskFileActions.LOAD_ONE_SUCCESS),\n            take(1)\n        ).subscribe(action => window.open(action.payload.file, \"_blank\"));\n    }\n\n    // tags\n\n    editTag(tag: ITaskTag) {\n        this.tagEditForm = new TaskTagForm(\n            this.store,\n            this.actionsSubject\n        );\n        this.tagEditForm.editable = true;\n        this.tagEditForm.load(tag);\n    }\n\n    // task\n\n    delete(task: ITask) {\n        this.store.dispatch({type: actions.TaskActions.REMOVE, payload: task});\n    }\n\n}\n","module.exports = \"<div class=\\\"page-header py-2\\\">\\n    <div class=\\\"container-fluid d-flex align-items-center\\\">\\n        <div class=\\\"h2\\\">Taskboard</div>\\n        <div class=\\\"page-header-actions\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"container-fluid inner-content\\\">\\n    <div class=\\\"panel\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\"><search [(ngModel)]=\\\"searchTerms\\\"></search></div>\\n            <div class=\\\"col-6\\\"></div>\\n        </div>\\n        <table class=\\\"table-hover table-headed margin-zero\\\">\\n            <thead>\\n                <tr>\\n                    <th class=\\\"keep-min-width pointer\\\" (click)=\\\"orderTasksBy('id')\\\">\\n                        ID <i *ngIf=\\\"orderBy == 'id'\\\" [class.icon-up-dir]=\\\"orderType == 'asc'\\\" [class.icon-down-dir]=\\\"orderType == 'desc'\\\"></i>\\n                    </th>\\n                    <th class=\\\"keep-min-width pointer\\\" (click)=\\\"orderTasksBy('target_date')\\\">\\n                        Target Date <i *ngIf=\\\"orderBy == 'target_date'\\\" [class.icon-up-dir]=\\\"orderType == 'asc'\\\" [class.icon-down-dir]=\\\"orderType == 'desc'\\\"></i>\\n                    </th>\\n                    <th class=\\\"pointer\\\" (click)=\\\"orderTasksBy('title')\\\">\\n                        Title <i *ngIf=\\\"orderBy == 'title'\\\" [class.icon-up-dir]=\\\"orderType == 'asc'\\\" [class.icon-down-dir]=\\\"orderType == 'desc'\\\"></i>\\n                    </th>\\n                    <th class=\\\"pointer\\\" (click)=\\\"orderTasksBy('_job._client.name')\\\">\\n                        Client <i *ngIf=\\\"orderBy == '_job._client.name'\\\" [class.icon-up-dir]=\\\"orderType == 'asc'\\\" [class.icon-down-dir]=\\\"orderType == 'desc'\\\"></i>\\n                    </th>\\n                    <th class=\\\"pointer\\\" (click)=\\\"orderTasksBy('_job.title')\\\">\\n                        Job <i *ngIf=\\\"orderBy == '_job.title'\\\" [class.icon-up-dir]=\\\"orderType == 'asc'\\\" [class.icon-down-dir]=\\\"orderType == 'desc'\\\"></i>\\n                    </th>\\n                    <th class=\\\"keep-min-width\\\">Assignees</th>\\n                    <th class=\\\"keep-min-width pointer\\\" (click)=\\\"orderTasksBy('_status.title')\\\">\\n                        Status <i *ngIf=\\\"orderBy == '_status.title'\\\" [class.icon-up-dir]=\\\"orderType == 'asc'\\\" [class.icon-down-dir]=\\\"orderType == 'desc'\\\"></i>\\n                    </th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr class=\\\"pointer\\\" [routerLink]=\\\"['/clients', task._job.client, 'jobs', task.job]\\\" [queryParams]=\\\"{task: task.id}\\\" *ngFor=\\\"let task of tasks$ | async | taskSearch:searchTerms | orderBy : [orderBy] : [orderType]\\\">\\n                    <td class=\\\"keep-min-width\\\">{{ task | get:'id' }}</td>\\n                    <td class=\\\"keep-min-width\\\">{{ task | get:'target_date' }}</td>\\n                    <td>{{ task | get:'title' }}</td>\\n                    <td>{{ task | get:'_job._client.name' }}</td>\\n                    <td>{{ task | get:'_job.title' }}</td>\\n                    <td class=\\\"keep-min-width\\\">\\n                        <div avatar [id]=\\\"assignee.user\\\" class=\\\"avatar avatar-small\\\" *ngFor=\\\"let assignee of task._assignees\\\"></div>\\n                    </td>\\n                    <td class=\\\"keep-min-width\\\">{{ task | get:'_status.title' }}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\"","import { ActionsSubject, select, Store } from '@ngrx/store';\nimport { AppState } from '../state/state';\nimport { Component } from '@angular/core';\nimport { getTasksForTaskBoardForUser } from '../state/selectors/taskboard';\nimport { ITask } from '../state/reducers/task';\nimport { Observable } from 'rxjs';\n\n@Component({\n    templateUrl: './taskboard.component.html'\n})\nexport class TaskboardComponent {\n\n    orderBy: string = 'target_date';\n    orderType: string = 'asc';\n    tasks$: Observable<ITask[]>;\n    searchTerms: string[] = [];\n    \n    constructor(\n        private store: Store<AppState>\n    ) { }\n\n    ngOnInit() {\n        this.tasks$ = this.store.pipe(select(getTasksForTaskBoardForUser));\n    }\n\n    orderTasksBy(by: string) {\n        if (by != this.orderBy) {\n            this.orderType = 'asc';\n        } else {\n            this.orderType = this.orderType == 'asc' ? 'desc' : 'asc';\n        }\n        this.orderBy = by;\n    }\n}\n","module.exports = \"<div class=\\\"overlay-header d-flex align-items-top\\\">\\n    <ng-container *ngIf=\\\"form.task$ | async as task\\\">\\n        <div class=\\\"color-indicator\\\" [style.backgroundColor]=\\\"task._job.colour\\\"></div>\\n        <div class=\\\"title h4\\\">{{ task.title }}</div>\\n    </ng-container>\\n    <a class=\\\"close ml-auto\\\" (click)=\\\"closeEvent($event)\\\"><i class=\\\"icon-cancel\\\"></i></a>\\n</div>\\n<div class=\\\"overlay-body\\\">\\n    <p class=\\\"muted\\\">To change the task click one from the main list</p>\\n    <input type=\\\"hidden\\\" name=\\\"task\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <label>Start Time</label>\\n            <input [formControl]=\\\"form.controls.started_at_time\\\" type=\\\"text\\\" mask=\\\"00:00\\\" [showMaskTyped]=\\\"true\\\" [dropSpecialCharacters]=\\\"false\\\" />\\n            <p class=\\\"c-red\\\" *formError=\\\"form.controls.started_at_time\\\">ie 00:00 - 23:59</p>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <label>End Time</label>\\n            <input [formControl]=\\\"form.controls.ended_at_time\\\" type=\\\"text\\\" mask=\\\"00:00\\\" [showMaskTyped]=\\\"true\\\" [dropSpecialCharacters]=\\\"false\\\" />\\n            <p class=\\\"c-red\\\" *formError=\\\"form.controls.ended_at_time\\\">ie 00:00 - 23:59</p>\\n        </div>\\n    </div>\\n    <label>Comments</label>\\n    <textarea [formControl]=\\\"form.controls.comments\\\" name=\\\"comments\\\" rows=\\\"3\\\"></textarea>\\n    <div class=\\\"text-right\\\">\\n        <a class=\\\"button button-primary\\\" (click)=\\\"form.save($event)\\\">Update</a>\\n        <a class=\\\"delete button button-primary button-clear\\\" (click)=\\\"form.delete($event)\\\">Delete <i class=\\\"icon-trash\\\"></i></a>\\n    </div>\\n</div>\"","import { ActionsSubject, Store, select } from '@ngrx/store';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { AppState } from './../state/state';\nimport { FormCleanAfterMethod } from '../forms/base.form';\nimport { ITimeEntry } from '../state/reducers/timeentry';\nimport { Observable } from 'rxjs';\nimport { TimeEntryForm } from '../forms/time-entry.form';\nimport { getTimeEntryById } from '../state/selectors/timeentry';\nimport { take } from 'rxjs/operators';\n\n@Component({\n    selector: 'time-entry-form, [time-entry-form]',\n    templateUrl: './time-entry-form.component.html'\n})\nexport class TimeEntryFormComponent implements OnChanges {\n    \n    @Input() id: number;\n    @Input() newTaskId: number;\n\n    @Output() close = new EventEmitter();\n    \n    entry$: Observable<ITimeEntry>;\n    form: TimeEntryForm;\n\n    constructor(\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) {\n        // setup the form\n        this.form = new TimeEntryForm(this.store, this.actionsSubject);\n        // close the form when saved and deleted\n        this.form.formSaved.subscribe(() => this.closeEvent(null));\n        this.form.formDeleted.subscribe(() => this.closeEvent(null));\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        for (const propName in changes) {\n            if (propName === 'id') {\n                this.entry$ = this.store.pipe(select(getTimeEntryById(changes[propName].currentValue)));\n                this.entry$.pipe(take(1)).subscribe(\n                    d => {\n                        this.form.load(d);\n                    }\n                );\n            }\n            if (propName === 'newTaskId' && changes[propName].currentValue) {\n                this.form.controls.task.setValue(changes[propName].currentValue);\n            }\n        }\n    }\n\n    closeEvent(event) {\n        this.close.emit(event);\n    }\n\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport * as moment from 'moment';\nimport { AppState } from '../state/state';\nimport {\n    Component,\n    Input,\n    OnChanges,\n    SimpleChanges\n    } from '@angular/core';\nimport { getDailyTimeTotalForUser, getIsDaySignedOffRequired } from '../state/selectors/timesheet';\nimport { Observable } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\n\n\n\n@Component({\n    selector: 'time-sheet-signoff, [time-sheet-signoff]',\n    template: `\n    <ng-container *ngIf=\"requiresSignOff$ | async; else complete\">\n        <a class=\"pointer d-inline-block\" (click)=\"signOff()\" title=\"Requires Signoff\">\n            <i class=\"icon-circle mr-h\"></i><em>{{ sum$ | async }}</em>\n        </a>\n    </ng-container>\n    <ng-template #complete>\n        <span class=\"d-inline-block c-olive\">\n            <i class=\"icon-ok-circled mr-h\"></i><em>{{ sum$ | async }}</em>\n        </span>\n    </ng-template>\n    `\n})\nexport class TimesheetSignoffComponent implements OnChanges {\n\n    @Input() date: Date;\n    @Input() user: number;\n\n    checked: boolean;\n    requiresSignOff$: Observable<boolean>;\n    sum$: Observable<any>;\n\n    constructor(private store: Store<AppState>) { }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.user && this.date) {\n            this.requiresSignOff$ = this.store.pipe(select(getIsDaySignedOffRequired(this.user, this.date)));\n            this.sum$ = this.store.pipe(select(getDailyTimeTotalForUser(this.user, this.date)));\n        }\n    }\n    \n    signOff() {\n        const payload = {date: moment(this.date).format('YYYY-MM-DD'), user: this.user}\n        this.store.dispatch({type: actions.TimeEntrySignoffActions.SIGNOFF, payload});\n    }\n}\n","module.exports = \"<div class=\\\"page-header py-2\\\">\\n    <div class=\\\"container-fluid d-flex align-items-center\\\">\\n        <div class=\\\"h2\\\">Timesheet</div>\\n        <div class=\\\"page-header-actions\\\">\\n            <select [(ngModel)]=\\\"selectedUserId\\\" (ngModelChange)=\\\"refetchEvents(); refetchTasks();\\\" class=\\\"mb-0\\\">\\n                <option *ngFor=\\\"let user of users$ | async\\\" [ngValue]=\\\"user.id\\\">{{ user.full_name }}</option>\\n            </select>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container-fluid d-flex flex-column flex-fill full-height ov-hidden\\\">\\n    <div class=\\\"row d-flex flex-fill full-height pt-2 ov-hidden\\\">\\n        <div class=\\\"col-3 d-flex flex-column full-height\\\">\\n            <div search [(ngModel)]=\\\"searchTerms\\\" (ngModelChange)=\\\"refetchTasks()\\\"></div>\\n            <div class=\\\"client-list-wrapper\\\" id=\\\"external-events\\\">\\n                <ul class=\\\"client-list\\\">\\n                    <li *ngFor=\\\"let client of tasks$ | async | keyvalue\\\">\\n                        <div class=\\\"client\\\">\\n                            <a class=\\\"client-list-toggle\\\" (click)=\\\"toggleNode('clients', client.key)\\\">{{ client | get : 'value.data.name' }}</a>\\n                            <a class=\\\"client-list-link\\\" [routerLink]=\\\"['/clients', client.key]\\\"><i class=\\\"icon-eye\\\"></i></a>\\n                        </div>\\n                        <ul *ngIf=\\\"isNodeExpanded('clients', client.key)\\\">\\n                            <li *ngFor=\\\"let job of client.value.jobs | keyvalue\\\">\\n                                <div class=\\\"job\\\">\\n                                    <a class=\\\"client-list-toggle\\\" (click)=\\\"toggleNode('jobs', job.key)\\\">{{ job | get : 'value.data.title' }}</a>\\n                                    <a class=\\\"client-list-link\\\" [routerLink]=\\\"['/clients', client.key, 'jobs', job.key]\\\"><i class=\\\"icon-eye\\\"></i></a>\\n                                </div>\\n                                <ul *ngIf=\\\"isNodeExpanded('jobs', job.key)\\\">\\n                                    <li class=\\\"task\\\" (click)=\\\"changeTask(task.id)\\\" *ngFor=\\\"let task of job.value.tasks\\\">\\n                                        <div class=\\\"color-indicator\\\" [style.background-color]=\\\"task._job.colour\\\"></div>\\n                                        <span class=\\\"task-title external-event\\\" [attr.data-task]=\\\"task.id\\\">{{ task.title }}</span>\\n                                        <a class=\\\"client-list-link\\\" [routerLink]=\\\"['/clients', client.key, 'jobs', job.key]\\\" [queryParams]=\\\"{task: task.id}\\\"><i class=\\\"icon-eye\\\"></i></a>\\n                                    </li>\\n                                </ul>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n        <div class=\\\"col-9 full-height relative\\\">\\n            <div calendar\\n                class=\\\"timesheet\\\"\\n                [options]=\\\"options\\\"\\n                [slotDuration]=\\\"formattedSlotDuration\\\"\\n                [events]=\\\"events$ | async\\\"\\n                (onViewSkeletonRender)=\\\"onViewSkeletonRender($event)\\\"\\n                (onDatesRender)=\\\"onDatesRender($event)\\\"\\n                (onEventRender)=\\\"onEventRender($event)\\\"\\n                (onDrop)=\\\"onDrop($event)\\\"\\n                (onEventDrop)=\\\"onEventDrop($event)\\\"\\n                (onEventResize)=\\\"onEventResize($event)\\\"\\n                (onEventClick)=\\\"onEventClick($event)\\\"\\n                (onWindowResize)=\\\"onWindowResize($event)\\\"\\n                externalEventsWrapperId=\\\"external-events\\\"\\n                externalEventItemClass=\\\".external-event\\\">\\n            </div>\\n            <div time-entry-form\\n                [id]=\\\"selectedEventId\\\"\\n                [newTaskId]=\\\"selectedTaskId\\\"\\n                class=\\\"timesheet-event-overlay\\\"\\n                [class.in]=\\\"selectedEventId\\\"\\n                (close)=\\\"selectedEventId = null; selectedTaskId = null\\\"\\n                *ngIf=\\\"selectedEventId\\\">\\n            </div>\\n        </div>\\n    </div>    \\n    <div class=\\\"row\\\">    \\n        <div class=\\\"col-3 pt-1h\\\">\\n            <div class=\\\"input-group margin-zero\\\">\\n                <div class=\\\"input-group-addon\\\">Slot</div>\\n                <input type=\\\"range\\\" min=\\\"1\\\" max=\\\"30\\\" [(ngModel)]=\\\"slotDuration\\\" (ngModelChange)=\\\"onChangeSlotDuration($event)\\\" name=\\\"slotDuration\\\">\\n                <div class=\\\"input-group-addon\\\">{{ slotDuration }} mins</div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n            <table class=\\\"mb-0\\\">\\n                <thead>\\n                    <tr>\\n                        <th [style.width.px]=\\\"viewAxisWidth\\\" [style.max-width.px]=\\\"viewAxisWidth\\\"></th>\\n                        <th class=\\\"text-center px-0\\\" *ngFor=\\\"let date of viewDates\\\">\\n                            <time-sheet-signoff [user]=\\\"selectedUserId\\\" [date]=\\\"date\\\"></time-sheet-signoff>\\n                        </th>\\n                    </tr>\\n                </thead>                    \\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\"","import * as actions from '../state/actions';\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport { ActionsSubject, select, Store } from '@ngrx/store';\nimport { AppState } from '../state/state';\nimport {\n    CalendarOptions,\n    DatesRenderInfo,\n    DropInfo,\n    EventClickInfo,\n    EventDropInfo,\n    EventObject,\n    EventRenderInfo,\n    EventResizeInfo,\n    ViewSkeletonRenderInfo\n    } from './calendar.component';\nimport { Component, OnInit } from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\nimport { getDatesBetween } from './../utils/generic';\nimport { getEventsForUser, getTasksForUser } from '../state/selectors/timesheet';\nimport { getMeState } from './../state/state';\nimport { IUser } from '../state/reducers/user';\nimport { Observable, Subscription } from 'rxjs';\nimport { getActiveUsers } from '../state/selectors/user';\n\n@Component({\n    templateUrl: './time-sheet.component.html',\n    host: {'class': 'flex-fill-container'}\n})\nexport class TimesheetComponent implements OnInit {\n\n    events$: Observable<EventObject[]>;\n    currentUpdateRequest: Subscription;\n    expanded: any = {\n        clients: [],\n        jobs: []\n    }\n    headerHeight: number;\n    options: CalendarOptions;\n    searchTerms: string[] = [];\n    selectedEventId: number;\n    selectedTaskId: number;\n    selectedUserId: number;\n    slotDuration: number = 5;\n    formattedSlotDuration: string = '00:05:00';\n    subscriptions: Subscription[] = [];\n    tasks$: Observable<any>;\n    users$: Observable<IUser[]>;\n    viewAxisWidth: number;\n    viewDates: any[] = [];\n\n    constructor(\n        private store: Store<AppState>,\n        private actionsSubject: ActionsSubject\n    ) { }\n    \n    ngOnInit() {\n        this.users$ = this.store.pipe(select(getActiveUsers));\n        this.store.pipe(select(getMeState)).subscribe(me => {\n            this.selectedUserId = me.id;\n            this.refetchEvents();\n            this.refetchTasks();\n        });\n\n        this.options = {\n            defaultView: 'agendaWeek',\n            header: {\n                left: 'agendaDay,agendaWeek',\n                center: 'title',\n                right:  'today prev,next'\n            },\n            height: 'parent',\n            firstDay: 1,\n            allDaySlot: false,\n            nowIndicator: true,\n            slotEventOverlap: false,\n            slotDuration: '00:05:00',\n            snapDuration: '00:01:00',\n            defaultTimedEventDuration: '00:05:00',\n            scrollTime: moment().format('HH:00:00'),\n            editable: true,\n            dragRevertDuration: 0,\n            droppable: true,\n            eventOverlap: false\n        };\n    }\n\n    refetchTasks() {\n        this.tasks$ = this.store.pipe(select(getTasksForUser(this.selectedUserId, this.searchTerms)));\n    }\n\n    refetchEvents() {\n        this.events$ = this.store.pipe(select(getEventsForUser(this.selectedUserId)));\n    }\n\n    isNodeExpanded(type: string, id: number) {\n        return this.searchTerms.length > 0 || _.indexOf(this.expanded[type], id) >= 0;\n    }\n\n    toggleNode(type: string, id: number) {\n        const index = _.indexOf(this.expanded[type], id);\n        if (index >= 0) {\n            this.expanded[type].splice(index, 1);\n        } else {\n            this.expanded[type].push(id);\n        }\n    }\n\n    changeTask(task: number) {\n        if (this.selectedEventId) {\n            this.selectedTaskId = task;\n        }\n    }\n\n    onViewSkeletonRender(info: ViewSkeletonRenderInfo) {\n        setTimeout(() => {\n            this.viewAxisWidth = info.view.axisWidth + 10;\n        });\n    }\n\n    onWindowResize(info: any) {\n        setTimeout(() => {\n            this.viewAxisWidth = info.axisWidth + 10;\n        });\n    }\n\n    onDatesRender(info: DatesRenderInfo) {\n        setTimeout(() => {\n            this.viewDates = getDatesBetween(info.view.activeStart, moment(info.view.activeEnd).add(-1, \"days\").toDate())\n        });\n    }\n\n    onEventRender(info: EventRenderInfo) {\n        if (info.event.extendedProps.signed_off) {\n            info.el.style.opacity = '.5';\n        }\n    }\n\n    onDrop(info: DropInfo) {\n        const props = _.get(info.draggedEl, 'fcSeg.eventRange.def.extendedProps') || _.get(info.draggedEl, 'dataset');\n        const payload: any = {\n            user: this.selectedUserId,\n            task: props.task,\n            started_at: moment(info.date).toISOString(),\n            ended_at: moment(info.date).add(5, 'minutes').toISOString(),\n            signed_off: false\n        }\n        this.store.dispatch({type: actions.TimeEntryActions.ADD, payload});\n    }\n\n    onEventDrop(info: EventDropInfo) {\n        const payload: any = {\n            id: info.event.extendedProps.id,\n            started_at: moment(info.event.start).toISOString(),\n            ended_at: moment(info.event.end).toISOString(),\n            signed_off: false\n        }\n        this.updateEvent(info, payload);\n    }\n\n    onEventResize(info: EventResizeInfo) {\n        const payload: any = {\n            id: info.event.extendedProps.id,\n            started_at: moment(info.event.start).toISOString(),\n            ended_at: moment(info.event.end).toISOString(),\n            signed_off: false\n        }\n        this.updateEvent(info, payload);\n    }\n\n    onEventClick(info: EventClickInfo) {\n        this.selectedEventId = info.event.extendedProps.id;\n    }\n\n    onChangeSlotDuration(event: any) {\n        const duration = moment.utc(moment.duration(event, 'minutes').as('milliseconds')).format('HH:mm:ss');\n        this.formattedSlotDuration = duration;\n    }\n\n    private updateEvent(info: any, payload: any) {\n        // if there is a current subscription stop it\n        if (this.currentUpdateRequest) { this.currentUpdateRequest.unsubscribe(); }\n        // update the entry\n        this.store.dispatch({type: actions.TimeEntryActions.PATCH, payload});\n        // if there is an http error revert it\n        this.currentUpdateRequest = this.actionsSubject.pipe(\n            filter((a: any) => a.type === actions.HttpActions.HTTP_ERROR && a.payload.data.id === payload.id),\n            take(1)\n        ).subscribe(\n            () => info.revert()\n        );\n    }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n \n@Directive({\n  selector: 'autoFocus, [autoFocus]'\n})\nexport class AutofocusDirective implements AfterViewInit {\n\n    constructor(private el: ElementRef) { }\n    \n    ngAfterViewInit() {\n        this.el.nativeElement.focus();\n    }\n}","import {\n    AfterViewInit,\n    Directive,\n    ElementRef,\n    HostListener,\n    Input\n    } from '@angular/core';\n\n@Directive({\n    selector: 'textarea[autoResize]'\n})\nexport class AutoResizeDirective implements AfterViewInit {\n\n    constructor(private element: ElementRef) { }\n\n    @Input('autoResize') maxHeight: number;\n\n    @HostListener('input', ['$event.target'])\n    onInput(textArea: HTMLTextAreaElement): void {\n        this.adjust();\n    }\n\n    ngAfterViewInit() {\n        this.adjust();\n    }\n\n    adjust(): void {\n        const ta = this.element.nativeElement;\n        let newHeight;\n        if (ta) {\n            ta.style.overflow = 'hidden';\n            ta.style.height = 'auto';\n            if (this.maxHeight) {\n                newHeight = Math.min(ta.scrollHeight, this.maxHeight);\n            } else {\n                newHeight = ta.scrollHeight;\n            }\n            ta.style.height = newHeight + 'px';\n        }\n    }\n\n}\n","import autoScroll from 'dom-autoscroller';\nimport {\n    AfterViewInit,\n    Directive,\n    ElementRef,\n    Input\n    } from '@angular/core';\n\n@Directive({\n    selector: 'autoScroll, [autoScroll]'\n})\nexport class AutoScrollDirective implements AfterViewInit {\n\n    constructor(private element: ElementRef) { }\n\n    @Input() scrollMargin: number = 50;\n    @Input() scrollMaxSpeed: number = 20;\n    @Input() scrollWhenOutside: boolean = true;\n\n    ngAfterViewInit() {\n        autoScroll([\n            this.element.nativeElement\n        ], {\n            margin: this.scrollMargin,\n            maxSpeed: this.scrollMaxSpeed,\n            scrollWhenOutside: this.scrollWhenOutside,\n            autoScroll: function() {\n                return this.down;\n            }\n        });\n    }\n\n}\n","import { Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[formError]'\n})\nexport class FormErrorDirective implements OnDestroy {\n\n    private control: FormControl;\n    private subscription: Subscription;\n\n    constructor(\n        private templateRef: TemplateRef<any>,\n        private viewContainer: ViewContainerRef) {\n    }\n\n    @Input() set formError(control: FormControl) {\n        this.control = control;\n        this.subscription = this.control.statusChanges.subscribe(() => this.check())\n    }\n\n    private check() {\n        this.viewContainer.clear();\n        if (this.control.invalid && (this.control.dirty || this.control.touched)) {\n            this.viewContainer.createEmbeddedView(this.templateRef);\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n}\n","import * as _ from 'lodash';\n\nimport { AbstractControl, AsyncValidatorFn, FormGroup, ValidatorFn } from '@angular/forms';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { AppState } from './../state/state';\nimport { IActionWithPayload } from './../state/models';\nimport { OnDestroy } from '@angular/core';\n\nexport enum FormCleanAfterMethod {\n    empty = 0,\n    resetToInitial = 1,\n    loadSaved = 2\n}\n\nexport interface IFormOptions {\n    alwaysEditable?: boolean;\n    cleanAfterMethod?: FormCleanAfterMethod;\n}\n\nexport interface IFormActionResult {\n    event: Event,\n    payload: any\n};\n\nconst defaultFormOptions: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n};\n\nexport class BaseForm extends FormGroup implements OnDestroy {\n\n    options: IFormOptions;\n    initialData: any;\n    controls: {};\n    createAction: string\n    createSuccessAction: string\n    updateAction: string\n    updateSuccessAction: string\n    deleteAction: string\n    deleteSuccessAction: string\n\n    private _editable = false;\n    private _formDeletedSubject = new Subject<IFormActionResult>();\n    private _formSavedSubject = new Subject<IFormActionResult>();\n\n    protected _subscriptions: Subscription[] = [];\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        controls: { [key: string]: AbstractControl; },\n        validator?: ValidatorFn,\n        asyncValidator?: AsyncValidatorFn,\n        formOptions?: IFormOptions,\n    ) {\n        super(controls, validator, asyncValidator);\n        // set the options\n        this.options = _.assign({}, defaultFormOptions, formOptions);\n        // setup the form\n        this.editable = this.options.alwaysEditable;\n    }\n    \n    ngOnDestroy() {\n        _.each(this._subscriptions, s => s.unsubscribe());\n    }\n\n    get formSaved(): Observable<any> {\n        return this._formSavedSubject.asObservable();\n    }\n\n    get formDeleted(): Observable<any> {\n        return this._formDeletedSubject.asObservable();\n    }\n    \n    get editable(): boolean {\n        return this._editable;\n    }\n\n    set editable(value: boolean) {\n        this._editable = value;\n        this.setControlState();\n    }\n\n    load(data: any) {\n        // if the form is dirty dont load the changes in\n        if (!this.pristine) {\n            return;\n        }\n\n        // set the initial data incase we need to reset it\n        this.initialData = data;\n        // patch the form as no all fields will be defined\n        this.patchValue(data);\n    }\n\n    save(event: Event) {\n        // save the form data\n        event.stopPropagation();\n        \n        if (!this.valid) {\n            // set the controls to touched so we can display the errors\n            _.forEach(this.controls, (c, k) => {\n                this.controls[k].markAsTouched();\n                this.controls[k].updateValueAndValidity();\n            });\n            // just return out\n            return;\n        }\n        \n        this.prepareValueForDispatch();\n\n        if (this.createAction && !this.value.id) {\n            // create a new record as we have no id\n            this.store.dispatch({ type: this.createAction, payload: this.getValuePayload() });\n        } else if (this.updateAction && this.value.id) {\n            // update or patch the record\n            this.store.dispatch({ type: this.updateAction, payload: this.getValuePayload() });\n        } else {\n            return;\n        }\n        \n        // wait for the result\n        this.waitForResult(event);\n    }\n\n    prepareValueForDispatch() {\n        // use as a trigger point to ammend and values before save\n    }\n\n    getValuePayload() {\n        // returns the pata to post to the api\n        return this.value;\n    }\n\n    cancel(event: Event) {\n        event.stopPropagation();\n\n        this.reset(this.initialData);\n        \n        if (!this.options.alwaysEditable) {\n            this.editable = false;\n        }\n    }\n\n    delete(event: Event) {\n        // delete the instance in the form\n        event.stopPropagation();\n        \n        if (!this.deleteAction || !this.value.id) {\n            return;\n        }\n\n        // delete the record\n        this.store.dispatch({ type: this.deleteAction, payload: this.getValuePayload() });\n        \n        // wait for the result\n        this.waitForResult(event);\n    }\n\n    resetAndClose(payload) {\n        if (this.options.cleanAfterMethod == FormCleanAfterMethod.empty) {\n            this.initialData = {};\n        } else if (this.options.cleanAfterMethod == FormCleanAfterMethod.loadSaved) {\n            this.initialData = payload;\n        } else if (this.options.cleanAfterMethod == FormCleanAfterMethod.resetToInitial) {\n            // do nothing\n        }\n        \n        this.reset(this.initialData);\n        \n        if (!this.options.alwaysEditable) {\n            this.editable = false;\n        }\n    }\n\n    setControlState() {\n        // enable or disable all controls\n        if (this.editable) {\n            this.enable();\n        } else {\n            this.disable();\n        }\n    }\n\n    waitForResult(event) {\n        // all store actions pass through the actionsSubject\n        // watch for our save or delete success actions and reset/close the form\n        return this.actionsSubject.pipe(\n            filter(\n                (action: IActionWithPayload) =>\n                _.includes([this.createSuccessAction, this.updateSuccessAction, this.deleteSuccessAction], action.type)\n            ),\n            filter(\n                action => this.value.id === null || this.value.id === action.payload.id\n            ),\n            take(1)\n        ).subscribe(\n            action => {\n                if (this.deleteSuccessAction === action.type) {\n                    // after delete totally reset the form\n                    // this may need to be taylored later in options but ok for now\n                    this.initialData = {};\n                    this.reset(this.initialData);\n                    this.editable = false;\n                    // and push the data to the observable\n                    this._formDeletedSubject.next({event: event, payload: action.payload});\n                } else {\n                    // reset the form\n                    this.resetAndClose(action.payload);\n                    // and push the data to the observable\n                    this._formSavedSubject.next({event: event, payload: action.payload});\n                }\n            }\n        );\n    }\n\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { AppState } from '../state/state';\nimport { phoneReg } from '../utils/regex';\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class ClientContactForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        client: FormControl\n        first_name: FormControl\n        last_name: FormControl\n        phone_number: FormControl\n        mobile_number: FormControl\n        email_address: FormControl\n        address: FormControl\n        position: FormControl\n        notes: FormControl\n    };\n    createAction = actions.ClientContactActions.ADD;\n    createSuccessAction = actions.ClientContactActions.ADD_SUCCESS;\n    updateAction = actions.ClientContactActions.UPDATE;\n    updateSuccessAction = actions.ClientContactActions.UPDATE_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                client: new FormControl(null, Validators.required),\n                first_name: new FormControl(null, Validators.required),\n                last_name: new FormControl(null, Validators.required),\n                phone_number: new FormControl(null, Validators.pattern(phoneReg)),\n                mobile_number: new FormControl(null),\n                email_address: new FormControl(null, Validators.email),\n                address: new FormControl(null),\n                position: new FormControl(null),\n                notes: new FormControl(null),\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\nimport { hexReg, phoneReg, urlReg } from '../utils/regex';\n\nimport { AppState } from '../state/state';\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class ClientDetailForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        name: FormControl\n        colour: FormControl\n        phone_number: FormControl\n        email_address: FormControl\n        website: FormControl\n        address: FormControl\n        notes: FormControl\n    };\n    createAction = actions.ClientActions.ADD;\n    createSuccessAction = actions.ClientActions.ADD_SUCCESS;\n    updateAction = actions.ClientActions.UPDATE;\n    updateSuccessAction = actions.ClientActions.UPDATE_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                name: new FormControl('', Validators.required),\n                colour: new FormControl('', [Validators.required, Validators.pattern(hexReg)]),\n                phone_number: new FormControl(null, Validators.pattern(phoneReg)),\n                email_address: new FormControl(null, Validators.email),\n                website: new FormControl(null, Validators.pattern(urlReg)),\n                address: new FormControl(null),\n                notes: new FormControl(null)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\nimport { decimal10at2, hexReg } from '../utils/regex';\n\nimport { AppState } from '../state/state';\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class JobDetailForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        title: FormControl\n        description: FormControl\n        client: FormControl\n        type: FormControl\n        estimated_hours: FormControl\n        colour: FormControl\n        status: FormControl\n        billed_to: FormControl\n    };\n    createAction = actions.JobActions.ADD;\n    createSuccessAction = actions.JobActions.ADD_SUCCESS;\n    updateAction = actions.JobActions.UPDATE;\n    updateSuccessAction = actions.JobActions.UPDATE_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                title: new FormControl('', Validators.required),\n                description: new FormControl(null),\n                client: new FormControl('', Validators.required),\n                type: new FormControl('', Validators.required),\n                estimated_hours: new FormControl(null, Validators.pattern(decimal10at2)),\n                colour: new FormControl('', [Validators.required, Validators.pattern(hexReg)]),\n                status: new FormControl('', Validators.required),\n                billed_to: new FormControl(null),\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n\n    getValuePayload() {\n        return _.assign({}, this.value, {\n            billed_to: this.value.billed_to instanceof Date ? this.value.billed_to.toISOString().slice(0, 10) : this.value.billed_to\n        })\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { AppState } from '../state/state';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class JobNoteForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        job: FormControl\n        note: FormControl\n    };\n    createAction = actions.JobNoteActions.ADD;\n    createSuccessAction = actions.JobNoteActions.ADD_SUCCESS;\n    updateAction = actions.JobNoteActions.UPDATE;\n    updateSuccessAction = actions.JobNoteActions.UPDATE_SUCCESS;\n    deleteAction = actions.JobNoteActions.REMOVE;\n    deleteSuccessAction = actions.JobNoteActions.REMOVE_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                job: new FormControl(null, Validators.required),\n                note: new FormControl('', Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { AppState } from '../state/state';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\nimport { integerReg } from '../utils/regex';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class JobRecurringCostForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        job: FormControl\n        type: FormControl\n        last_invoiced_date: FormControl\n        billing_interval: FormControl\n        billing_frequency: FormControl\n        payment_option: FormControl\n    };\n    createAction = actions.JobRecurringCostActions.ADD;\n    createSuccessAction = actions.JobRecurringCostActions.ADD_SUCCESS;\n    updateAction = actions.JobRecurringCostActions.UPDATE;\n    updateSuccessAction = actions.JobRecurringCostActions.UPDATE_SUCCESS;\n    deleteAction = actions.JobRecurringCostActions.REMOVE;\n    deleteSuccessAction = actions.JobRecurringCostActions.REMOVE_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                job: new FormControl(null, Validators.required),\n                type: new FormControl(null, Validators.required),\n                last_invoiced_date: new FormControl(null),\n                billing_interval: new FormControl(null, [Validators.required, Validators.pattern(integerReg)]),\n                billing_frequency: new FormControl(null, Validators.required),\n                payment_option: new FormControl(null, Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n\n    getValuePayload() {\n        return _.assign({}, this.value, {\n            last_invoiced_date: this.value.last_invoiced_date instanceof Date ? this.value.last_invoiced_date.toISOString().slice(0, 10) : this.value.last_invoiced_date\n        })\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { AppState } from '../state/state';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class JobRelationshipForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        job: FormControl\n        user: FormControl\n        relationship: FormControl\n    };\n    createAction = actions.JobRelationshipActions.ADD;\n    createSuccessAction = actions.JobRelationshipActions.ADD_SUCCESS;\n    updateAction = actions.JobRelationshipActions.UPDATE;\n    updateSuccessAction = actions.JobRelationshipActions.UPDATE_SUCCESS;\n    deleteAction = actions.JobRelationshipActions.REMOVE;\n    deleteSuccessAction = actions.JobRelationshipActions.REMOVE_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                job: new FormControl(null, Validators.required),\n                user: new FormControl(null, Validators.required),\n                relationship: new FormControl(null, Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { AppState } from '../state/state';\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskAssigneeForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        task: FormControl\n        user: FormControl\n        allocated_hours: FormControl\n    };\n    createAction = actions.TaskAssigneeActions.ADD;\n    createSuccessAction = actions.TaskAssigneeActions.ADD_SUCCESS;\n    updateAction = actions.TaskAssigneeActions.UPDATE;\n    updateSuccessAction = actions.TaskAssigneeActions.UPDATE_SUCCESS;\n    deleteAction = actions.TaskAssigneeActions.REMOVE;\n    deleteSuccessAction = actions.TaskAssigneeActions.REMOVE_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                task: new FormControl(null, Validators.required),\n                user: new FormControl(null, Validators.required),\n                allocated_hours: new FormControl(null, Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\n\nimport { FormControl, Validators } from '@angular/forms';\nimport { ActionsSubject, Store } from '@ngrx/store';\n\nimport * as actions from '../state/actions';\nimport { AppState } from '../state/state';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskClosedForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        closed: FormControl\n    };\n    createAction = actions.TaskActions.ADD;\n    createSuccessAction = actions.TaskActions.ADD_SUCCESS;\n    updateAction = actions.TaskActions.PATCH;\n    updateSuccessAction = actions.TaskActions.PATCH_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                closed: new FormControl('', Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\n\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { AppState } from '../state/state';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.resetToInitial\n}\n\nexport class TaskCreateForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        title: FormControl\n        job: FormControl\n        status: FormControl\n        order: FormControl\n    };\n    createAction = actions.TaskActions.ADD;\n    createSuccessAction = actions.TaskActions.ADD_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                title: new FormControl('', Validators.required),\n                job: new FormControl(null, Validators.required),\n                status: new FormControl(null, Validators.required),\n                order: new FormControl(null, Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { AppState } from '../state/state';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl } from '@angular/forms';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskDescriptionForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        description: FormControl\n    };\n    createAction = actions.TaskActions.ADD;\n    createSuccessAction = actions.TaskActions.ADD_SUCCESS;\n    updateAction = actions.TaskActions.PATCH;\n    updateSuccessAction = actions.TaskActions.PATCH_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                description: new FormControl('')\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { AppState } from '../state/state';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\n\n\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskNotChargeableForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        not_chargeable: FormControl\n    };\n    createAction = actions.TaskActions.ADD;\n    createSuccessAction = actions.TaskActions.ADD_SUCCESS;\n    updateAction = actions.TaskActions.PATCH;\n    updateSuccessAction = actions.TaskActions.PATCH_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                not_chargeable: new FormControl('', Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { AppState } from '../state/state';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\n\n\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.resetToInitial\n}\n\nexport class TaskNoteForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        task: FormControl\n        note: FormControl\n    };\n    createAction = actions.TaskNoteActions.ADD;\n    createSuccessAction = actions.TaskNoteActions.ADD_SUCCESS;\n    updateAction = actions.TaskNoteActions.UPDATE;\n    updateSuccessAction = actions.TaskNoteActions.UPDATE_SUCCESS;\n    deleteAction = actions.TaskNoteActions.REMOVE;\n    deleteSuccessAction = actions.TaskNoteActions.REMOVE_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                task: new FormControl(null, Validators.required),\n                note: new FormControl('', Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport { take } from 'rxjs/operators';\n\nimport { FormControl, Validators } from '@angular/forms';\nimport { ActionsSubject, select, Store } from '@ngrx/store';\n\nimport * as actions from '../state/actions';\nimport { getTaskStateForJob } from '../state/selectors/task';\nimport { AppState } from '../state/state';\nimport { calculateOrder } from '../utils/task';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskStatusForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        status: FormControl,\n        order: FormControl\n    };\n    updateAction = actions.TaskActions.PATCH;\n    updateSuccessAction = actions.TaskActions.PATCH_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                status: new FormControl('', Validators.required),\n                order: new FormControl(null, Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n\n    async prepareValueForDispatch() {\n        return this.store.pipe(\n            select(getTaskStateForJob(this.initialData.job)),\n            take(1)\n        ).toPromise().then(\n            tasks => {\n                tasks = _.filter(tasks, ['status', this.value.status]);\n                tasks = [this.value, ...tasks];\n                const order = calculateOrder(0, tasks, this.value);\n                this.controls.order.setValue(order);\n            }\n        )\n    }\n    \n    async save(event: Event) {\n        // save the form data\n        event.stopPropagation();\n        \n        if (!this.valid) {\n            // set the controls to touched so we can display the errors\n            _.forEach(this.controls, (c, k) => {\n                this.controls[k].markAsTouched();\n                this.controls[k].updateValueAndValidity();\n            });\n            // just return out\n            return;\n        }\n        \n        await this.prepareValueForDispatch();\n\n        this.store.dispatch({ type: this.updateAction, payload: this.getValuePayload() });\n        \n        // wait for the result\n        this.waitForResult(event);\n\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { AppState } from '../state/state';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { filter, take } from 'rxjs/operators';\nimport { FormControl, Validators } from '@angular/forms';\nimport { IActionWithPayload } from '../state/models';\n\n\n\nconst options: IFormOptions = {\n    alwaysEditable: false,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskTagForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        object_id: FormControl\n        tag: FormControl\n    };\n    createAction = actions.TaskTagActions.ADD;\n    createSuccessAction = actions.TaskTagActions.ADD_SUCCESS;\n    updateAction = actions.TaskTagActions.UPDATE;\n    updateSuccessAction = actions.TaskTagActions.UPDATE_SUCCESS;\n    deleteAction = actions.TaskTagActions.REMOVE;\n    deleteSuccessAction = actions.TaskTagActions.REMOVE_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                object_id: new FormControl(null, Validators.required),\n                tag: new FormControl(null, Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n\n    addNew(title: string) {\n        this.store.dispatch({type: actions.TagActions.ADD, payload: {name: title}});\n        this.actionsSubject.pipe(\n            filter((action: IActionWithPayload) => action.type == actions.TagActions.ADD_SUCCESS),\n            take(1)\n        ).subscribe(\n            action => {\n                this.controls.tag.setValue(action.payload.id)\n            }\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { AppState } from '../state/state';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl } from '@angular/forms';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskTargetDateForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        target_date: FormControl\n    };\n    createAction = actions.TaskActions.ADD;\n    createSuccessAction = actions.TaskActions.ADD_SUCCESS;\n    updateAction = actions.TaskActions.PATCH;\n    updateSuccessAction = actions.TaskActions.PATCH_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                target_date: new FormControl(null)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n\n    getValuePayload() {\n        return _.assign({}, this.value, {\n            target_date: this.value.target_date instanceof Date ? this.value.target_date.toISOString().slice(0, 10) : this.value.target_date\n        })\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { AppState } from '../state/state';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TaskTitleForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        title: FormControl\n    };\n    createAction = actions.TaskActions.ADD;\n    createSuccessAction = actions.TaskActions.ADD_SUCCESS;\n    updateAction = actions.TaskActions.PATCH;\n    updateSuccessAction = actions.TaskActions.PATCH_SUCCESS;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null),\n                title: new FormControl('', Validators.required)\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n    }\n}\n","import * as _ from 'lodash';\nimport * as actions from '../state/actions';\nimport * as moment from 'moment';\n\nimport { ActionsSubject, Store, select } from '@ngrx/store';\nimport { BaseForm, FormCleanAfterMethod, IFormOptions } from './base.form';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { AppState } from '../state/state';\nimport { ITask } from './../state/reducers/task';\nimport { Observable } from '../../../node_modules/rxjs';\nimport { getTaskCollectionById } from '../state/selectors/task';\nimport { time24Reg } from '../utils/regex';\n\nconst options: IFormOptions = {\n    alwaysEditable: true,\n    cleanAfterMethod: FormCleanAfterMethod.loadSaved\n}\n\nexport class TimeEntryForm extends BaseForm {\n\n    controls: {\n        id: FormControl\n        task: FormControl\n        started_at: FormControl\n        started_at_time: FormControl\n        ended_at: FormControl\n        ended_at_time: FormControl\n        comments: FormControl,\n        signed_off: FormControl\n    };\n    updateAction = actions.TimeEntryActions.PATCH;\n    updateSuccessAction = actions.TimeEntryActions.PATCH_SUCCESS;\n    deleteAction = actions.TimeEntryActions.REMOVE;\n    deleteSuccessAction = actions.TimeEntryActions.REMOVE_SUCCESS;\n\n    task$: Observable<ITask>;\n\n    constructor(\n        protected store: Store<AppState>,\n        protected actionsSubject: ActionsSubject,\n        formOptions?: IFormOptions\n    ) {\n        super(\n            store,\n            actionsSubject,\n            {\n                id: new FormControl(null, Validators.required),\n                task: new FormControl(null, Validators.required),\n                started_at: new FormControl(null, Validators.required),\n                started_at_time: new FormControl(null, [Validators.required, Validators.pattern(time24Reg)]),\n                ended_at: new FormControl(null, Validators.required),\n                ended_at_time: new FormControl(null, [Validators.required, Validators.pattern(time24Reg)]),\n                comments: new FormControl(null),\n                signed_off: new FormControl(false),\n            },\n            null,\n            null,\n            _.assign({}, options, formOptions)\n        );\n        \n        // subscribe to the time changes and update the full date time fields\n        this.controls.started_at_time.valueChanges.subscribe(\n            value => {\n                if (!value) { return };\n                const timeSplit = value.split(':');\n                const date = moment(this.controls.started_at.value).set({h: timeSplit[0], m: timeSplit[1]});\n                this.controls.started_at.setValue(date.toISOString());\n            }\n        )\n        this.controls.ended_at_time.valueChanges.subscribe(\n            value => {\n                if (!value) { return };\n                const timeSplit = value.split(':');\n                const date = moment(this.controls.ended_at.value).set({h: timeSplit[0], m: timeSplit[1]});\n                this.controls.ended_at.setValue(date.toISOString());\n            }\n        )\n        // reload the selected task data\n        this.controls.task.valueChanges.subscribe(\n            value => {\n                this.task$ = this.store.pipe(select(getTaskCollectionById(value)));\n            }\n        )\n    }\n\n    load(data: any) {\n        // set the initial data incase we need to reset it\n        this.initialData = data;\n        // patch the form as no all fields will be defined\n        this.patchValue(data);\n        // set the time fields values\n        this.controls.started_at_time.setValue(moment(data.started_at).format('HH:mm'));\n        this.controls.ended_at_time.setValue(moment(data.ended_at).format('HH:mm'));\n        this.controls.signed_off.setValue(false);\n        // load the selected task data\n        this.task$ = this.store.pipe(select(getTaskCollectionById(data.task)));\n    }\n\n}\n","import * as _ from 'lodash';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { IClient } from '../state/reducers/client';\nimport { valueOr } from '../utils/generic';\n\n@Pipe({\n    name: 'clientSearch',\n    pure: true\n})\nexport class ClientSearchPipe implements PipeTransform {\n    public transform(array: IClient[], terms: string[]): any {\n        if (!terms || terms.length == 0) {\n            return array;\n        }\n        return array.filter((ob) => this.filterObject(ob, terms));\n    }\n\n    private filterObject = (value: IClient, terms: string[]) => {\n        let found: boolean = true;\n        _.each(terms, (term) => {\n            if (!_.includes(valueOr(value.name).toLowerCase(), term.toLowerCase()) &&\n                !_.includes(valueOr(value.phone_number).toLowerCase(), term.toLowerCase()) &&\n                !_.includes(valueOr(value.email_address).toLowerCase(), term.toLowerCase()) &&\n                !_.includes(valueOr(value.website).toLowerCase(), term.toLowerCase()) &&\n                !_.includes(valueOr(value.address).toLowerCase(), term.toLowerCase())\n            ) {\n                found = false;\n            }\n        });\n        return found;\n    }\n}","import * as _ from 'lodash';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { IJob } from '../state/reducers/job';\n\n@Pipe({\n    name: 'closedJobs',\n    pure: true\n})\nexport class ClosedJobsPipe implements PipeTransform {\n    public transform(array: IJob[]): any {\n        return _.filter(array, ['_status.closed', true])\n    }\n}","import * as _ from 'lodash';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'get',\n    pure: true\n})\nexport class GetPipe implements PipeTransform {\n    public transform(object: any, path: string, fallback: string = '-'): any {\n        return _.get(object, path, fallback) || fallback;\n    }\n}","import * as _ from 'lodash';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { IJob } from '../state/reducers/job';\nimport { valueOr } from '../utils/generic';\n\n@Pipe({\n    name: 'jobSearch',\n    pure: true\n})\nexport class JobSearchPipe implements PipeTransform {\n    public transform(array: IJob[], terms: string[]): any {\n        if (!terms || terms.length == 0) {\n            return array;\n        }\n        return array.filter((ob) => this.filterObject(ob, terms));\n    }\n\n    private filterObject = (value: IJob, terms: string[]) => {\n        let found: boolean = true;\n        _.each(terms, (term) => {\n            if (!_.includes(valueOr(value.title).toLowerCase(), term.toLowerCase()) &&\n                !_.includes(valueOr(value._status.title).toLowerCase(), term.toLowerCase())\n            ) {\n                found = false;\n            }\n        });\n        return found;\n    }\n}","import * as _ from 'lodash';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { IJob } from '../state/reducers/job';\n\n@Pipe({\n    name: 'openJobs',\n    pure: true\n})\nexport class OpenJobsPipe implements PipeTransform {\n    public transform(array: IJob[]): any {\n        return _.filter(array, ['_status.closed', false])\n    }\n}","import * as _ from 'lodash';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'orderBy',\n    pure: true\n})\nexport class OrderByPipe implements PipeTransform {\n    public transform(objects: any[], fields: string[], type: any[]): any {\n        return _.orderBy(objects, fields, type);\n    }\n}","import * as _ from 'lodash';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { ITask } from '../state/reducers/task';\nimport { valueOr } from '../utils/generic';\n\n@Pipe({\n    name: 'taskSearch',\n    pure: true\n})\nexport class TaskSearchPipe implements PipeTransform {\n    public transform(array: ITask[], terms: string[]): any {\n        if (!terms || terms.length == 0) {\n            return array;\n        }\n        return array.filter((ob) => this.filterObject(ob, terms));\n    }\n\n    private filterObject = (value: ITask, terms: string[]) => {\n        let found: boolean = true;\n        _.each(terms, (term) => {\n            if (!_.includes(value.id.toString(), term.toLowerCase()) &&\n                !_.includes(value.title.toLowerCase(), term.toLowerCase()) &&\n                !_.includes(valueOr(value._job.title).toLowerCase(), term.toLowerCase()) &&\n                !_.includes(valueOr(value._job._client.name).toLowerCase(), term.toLowerCase()) &&\n                !_.includes(valueOr(value._status.title).toLowerCase(), term.toLowerCase())\n            ) {\n                found = false;\n            }\n        });\n        return found;\n    }\n}","import * as _ from 'lodash';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { ITask } from '../state/reducers/task';\n\n@Pipe({\n    name: 'tasksByStatus',\n    pure: true\n})\nexport class TasksByStatusPipe implements PipeTransform {\n    public transform(array: ITask[], status: number): any {\n        return _.filter(array, ['status', status])\n    }\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { IActionWithHTTPData } from '../state/models';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class APIService {\n\n    constructor(private http: HttpClient) { }\n\n    private get headers() {\n        return new HttpHeaders({'Content-Type': 'application/json'});\n    }\n\n    all(url: string, options: IActionWithHTTPData = {}): Observable<any> {\n        return this.http.get(`${url}`, { headers: this.headers, params: options.params });\n    }\n\n    one(url: string, id: number): Observable<any> {\n        return this.http.get(`${url}${id}/`, { headers: this.headers });\n    }\n\n    create(url: string, object: any): Observable<any> {\n        return this.http.post(`${url}`, object, { headers: this.headers });\n\n    }\n\n    update(url: string, object: any): Observable<any> {\n        return this.http.put(`${url}${object.id}/`, object, { headers: this.headers });\n    }\n\n    patch(url: string, object: any): Observable<any> {\n        return this.http.patch(`${url}${object.id}/`, object, { headers: this.headers });\n    }\n\n    remove(url: string, object: any): Observable<any> {\n        // Here we are returning the object back as a delete response has no content\n        return this.http.delete(`${url}${object.id}/`, { headers: this.headers })\n        .pipe(map(() => object));\n    }\n\n    options(url: string): Observable<any> {\n        return this.http.options(`${url}`, { headers: this.headers });\n    }\n\n    post(url: string, object: any): Observable<any> {\n        return this.http.post(`${url}`, object, { headers: this.headers });\n    }\n\n}\n","import { APIService } from './api';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DeletableService {\n\n    public static CLIENT = { app_label: 'wip', model_name: 'client' };\n    public static JOB = { app_label: 'wip', model_name: 'job' };\n    public static TASK = { app_label: 'wip', model_name: 'task' };\n\n    private baseUrl: string = '/api/protected/';\n\n    constructor(\n        public api: APIService\n    ) { }\n\n    public check(type: any, pk: number): Promise<boolean> {\n        return this.getProtected(type, pk).toPromise().then(\n            (data) => {\n                if (data.length == 0) {\n                    return Promise.resolve(true);\n                } else {\n                    return Promise.resolve(false);\n                }\n            },\n            (err) => {\n                return Promise.resolve(false);\n            }\n        );\n    }\n\n    public getProtected(type: any, pk: number) {\n        const queryParams = `?app_label=${type.app_label}&model_name=${type.model_name}&pk=${pk}`;\n        return this.api.all(`${this.baseUrl}${queryParams}`);\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Globals {\n  appJSRoot: string = window['appJSRoot'];\n  logoutUrl: string = window['logoutUrl'];\n  wsScheme: string = window.location.protocol === 'https:' ? 'wss' : 'ws';\n  host: string = window.location.host;\n  dataSocketUrl: string = `${this.wsScheme}://${this.host}/data/stream/`;\n  dataSocketRetryDelay: 1000;\n}\n","import { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport * as actions from '../state/actions';\nimport { AppState } from '../state/state';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n    constructor(private store: Store<AppState>) {}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        if (req.method !== 'GET') {\n            return next.handle(req);\n        }\n\n        this._requestStarted();\n\n        return next.handle(req).pipe(\n            finalize(() => this._requestEnded())\n        );\n\n    }\n\n    private _requestStarted() {\n        this.store.dispatch({ type: actions.HttpActions.INCREMENT_PENDING });\n    }\n\n    private _requestEnded() {\n        this.store.dispatch({ type: actions.HttpActions.DECREMENT_PENDING });\n    }\n\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IBillingFrequency } from '../reducers/billingfrequency';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BillingFrequencyActions {\n\n    static LOAD_ALL = '[BillingFrequency] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[BillingFrequency] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[BillingFrequency] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[BillingFrequency] LOAD_ONE_SUCCESS';\n    static ADD = '[BillingFrequency] ADD';\n    static ADD_SUCCESS = '[BillingFrequency] ADD_SUCCESS';\n    static UPDATE = '[BillingFrequency] UPDATE';\n    static UPDATE_SUCCESS = '[BillingFrequency] UPDATE_SUCCESS';\n    static REMOVE = '[BillingFrequency] REMOVE';\n    static REMOVE_SUCCESS = '[BillingFrequency] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: BillingFrequencyActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IBillingFrequency[]): IActionWithPayload {\n        return { type: BillingFrequencyActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: BillingFrequencyActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IBillingFrequency): IActionWithPayload {\n        return { type: BillingFrequencyActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IBillingFrequency): IActionWithPayload {\n        return { type: BillingFrequencyActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IBillingFrequency): IActionWithPayload {\n        return { type: BillingFrequencyActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IBillingFrequency): IActionWithPayload {\n        return { type: BillingFrequencyActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IBillingFrequency): IActionWithPayload {\n        return { type: BillingFrequencyActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IBillingFrequency): IActionWithPayload {\n        return { type: BillingFrequencyActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IBillingFrequency): IActionWithPayload {\n        return { type: BillingFrequencyActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IClient } from '../reducers/client';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientActions {\n\n    static LOAD_ALL = '[Client] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[Client] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[Client] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[Client] LOAD_ONE_SUCCESS';\n    static ADD = '[Client] ADD';\n    static ADD_SUCCESS = '[Client] ADD_SUCCESS';\n    static UPDATE = '[Client] UPDATE';\n    static UPDATE_SUCCESS = '[Client] UPDATE_SUCCESS';\n    static REMOVE = '[Client] REMOVE';\n    static REMOVE_SUCCESS = '[Client] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: ClientActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IClient[]): IActionWithPayload {\n        return { type: ClientActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: ClientActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IClient): IActionWithPayload {\n        return { type: ClientActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IClientContact } from '../reducers/clientcontact';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientContactActions {\n\n    static LOAD_ALL = '[ClientContact] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[ClientContact] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[ClientContact] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[ClientContact] LOAD_ONE_SUCCESS';\n    static ADD = '[ClientContact] ADD';\n    static ADD_SUCCESS = '[ClientContact] ADD_SUCCESS';\n    static UPDATE = '[ClientContact] UPDATE';\n    static UPDATE_SUCCESS = '[ClientContact] UPDATE_SUCCESS';\n    static PATCH = '[ClientContact] PATCH';\n    static PATCH_SUCCESS = '[ClientContact] PATCH_SUCCESS';\n    static REMOVE = '[ClientContact] REMOVE';\n    static REMOVE_SUCCESS = '[ClientContact] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: ClientContactActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IClientContact[]): IActionWithPayload {\n        return { type: ClientContactActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: ClientContactActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IClientContact): IActionWithPayload {\n        return { type: ClientContactActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IClientContact): IActionWithPayload {\n        return { type: ClientContactActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IClientContact): IActionWithPayload {\n        return { type: ClientContactActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IClientContact): IActionWithPayload {\n        return { type: ClientContactActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IClientContact): IActionWithPayload {\n        return { type: ClientContactActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: IClientContact): IActionWithPayload {\n        return { type: ClientContactActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: IClientContact): IActionWithPayload {\n        return { type: ClientContactActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: IClientContact): IActionWithPayload {\n        return { type: ClientContactActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IClientContact): IActionWithPayload {\n        return { type: ClientContactActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IClientContactTag } from '../reducers/clientcontacttag';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientContactTagActions {\n\n    static LOAD_ALL = '[ClientContactTag] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[ClientContactTag] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[ClientContactTag] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[ClientContactTag] LOAD_ONE_SUCCESS';\n    static ADD = '[ClientContactTag] ADD';\n    static ADD_SUCCESS = '[ClientContactTag] ADD_SUCCESS';\n    static UPDATE = '[ClientContactTag] UPDATE';\n    static UPDATE_SUCCESS = '[ClientContactTag] UPDATE_SUCCESS';\n    static PATCH = '[ClientContactTag] PATCH';\n    static PATCH_SUCCESS = '[ClientContactTag] PATCH_SUCCESS';\n    static REMOVE = '[ClientContactTag] REMOVE';\n    static REMOVE_SUCCESS = '[ClientContactTag] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: ClientContactTagActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IClientContactTag[]): IActionWithPayload {\n        return { type: ClientContactTagActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: ClientContactTagActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IClientContactTag): IActionWithPayload {\n        return { type: ClientContactTagActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IClientContactTag): IActionWithPayload {\n        return { type: ClientContactTagActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IClientContactTag): IActionWithPayload {\n        return { type: ClientContactTagActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IClientContactTag): IActionWithPayload {\n        return { type: ClientContactTagActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IClientContactTag): IActionWithPayload {\n        return { type: ClientContactTagActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: IClientContactTag): IActionWithPayload {\n        return { type: ClientContactTagActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: IClientContactTag): IActionWithPayload {\n        return { type: ClientContactTagActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: IClientContactTag): IActionWithPayload {\n        return { type: ClientContactTagActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IClientContactTag): IActionWithPayload {\n        return { type: ClientContactTagActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataActions {\n\n    static LOAD_DATA = '[Data] LOAD_DATA';\n\n    LoadData(payload: boolean): IActionWithPayload {\n        return { type: DataActions.LOAD_DATA, payload };\n    }\n\n}\n","import { IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterActions {\n\n    static CLIENT = '[Filter] CLIENT';\n    static JOB = '[Filter] JOB';\n    static OVERDUE = '[Filter] OVERDUE';\n    static USER = '[Filter] USER';\n\n    Client(payload: number): IActionWithPayload {\n        return { type: FilterActions.CLIENT, payload };\n    }\n\n    Job(payload: number): IActionWithPayload {\n        return { type: FilterActions.JOB, payload };\n    }\n\n    Overdue(payload: number): IActionWithPayload {\n        return { type: FilterActions.OVERDUE, payload };\n    }\n\n    User(payload: number): IActionWithPayload {\n        return { type: FilterActions.USER, payload };\n    }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\nimport { Action } from '@ngrx/store';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpActions {\n\n    static HTTP_ERROR = '[Http] HTTP_ERROR';\n    static INCREMENT_PENDING = '[Http] INCREMENT_PENDING';\n    static DECREMENT_PENDING = '[Http] DECREMENT_PENDING';\n\n    HttpError(payload: HttpErrorResponse): IActionWithPayload {\n        return { type: HttpActions.HTTP_ERROR, payload };\n    }\n\n    IncrementPending(): Action {\n        return { type: HttpActions.INCREMENT_PENDING };\n    }\n\n    DecrementPending(): Action {\n        return { type: HttpActions.DECREMENT_PENDING };\n    }\n\n}\n","import { BillingFrequencyActions } from './billingfrequency';\nimport { ClientActions } from './client';\nimport { ClientContactActions } from './clientcontact';\nimport { ClientContactTagActions } from './clientcontacttag';\nimport { DataActions } from './data';\nimport { FilterActions } from './filters';\nimport { HttpActions } from './http';\nimport { JobActions } from './job';\nimport { JobFileActions } from './jobfile';\nimport { JobNoteActions } from './jobnote';\nimport { JobRecurringCostActions } from './jobrecurringcost';\nimport { JobRelationshipActions } from './jobrelationship';\nimport { JobStatusActions } from './jobstatus';\nimport { JobTimingActions } from './jobtiming';\nimport { JobTypeActions } from './jobtype';\nimport { MakeCallActions } from './makecall';\nimport { MeActions } from './me';\nimport { PaymentOptionActions } from './paymentoption';\nimport { PositionActions } from './position';\nimport { RecurringCostTypeActions } from './recurringcosttype';\nimport { RelationshipActions } from './relationship';\nimport { SocketActions } from './socket';\nimport { TabActions } from './tabs';\nimport { TagActions } from './tag';\nimport { TaskActions } from './task';\nimport { TaskAssigneeActions } from './taskassignee';\nimport { TaskFileActions } from './taskfile';\nimport { TaskNoteActions } from './tasknote';\nimport { TaskStatusActions } from './taskstatus';\nimport { TaskTagActions } from './tasktag';\nimport { TaskTimingActions } from './tasktiming';\nimport { TimeEntryActions } from './timeentry';\nimport { TimeEntrySignoffActions } from './timeentrysignoff';\nimport { UserActions } from './user';\n\nexport {\n    BillingFrequencyActions,\n    ClientActions,\n    ClientContactActions,\n    ClientContactTagActions,\n    DataActions,\n    FilterActions,\n    HttpActions,\n    JobActions,\n    JobFileActions,\n    JobNoteActions,\n    JobRecurringCostActions,\n    JobRelationshipActions,\n    JobStatusActions,\n    JobTimingActions,\n    JobTypeActions,\n    MakeCallActions,\n    MeActions,\n    PaymentOptionActions,\n    PositionActions,\n    RecurringCostTypeActions,\n    RelationshipActions,\n    SocketActions,\n    TabActions,\n    TagActions,\n    TaskActions,\n    TaskAssigneeActions,\n    TaskFileActions,\n    TaskNoteActions,\n    TaskStatusActions,\n    TaskTagActions,\n    TaskTimingActions,\n    TimeEntryActions,\n    TimeEntrySignoffActions,\n    UserActions\n};\n\nexport const actions = [\n    BillingFrequencyActions,\n    ClientActions,\n    ClientContactActions,\n    ClientContactTagActions,\n    DataActions,\n    FilterActions,\n    HttpActions,\n    JobActions,\n    JobFileActions,\n    JobNoteActions,\n    JobRecurringCostActions,\n    JobRelationshipActions,\n    JobStatusActions,\n    JobTimingActions,\n    JobTypeActions,\n    MakeCallActions,\n    MeActions,\n    PaymentOptionActions,\n    PositionActions,\n    RecurringCostTypeActions,\n    RelationshipActions,\n    SocketActions,\n    TabActions,\n    TagActions,\n    TaskActions,\n    TaskAssigneeActions,\n    TaskFileActions,\n    TaskNoteActions,\n    TaskStatusActions,\n    TaskTagActions,\n    TaskTimingActions,\n    TimeEntryActions,\n    TimeEntrySignoffActions,\n    UserActions\n];\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IJob } from '../reducers/job';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobActions {\n\n    static LOAD_ALL = '[Job] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[Job] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[Job] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[Job] LOAD_ONE_SUCCESS';\n    static ADD = '[Job] ADD';\n    static ADD_SUCCESS = '[Job] ADD_SUCCESS';\n    static UPDATE = '[Job] UPDATE';\n    static UPDATE_SUCCESS = '[Job] UPDATE_SUCCESS';\n    static REMOVE = '[Job] REMOVE';\n    static REMOVE_SUCCESS = '[Job] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: JobActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IJob[]): IActionWithPayload {\n        return { type: JobActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: JobActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IJob): IActionWithPayload {\n        return { type: JobActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IJob): IActionWithPayload {\n        return { type: JobActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IJob): IActionWithPayload {\n        return { type: JobActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IJob): IActionWithPayload {\n        return { type: JobActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IJob): IActionWithPayload {\n        return { type: JobActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IJob): IActionWithPayload {\n        return { type: JobActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IJob): IActionWithPayload {\n        return { type: JobActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IJobFile } from '../reducers/jobfile';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobFileActions {\n\n    static LOAD_ALL = '[JobFile] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[JobFile] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[JobFile] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[JobFile] LOAD_ONE_SUCCESS';\n    static ADD = '[JobFile] ADD';\n    static ADD_SUCCESS = '[JobFile] ADD_SUCCESS';\n    static UPDATE = '[JobFile] UPDATE';\n    static UPDATE_SUCCESS = '[JobFile] UPDATE_SUCCESS';\n    static REMOVE = '[JobFile] REMOVE';\n    static REMOVE_SUCCESS = '[JobFile] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: JobFileActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IJobFile[]): IActionWithPayload {\n        return { type: JobFileActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: JobFileActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IJobFile): IActionWithPayload {\n        return { type: JobFileActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IJobFile): IActionWithPayload {\n        return { type: JobFileActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IJobFile): IActionWithPayload {\n        return { type: JobFileActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IJobFile): IActionWithPayload {\n        return { type: JobFileActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IJobFile): IActionWithPayload {\n        return { type: JobFileActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IJobFile): IActionWithPayload {\n        return { type: JobFileActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IJobFile): IActionWithPayload {\n        return { type: JobFileActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IJobNote } from '../reducers/jobnote';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobNoteActions {\n\n    static LOAD_ALL = '[JobNote] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[JobNote] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[JobNote] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[JobNote] LOAD_ONE_SUCCESS';\n    static ADD = '[JobNote] ADD';\n    static ADD_SUCCESS = '[JobNote] ADD_SUCCESS';\n    static UPDATE = '[JobNote] UPDATE';\n    static UPDATE_SUCCESS = '[JobNote] UPDATE_SUCCESS';\n    static REMOVE = '[JobNote] REMOVE';\n    static REMOVE_SUCCESS = '[JobNote] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: JobNoteActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IJobNote[]): IActionWithPayload {\n        return { type: JobNoteActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: JobNoteActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IJobNote): IActionWithPayload {\n        return { type: JobNoteActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IJobNote): IActionWithPayload {\n        return { type: JobNoteActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IJobNote): IActionWithPayload {\n        return { type: JobNoteActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IJobNote): IActionWithPayload {\n        return { type: JobNoteActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IJobNote): IActionWithPayload {\n        return { type: JobNoteActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IJobNote): IActionWithPayload {\n        return { type: JobNoteActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IJobNote): IActionWithPayload {\n        return { type: JobNoteActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IJobRecurringCost } from '../reducers/jobrecurringcost';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobRecurringCostActions {\n\n    static LOAD_ALL = '[JobRecurringCost] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[JobRecurringCost] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[JobRecurringCost] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[JobRecurringCost] LOAD_ONE_SUCCESS';\n    static ADD = '[JobRecurringCost] ADD';\n    static ADD_SUCCESS = '[JobRecurringCost] ADD_SUCCESS';\n    static UPDATE = '[JobRecurringCost] UPDATE';\n    static UPDATE_SUCCESS = '[JobRecurringCost] UPDATE_SUCCESS';\n    static PATCH = '[JobRecurringCost] PATCH';\n    static PATCH_SUCCESS = '[JobRecurringCost] PATCH_SUCCESS';\n    static REMOVE = '[JobRecurringCost] REMOVE';\n    static REMOVE_SUCCESS = '[JobRecurringCost] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: JobRecurringCostActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IJobRecurringCost[]): IActionWithPayload {\n        return { type: JobRecurringCostActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: JobRecurringCostActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IJobRecurringCost): IActionWithPayload {\n        return { type: JobRecurringCostActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IJobRecurringCost): IActionWithPayload {\n        return { type: JobRecurringCostActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IJobRecurringCost): IActionWithPayload {\n        return { type: JobRecurringCostActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IJobRecurringCost): IActionWithPayload {\n        return { type: JobRecurringCostActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IJobRecurringCost): IActionWithPayload {\n        return { type: JobRecurringCostActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: IJobRecurringCost): IActionWithPayload {\n        return { type: JobRecurringCostActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: IJobRecurringCost): IActionWithPayload {\n        return { type: JobRecurringCostActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: IJobRecurringCost): IActionWithPayload {\n        return { type: JobRecurringCostActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IJobRecurringCost): IActionWithPayload {\n        return { type: JobRecurringCostActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IJobRelationship } from '../reducers/jobrelationship';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobRelationshipActions {\n\n    static LOAD_ALL = '[JobRelationship] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[JobRelationship] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[JobRelationship] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[JobRelationship] LOAD_ONE_SUCCESS';\n    static ADD = '[JobRelationship] ADD';\n    static ADD_SUCCESS = '[JobRelationship] ADD_SUCCESS';\n    static UPDATE = '[JobRelationship] UPDATE';\n    static UPDATE_SUCCESS = '[JobRelationship] UPDATE_SUCCESS';\n    static PATCH = '[JobRelationship] PATCH';\n    static PATCH_SUCCESS = '[JobRelationship] PATCH_SUCCESS';\n    static REMOVE = '[JobRelationship] REMOVE';\n    static REMOVE_SUCCESS = '[JobRelationship] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: JobRelationshipActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IJobRelationship[]): IActionWithPayload {\n        return { type: JobRelationshipActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: JobRelationshipActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IJobRelationship): IActionWithPayload {\n        return { type: JobRelationshipActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IJobRelationship): IActionWithPayload {\n        return { type: JobRelationshipActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IJobRelationship): IActionWithPayload {\n        return { type: JobRelationshipActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IJobRelationship): IActionWithPayload {\n        return { type: JobRelationshipActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IJobRelationship): IActionWithPayload {\n        return { type: JobRelationshipActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: IJobRelationship): IActionWithPayload {\n        return { type: JobRelationshipActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: IJobRelationship): IActionWithPayload {\n        return { type: JobRelationshipActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: IJobRelationship): IActionWithPayload {\n        return { type: JobRelationshipActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IJobRelationship): IActionWithPayload {\n        return { type: JobRelationshipActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IJobStatus } from '../reducers/jobstatus';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobStatusActions {\n\n    static LOAD_ALL = '[JobStatus] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[JobStatus] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[JobStatus] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[JobStatus] LOAD_ONE_SUCCESS';\n    static ADD = '[JobStatus] ADD';\n    static ADD_SUCCESS = '[JobStatus] ADD_SUCCESS';\n    static UPDATE = '[JobStatus] UPDATE';\n    static UPDATE_SUCCESS = '[JobStatus] UPDATE_SUCCESS';\n    static REMOVE = '[JobStatus] REMOVE';\n    static REMOVE_SUCCESS = '[JobStatus] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: JobStatusActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IJobStatus[]): IActionWithPayload {\n        return { type: JobStatusActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: JobStatusActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IJobStatus): IActionWithPayload {\n        return { type: JobStatusActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IJobStatus): IActionWithPayload {\n        return { type: JobStatusActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IJobStatus): IActionWithPayload {\n        return { type: JobStatusActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IJobStatus): IActionWithPayload {\n        return { type: JobStatusActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IJobStatus): IActionWithPayload {\n        return { type: JobStatusActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IJobStatus): IActionWithPayload {\n        return { type: JobStatusActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IJobStatus): IActionWithPayload {\n        return { type: JobStatusActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithHTTPData, IActionWithPayload } from '../models';\nimport { IJobTiming } from '../reducers/jobtiming';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobTimingActions {\n\n    static LOAD_ALL = '[JobTiming] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[JobTiming] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[JobTiming] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[JobTiming] LOAD_ONE_SUCCESS';\n    static ADD = '[JobTiming] ADD';\n    static ADD_SUCCESS = '[JobTiming] ADD_SUCCESS';\n    static UPDATE = '[JobTiming] UPDATE';\n    static UPDATE_SUCCESS = '[JobTiming] UPDATE_SUCCESS';\n    static PATCH = '[JobTiming] PATCH';\n    static PATCH_SUCCESS = '[JobTiming] PATCH_SUCCESS';\n    static REMOVE = '[JobTiming] REMOVE';\n    static REMOVE_SUCCESS = '[JobTiming] REMOVE_SUCCESS';\n    static REPLACE_MANY = '[JobTiming] REPLACE_MANY';\n\n    LoadAll(): Action {\n        return { type: JobTimingActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IJobTiming[]): IActionWithPayload {\n        return { type: JobTimingActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: JobTimingActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IJobTiming): IActionWithPayload {\n        return { type: JobTimingActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IJobTiming): IActionWithPayload {\n        return { type: JobTimingActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IJobTiming): IActionWithPayload {\n        return { type: JobTimingActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IJobTiming): IActionWithPayload {\n        return { type: JobTimingActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IJobTiming): IActionWithPayload {\n        return { type: JobTimingActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: IJobTiming): IActionWithPayload {\n        return { type: JobTimingActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: IJobTiming): IActionWithPayload {\n        return { type: JobTimingActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: IJobTiming): IActionWithPayload {\n        return { type: JobTimingActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IJobTiming): IActionWithPayload {\n        return { type: JobTimingActions.REMOVE_SUCCESS, payload };\n    }\n\n    ReplaceMany(payload: IJobTiming[]): IActionWithPayload {\n        return { type: JobTimingActions.REPLACE_MANY, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IJobType } from '../reducers/jobtype';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobTypeActions {\n\n    static LOAD_ALL = '[JobType] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[JobType] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[JobType] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[JobType] LOAD_ONE_SUCCESS';\n    static ADD = '[JobType] ADD';\n    static ADD_SUCCESS = '[JobType] ADD_SUCCESS';\n    static UPDATE = '[JobType] UPDATE';\n    static UPDATE_SUCCESS = '[JobType] UPDATE_SUCCESS';\n    static REMOVE = '[JobType] REMOVE';\n    static REMOVE_SUCCESS = '[JobType] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: JobTypeActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IJobType[]): IActionWithPayload {\n        return { type: JobTypeActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: JobTypeActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IJobType): IActionWithPayload {\n        return { type: JobTypeActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IJobType): IActionWithPayload {\n        return { type: JobTypeActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IJobType): IActionWithPayload {\n        return { type: JobTypeActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IJobType): IActionWithPayload {\n        return { type: JobTypeActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IJobType): IActionWithPayload {\n        return { type: JobTypeActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IJobType): IActionWithPayload {\n        return { type: JobTypeActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IJobType): IActionWithPayload {\n        return { type: JobTypeActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { IActionWithPayload, IMakeCall } from '../models';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MakeCallActions {\n\n    static MAKE_CALL = '[MakeCall] MAKE_CALL';\n    static MAKE_CALL_SUCCESS = '[MakeCall] MAKE_CALL_SUCCESS';\n\n    MakeCall(payload: IMakeCall): IActionWithPayload {\n        return { type: MakeCallActions.MAKE_CALL, payload };\n    }\n\n    MakeCallSuccess(payload: IMakeCall): IActionWithPayload {\n        return { type: MakeCallActions.MAKE_CALL_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IMe } from '../reducers/me';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MeActions {\n\n    static LOAD = '[Me] LOAD';\n    static LOAD_SUCCESS = '[Me] LOAD_SUCCESS';\n\n    Load(): Action {\n        return { type: MeActions.LOAD };\n    }\n\n    LoadSuccess(payload: IMe): IActionWithPayload {\n        return { type: MeActions.LOAD_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IPaymentOption } from '../reducers/paymentoption';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PaymentOptionActions {\n\n    static LOAD_ALL = '[PaymentOption] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[PaymentOption] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[PaymentOption] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[PaymentOption] LOAD_ONE_SUCCESS';\n    static ADD = '[PaymentOption] ADD';\n    static ADD_SUCCESS = '[PaymentOption] ADD_SUCCESS';\n    static UPDATE = '[PaymentOption] UPDATE';\n    static UPDATE_SUCCESS = '[PaymentOption] UPDATE_SUCCESS';\n    static REMOVE = '[PaymentOption] REMOVE';\n    static REMOVE_SUCCESS = '[PaymentOption] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: PaymentOptionActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IPaymentOption[]): IActionWithPayload {\n        return { type: PaymentOptionActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: PaymentOptionActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IPaymentOption): IActionWithPayload {\n        return { type: PaymentOptionActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IPaymentOption): IActionWithPayload {\n        return { type: PaymentOptionActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IPaymentOption): IActionWithPayload {\n        return { type: PaymentOptionActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IPaymentOption): IActionWithPayload {\n        return { type: PaymentOptionActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IPaymentOption): IActionWithPayload {\n        return { type: PaymentOptionActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IPaymentOption): IActionWithPayload {\n        return { type: PaymentOptionActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IPaymentOption): IActionWithPayload {\n        return { type: PaymentOptionActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IPosition } from '../reducers/position';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PositionActions {\n\n    static LOAD_ALL = '[Position] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[Position] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[Position] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[Position] LOAD_ONE_SUCCESS';\n    static ADD = '[Position] ADD';\n    static ADD_SUCCESS = '[Position] ADD_SUCCESS';\n    static UPDATE = '[Position] UPDATE';\n    static UPDATE_SUCCESS = '[Position] UPDATE_SUCCESS';\n    static REMOVE = '[Position] REMOVE';\n    static REMOVE_SUCCESS = '[Position] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: PositionActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IPosition[]): IActionWithPayload {\n        return { type: PositionActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: PositionActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IPosition): IActionWithPayload {\n        return { type: PositionActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IPosition): IActionWithPayload {\n        return { type: PositionActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IPosition): IActionWithPayload {\n        return { type: PositionActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IPosition): IActionWithPayload {\n        return { type: PositionActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IPosition): IActionWithPayload {\n        return { type: PositionActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IPosition): IActionWithPayload {\n        return { type: PositionActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IPosition): IActionWithPayload {\n        return { type: PositionActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IRecurringCostType } from '../reducers/recurringcosttype';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RecurringCostTypeActions {\n\n    static LOAD_ALL = '[RecurringCostType] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[RecurringCostType] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[RecurringCostType] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[RecurringCostType] LOAD_ONE_SUCCESS';\n    static ADD = '[RecurringCostType] ADD';\n    static ADD_SUCCESS = '[RecurringCostType] ADD_SUCCESS';\n    static UPDATE = '[RecurringCostType] UPDATE';\n    static UPDATE_SUCCESS = '[RecurringCostType] UPDATE_SUCCESS';\n    static REMOVE = '[RecurringCostType] REMOVE';\n    static REMOVE_SUCCESS = '[RecurringCostType] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: RecurringCostTypeActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IRecurringCostType[]): IActionWithPayload {\n        return { type: RecurringCostTypeActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: RecurringCostTypeActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IRecurringCostType): IActionWithPayload {\n        return { type: RecurringCostTypeActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IRecurringCostType): IActionWithPayload {\n        return { type: RecurringCostTypeActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IRecurringCostType): IActionWithPayload {\n        return { type: RecurringCostTypeActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IRecurringCostType): IActionWithPayload {\n        return { type: RecurringCostTypeActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IRecurringCostType): IActionWithPayload {\n        return { type: RecurringCostTypeActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IRecurringCostType): IActionWithPayload {\n        return { type: RecurringCostTypeActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IRecurringCostType): IActionWithPayload {\n        return { type: RecurringCostTypeActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IRelationship } from '../reducers/relationship';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RelationshipActions {\n\n    static LOAD_ALL = '[Relationship] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[Relationship] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[Relationship] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[Relationship] LOAD_ONE_SUCCESS';\n    static ADD = '[Relationship] ADD';\n    static ADD_SUCCESS = '[Relationship] ADD_SUCCESS';\n    static UPDATE = '[Relationship] UPDATE';\n    static UPDATE_SUCCESS = '[Relationship] UPDATE_SUCCESS';\n    static REMOVE = '[Relationship] REMOVE';\n    static REMOVE_SUCCESS = '[Relationship] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: RelationshipActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IRelationship[]): IActionWithPayload {\n        return { type: RelationshipActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: RelationshipActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IRelationship): IActionWithPayload {\n        return { type: RelationshipActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: IRelationship): IActionWithPayload {\n        return { type: RelationshipActions.ADD, payload };\n    }\n\n    AddSuccess(payload: IRelationship): IActionWithPayload {\n        return { type: RelationshipActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: IRelationship): IActionWithPayload {\n        return { type: RelationshipActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: IRelationship): IActionWithPayload {\n        return { type: RelationshipActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: IRelationship): IActionWithPayload {\n        return { type: RelationshipActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: IRelationship): IActionWithPayload {\n        return { type: RelationshipActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { ISocketPayload } from '../effects/socket';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SocketActions {\n\n    public static START = '[Socket] START';\n    public static PROCESS_MESSAGE = '[Socket] PROCESS_MESSAGE';\n\n    public Start(): Action {\n        return { type: SocketActions.START };\n    }\n\n    public ProcessMessage(payload: ISocketPayload): IActionWithPayload {\n        return { type: SocketActions.PROCESS_MESSAGE, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\nimport { ITab, ITabs } from '../reducers/tabs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TabActions {\n\n    static CLIENT_ACTIVATE_TAB = '[Tabs] CLIENT_ACTIVATE_TAB';\n    static JOB_ACTIVATE_TAB = '[Tabs] JOB_ACTIVATE_TAB';\n\n    ClientActivate(payload: ITab): IActionWithPayload {\n        return { type: TabActions.CLIENT_ACTIVATE_TAB, payload };\n    }\n\n    JobActivate(payload: ITab): IActionWithPayload {\n        return { type: TabActions.JOB_ACTIVATE_TAB, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { ITag } from '../reducers/tag';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TagActions {\n\n    static LOAD_ALL = '[Tag] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[Tag] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[Tag] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[Tag] LOAD_ONE_SUCCESS';\n    static ADD = '[Tag] ADD';\n    static ADD_SUCCESS = '[Tag] ADD_SUCCESS';\n    static UPDATE = '[Tag] UPDATE';\n    static UPDATE_SUCCESS = '[Tag] UPDATE_SUCCESS';\n    static REMOVE = '[Tag] REMOVE';\n    static REMOVE_SUCCESS = '[Tag] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: TagActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: ITag[]): IActionWithPayload {\n        return { type: TagActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TagActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITag): IActionWithPayload {\n        return { type: TagActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITag): IActionWithPayload {\n        return { type: TagActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITag): IActionWithPayload {\n        return { type: TagActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITag): IActionWithPayload {\n        return { type: TagActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITag): IActionWithPayload {\n        return { type: TagActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: ITag): IActionWithPayload {\n        return { type: TagActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITag): IActionWithPayload {\n        return { type: TagActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { IActionWithHTTPData, IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\nimport { ITask } from '../reducers/task';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskActions {\n\n    static LOAD_ALL = '[Task] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[Task] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[Task] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[Task] LOAD_ONE_SUCCESS';\n    static ADD = '[Task] ADD';\n    static ADD_SUCCESS = '[Task] ADD_SUCCESS';\n    static UPDATE = '[Task] UPDATE';\n    static UPDATE_SUCCESS = '[Task] UPDATE_SUCCESS';\n    static PATCH = '[Task] PATCH';\n    static PATCH_SUCCESS = '[Task] PATCH_SUCCESS';\n    static REMOVE = '[Task] REMOVE';\n    static REMOVE_SUCCESS = '[Task] REMOVE_SUCCESS';\n    static REPLACE_MANY = '[Task] REPLACE_MANY';\n\n    LoadAll(payload: IActionWithHTTPData): IActionWithPayload {\n        return { type: TaskActions.LOAD_ALL, payload };\n    }\n\n    LoadAllSuccess(payload: ITask[]): IActionWithPayload {\n        return { type: TaskActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TaskActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITask): IActionWithPayload {\n        return { type: TaskActions.REMOVE_SUCCESS, payload };\n    }\n\n    ReplaceMany(payload: ITask[]): IActionWithPayload {\n        return { type: TaskActions.REPLACE_MANY, payload };\n    }\n}\n","import { IActionWithHTTPData, IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\nimport { ITaskAssignee } from '../reducers/taskassignee';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskAssigneeActions {\n\n    static LOAD_ALL = '[TaskAssignee] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TaskAssignee] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TaskAssignee] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TaskAssignee] LOAD_ONE_SUCCESS';\n    static ADD = '[TaskAssignee] ADD';\n    static ADD_SUCCESS = '[TaskAssignee] ADD_SUCCESS';\n    static UPDATE = '[TaskAssignee] UPDATE';\n    static UPDATE_SUCCESS = '[TaskAssignee] UPDATE_SUCCESS';\n    static PATCH = '[TaskAssignee] PATCH';\n    static PATCH_SUCCESS = '[TaskAssignee] PATCH_SUCCESS';\n    static REMOVE = '[TaskAssignee] REMOVE';\n    static REMOVE_SUCCESS = '[TaskAssignee] REMOVE_SUCCESS';\n\n    LoadAll(payload: IActionWithHTTPData): IActionWithPayload {\n        return { type: TaskAssigneeActions.LOAD_ALL, payload };\n    }\n\n    LoadAllSuccess(payload: ITaskAssignee[]): IActionWithPayload {\n        return { type: TaskAssigneeActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TaskAssigneeActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITaskAssignee): IActionWithPayload {\n        return { type: TaskAssigneeActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { IActionWithHTTPData, IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\nimport { ITaskFile } from '../reducers/taskfile';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskFileActions {\n\n    static LOAD_ALL = '[TaskFile] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TaskFile] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TaskFile] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TaskFile] LOAD_ONE_SUCCESS';\n    static ADD = '[TaskFile] ADD';\n    static ADD_SUCCESS = '[TaskFile] ADD_SUCCESS';\n    static UPDATE = '[TaskFile] UPDATE';\n    static UPDATE_SUCCESS = '[TaskFile] UPDATE_SUCCESS';\n    static REMOVE = '[TaskFile] REMOVE';\n    static REMOVE_SUCCESS = '[TaskFile] REMOVE_SUCCESS';\n\n    LoadAll(payload: IActionWithHTTPData): IActionWithPayload {\n        return { type: TaskFileActions.LOAD_ALL, payload };\n    }\n\n    LoadAllSuccess(payload: ITaskFile[]): IActionWithPayload {\n        return { type: TaskFileActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TaskFileActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITaskFile): IActionWithPayload {\n        return { type: TaskFileActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITaskFile): IActionWithPayload {\n        return { type: TaskFileActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITaskFile): IActionWithPayload {\n        return { type: TaskFileActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITaskFile): IActionWithPayload {\n        return { type: TaskFileActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITaskFile): IActionWithPayload {\n        return { type: TaskFileActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: ITaskFile): IActionWithPayload {\n        return { type: TaskFileActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITaskFile): IActionWithPayload {\n        return { type: TaskFileActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { IActionWithHTTPData, IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\nimport { ITaskNote } from '../reducers/tasknote';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskNoteActions {\n\n    static LOAD_ALL = '[TaskNote] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TaskNote] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TaskNote] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TaskNote] LOAD_ONE_SUCCESS';\n    static ADD = '[TaskNote] ADD';\n    static ADD_SUCCESS = '[TaskNote] ADD_SUCCESS';\n    static UPDATE = '[TaskNote] UPDATE';\n    static UPDATE_SUCCESS = '[TaskNote] UPDATE_SUCCESS';\n    static REMOVE = '[TaskNote] REMOVE';\n    static REMOVE_SUCCESS = '[TaskNote] REMOVE_SUCCESS';\n\n    LoadAll(payload: IActionWithHTTPData): IActionWithPayload {\n        return { type: TaskNoteActions.LOAD_ALL, payload };\n    }\n\n    LoadAllSuccess(payload: ITaskNote[]): IActionWithPayload {\n        return { type: TaskNoteActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TaskNoteActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.UPDATE_SUCCESS, payload };\n    }\n\n    Remove(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITaskNote): IActionWithPayload {\n        return { type: TaskNoteActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { ITaskStatus } from '../reducers/taskstatus';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskStatusActions {\n\n    static LOAD_ALL = '[TaskStatus] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TaskStatus] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TaskStatus] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TaskStatus] LOAD_ONE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: TaskStatusActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: ITaskStatus[]): IActionWithPayload {\n        return { type: TaskStatusActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TaskStatusActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITaskStatus): IActionWithPayload {\n        return { type: TaskStatusActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { ITaskTag } from '../reducers/tasktag';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskTagActions {\n\n    static LOAD_ALL = '[TaskTag] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TaskTag] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TaskTag] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TaskTag] LOAD_ONE_SUCCESS';\n    static ADD = '[TaskTag] ADD';\n    static ADD_SUCCESS = '[TaskTag] ADD_SUCCESS';\n    static UPDATE = '[TaskTag] UPDATE';\n    static UPDATE_SUCCESS = '[TaskTag] UPDATE_SUCCESS';\n    static PATCH = '[TaskTag] PATCH';\n    static PATCH_SUCCESS = '[TaskTag] PATCH_SUCCESS';\n    static REMOVE = '[TaskTag] REMOVE';\n    static REMOVE_SUCCESS = '[TaskTag] REMOVE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: TaskTagActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: ITaskTag[]): IActionWithPayload {\n        return { type: TaskTagActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TaskTagActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITaskTag): IActionWithPayload {\n        return { type: TaskTagActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITaskTag): IActionWithPayload {\n        return { type: TaskTagActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITaskTag): IActionWithPayload {\n        return { type: TaskTagActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITaskTag): IActionWithPayload {\n        return { type: TaskTagActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITaskTag): IActionWithPayload {\n        return { type: TaskTagActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: ITaskTag): IActionWithPayload {\n        return { type: TaskTagActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: ITaskTag): IActionWithPayload {\n        return { type: TaskTagActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: ITaskTag): IActionWithPayload {\n        return { type: TaskTagActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITaskTag): IActionWithPayload {\n        return { type: TaskTagActions.REMOVE_SUCCESS, payload };\n    }\n}\n","import { IActionWithHTTPData, IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\nimport { ITaskTiming } from '../reducers/tasktiming';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskTimingActions {\n\n    static LOAD_ALL = '[TaskTiming] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TaskTiming] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TaskTiming] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TaskTiming] LOAD_ONE_SUCCESS';\n    static ADD = '[TaskTiming] ADD';\n    static ADD_SUCCESS = '[TaskTiming] ADD_SUCCESS';\n    static UPDATE = '[TaskTiming] UPDATE';\n    static UPDATE_SUCCESS = '[TaskTiming] UPDATE_SUCCESS';\n    static PATCH = '[TaskTiming] PATCH';\n    static PATCH_SUCCESS = '[TaskTiming] PATCH_SUCCESS';\n    static REMOVE = '[TaskTiming] REMOVE';\n    static REMOVE_SUCCESS = '[TaskTiming] REMOVE_SUCCESS';\n    static REPLACE_MANY = '[TaskTiming] REPLACE_MANY';\n\n    LoadAll(payload: IActionWithHTTPData): IActionWithPayload {\n        return { type: TaskTimingActions.LOAD_ALL, payload };\n    }\n\n    LoadAllSuccess(payload: ITaskTiming[]): IActionWithPayload {\n        return { type: TaskTimingActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TaskTimingActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITaskTiming): IActionWithPayload {\n        return { type: TaskTimingActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITaskTiming): IActionWithPayload {\n        return { type: TaskTimingActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITaskTiming): IActionWithPayload {\n        return { type: TaskTimingActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITaskTiming): IActionWithPayload {\n        return { type: TaskTimingActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITaskTiming): IActionWithPayload {\n        return { type: TaskTimingActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: ITaskTiming): IActionWithPayload {\n        return { type: TaskTimingActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: ITaskTiming): IActionWithPayload {\n        return { type: TaskTimingActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: ITaskTiming): IActionWithPayload {\n        return { type: TaskTimingActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITaskTiming): IActionWithPayload {\n        return { type: TaskTimingActions.REMOVE_SUCCESS, payload };\n    }\n\n    ReplaceMany(payload: ITaskTiming[]): IActionWithPayload {\n        return { type: TaskTimingActions.REPLACE_MANY, payload };\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithHTTPData, IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\nimport { ITimeEntry } from '../reducers/timeentry';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TimeEntryActions {\n\n    static LOAD_ALL = '[TimeEntry] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[TimeEntry] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[TimeEntry] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[TimeEntry] LOAD_ONE_SUCCESS';\n    static ADD = '[TimeEntry] ADD';\n    static ADD_SUCCESS = '[TimeEntry] ADD_SUCCESS';\n    static UPDATE = '[TimeEntry] UPDATE';\n    static UPDATE_SUCCESS = '[TimeEntry] UPDATE_SUCCESS';\n    static PATCH = '[TimeEntry] PATCH';\n    static PATCH_SUCCESS = '[TimeEntry] PATCH_SUCCESS';\n    static REMOVE = '[TimeEntry] REMOVE';\n    static REMOVE_SUCCESS = '[TimeEntry] REMOVE_SUCCESS';\n    static REPLACE_MANY = '[TimeEntry] REPLACE_MANY';\n\n    LoadAll(payload: IActionWithHTTPData): IActionWithPayload {\n        return { type: TimeEntryActions.LOAD_ALL, payload };\n    }\n\n    LoadAllSuccess(payload: ITimeEntry[]): IActionWithPayload {\n        return { type: TimeEntryActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: TimeEntryActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n    Add(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.ADD, payload };\n    }\n\n    AddSuccess(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.ADD_SUCCESS, payload };\n    }\n\n    Update(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.UPDATE, payload };\n    }\n\n    UpdateSuccess(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.UPDATE_SUCCESS, payload };\n    }\n\n    Patch(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.PATCH, payload };\n    }\n\n    PatchSuccess(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.PATCH_SUCCESS, payload };\n    }\n\n    Remove(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.REMOVE, payload };\n    }\n\n    RemoveSuccess(payload: ITimeEntry): IActionWithPayload {\n        return { type: TimeEntryActions.REMOVE_SUCCESS, payload };\n    }\n\n    ReplaceMany(payload: ITimeEntry[]): IActionWithPayload {\n        return { type: TimeEntryActions.REPLACE_MANY, payload };\n    }\n}\n","import { IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\n\nexport interface ITimeEntrySignoff {\n    date: string;\n    user: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TimeEntrySignoffActions {\n\n    static SIGNOFF = '[TimeEntrySignoff] SIGNOFF';\n\n    Signoff(payload: ITimeEntrySignoff): IActionWithPayload {\n        return { type: TimeEntrySignoffActions.SIGNOFF, payload };\n    }\n\n}\n","import { Action } from '@ngrx/store';\nimport { IActionWithPayload } from '../models';\nimport { IUser } from '../reducers/user';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserActions {\n\n    static LOAD_ALL = '[User] LOAD_ALL';\n    static LOAD_ALL_SUCCESS = '[User] LOAD_ALL_SUCCESS';\n    static LOAD_ONE = '[User] LOAD_ONE';\n    static LOAD_ONE_SUCCESS = '[User] LOAD_ONE_SUCCESS';\n\n    LoadAll(): Action {\n        return { type: UserActions.LOAD_ALL };\n    }\n\n    LoadAllSuccess(payload: IUser[]): IActionWithPayload {\n        return { type: UserActions.LOAD_ALL_SUCCESS, payload };\n    }\n\n    LoadOne(payload: number): IActionWithPayload {\n        return { type: UserActions.LOAD_ONE, payload };\n    }\n\n    LoadOneSuccess(payload: IUser): IActionWithPayload {\n        return { type: UserActions.LOAD_ONE_SUCCESS, payload };\n    }\n\n}\n","import * as _ from 'lodash';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { APIService } from '../services/api';\nimport {\n    catchError,\n    filter,\n    map,\n    mergeMap\n    } from 'rxjs/operators';\nimport { HttpActions, SocketActions } from './actions';\nimport { IActionWithPayload } from './models';\nimport { Injectable } from '@angular/core';\nimport { ISocketPayload } from './effects/socket';\nimport { of } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class APIBaseEffects {\n\n    protected url = '';\n\n    get apiUrl() {\n        return this.url;\n    }\n\n    protected _all$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(payload => {\n            return this.service$.all(this.apiUrl, payload).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: res}))\n            )\n        })\n    )\n\n    protected _one$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(id =>\n            this.service$.one(this.apiUrl, id).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: res}))\n            )\n        )\n    )\n\n    protected _add$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(obj =>\n            this.service$.create(this.apiUrl, obj).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: {err: res, data: obj}}))\n            )\n        )\n    )\n\n    protected _update$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(obj =>\n            this.service$.update(this.apiUrl, obj).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: {err: res, data: obj}}))\n            )\n        )\n    )\n\n    protected _patch$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(obj =>\n            this.service$.patch(this.apiUrl, obj).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: {err: res, data: obj}}))\n            )\n        )\n    )\n\n    protected _remove$ = (\n        actionOfType: string, successOfType: string\n    ) => this.updates$.pipe(\n        ofType(actionOfType),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(obj =>\n            this.service$.remove(this.apiUrl, obj).pipe(\n                map(data => ({type: successOfType, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: {err: res, data: obj}}))\n            )\n        )\n    )\n\n    protected _socket$ = (\n        model: string, createAction: string, updateAction: string, removeAction: string, batchUpdateAction: string = null\n    ) => this.updates$.pipe(\n        ofType(SocketActions.PROCESS_MESSAGE),\n        map((action: IActionWithPayload) => action.payload),\n        filter((res: ISocketPayload) => res.model === model),\n        map((res: ISocketPayload) => {\n            const data: any = res.data;\n            switch (res.action) {\n                case 'create':\n                    return ({type: createAction, payload: data.id});\n                case 'update':\n                    return ({type: updateAction, payload: data.id});\n                case 'delete':\n                    return ({type: removeAction, payload: data});\n                case 'batch_update':\n                    return ({type: batchUpdateAction, payload: data});\n                default:\n                    return ({type: 'NO_ACTION'});\n            }\n        })\n    )\n    \n    constructor(\n        protected updates$: Actions,\n        protected service$: APIService) {\n    }\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BillingFrequencyEffects extends APIBaseEffects {\n    protected url = '/api/billing-frequencies/';\n    protected prefix = '[BillingFrequency]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientEffects extends APIBaseEffects {\n    protected url = '/api/clients/';\n    protected prefix = '[Client]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.client',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientContactEffects extends APIBaseEffects {\n    protected url = '/api/client-contacts/';\n    protected prefix = '[ClientContact]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.clientcontact',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientContactTagEffects extends APIBaseEffects {\n    protected url = '/api/client-contact-tags/';\n    protected prefix = '[ClientContactTag]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'taggit.taggeditem',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import * as actions from '../actions';\nimport * as moment from 'moment';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { IActionWithHTTPData } from '../models';\nimport { Injectable } from '@angular/core';\nimport { mergeMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataEffects {\n\n    @Effect() loadData$ = this.updates$.pipe(\n        ofType(actions.DataActions.LOAD_DATA),\n        mergeMap(\n            () => {\n                const timeEntryParams: IActionWithHTTPData = {\n                    params: {\n                        date_from: moment().add(-5, 'weeks').format('YYYY-MM-DD')\n                    }\n                }\n                const taskParams: IActionWithHTTPData = {\n                    params: {\n                        live_at_date: moment().add(-12, 'weeks').format('YYYY-MM-DD')\n                    }\n                }\n                return [\n                    // user\n                    new actions.MeActions().Load(),\n                    new actions.UserActions().LoadAll(),\n                    // lookups\n                    new actions.BillingFrequencyActions().LoadAll(),\n                    new actions.JobStatusActions().LoadAll(),\n                    new actions.JobTimingActions().LoadAll(),\n                    new actions.JobTypeActions().LoadAll(),\n                    new actions.PaymentOptionActions().LoadAll(),\n                    new actions.PositionActions().LoadAll(),\n                    new actions.RecurringCostTypeActions().LoadAll(),\n                    new actions.RelationshipActions().LoadAll(),\n                    new actions.TagActions().LoadAll(),\n                    new actions.TaskStatusActions().LoadAll(),\n                    // main data\n                    new actions.ClientActions().LoadAll(),\n                    new actions.ClientContactActions().LoadAll(),\n                    new actions.ClientContactTagActions().LoadAll(),\n                    new actions.JobActions().LoadAll(),\n                    new actions.JobFileActions().LoadAll(),\n                    new actions.JobNoteActions().LoadAll(),\n                    new actions.JobRecurringCostActions().LoadAll(),\n                    new actions.JobRelationshipActions().LoadAll(),\n                    new actions.TaskActions().LoadAll(taskParams),\n                    new actions.TaskAssigneeActions().LoadAll(taskParams),\n                    new actions.TaskFileActions().LoadAll(taskParams),\n                    new actions.TaskTagActions().LoadAll(),\n                    new actions.TaskNoteActions().LoadAll(taskParams),\n                    new actions.TaskTimingActions().LoadAll(taskParams),\n                    new actions.TimeEntryActions().LoadAll(timeEntryParams)\n                ];\n            }\n        )\n    );\n\n    constructor(\n        private updates$: Actions\n    ) {}\n}\n","import { BillingFrequencyEffects } from './billingfrequency';\nimport { ClientContactEffects } from './clientcontact';\nimport { ClientContactTagEffects } from './clientcontacttag';\nimport { ClientEffects } from './client';\nimport { DataEffects } from './data';\nimport { JobEffects } from './job';\nimport { JobFileEffects } from './jobfile';\nimport { JobNoteEffects } from './jobnote';\nimport { JobRecurringCostEffects } from './jobrecurringcost';\nimport { JobRelationshipEffects } from './jobrelationship';\nimport { JobStatusEffects } from './jobstatus';\nimport { JobTimingEffects } from './jobtiming';\nimport { JobTypeEffects } from './jobtype';\nimport { MakeCallEffects } from './makecall';\nimport { MeEffects } from './me';\nimport { PaymentOptionEffects } from './paymentoption';\nimport { PositionEffects } from './position';\nimport { RecurringCostTypeEffects } from './recurringcosttype';\nimport { RelationshipEffects } from './relationship';\nimport { SocketEffects } from './socket';\nimport { TagEffects } from './tag';\nimport { TaskAssigneeEffects } from './taskassignee';\nimport { TaskEffects } from './task';\nimport { TaskFileEffects } from './taskfile';\nimport { TaskNoteEffects } from './tasknote';\nimport { TaskStatusEffects } from './taskstatus';\nimport { TaskTagEffects } from './tasktag';\nimport { TaskTimingEffects } from './tasktiming';\nimport { TimeEntryEffects } from './timeentry';\nimport { TimeEntrySignoffEffects } from './timeentrysignoff';\nimport { UserEffects } from './user';\n\nexport const effects = [\n    BillingFrequencyEffects,\n    ClientContactEffects,\n    ClientContactTagEffects,\n    ClientEffects,\n    DataEffects,\n    JobEffects,\n    JobFileEffects,\n    JobNoteEffects,\n    JobRecurringCostEffects,\n    JobRelationshipEffects,\n    JobStatusEffects,\n    JobTimingEffects,\n    JobTypeEffects,\n    MakeCallEffects,\n    MeEffects,\n    PaymentOptionEffects,\n    PositionEffects,\n    RecurringCostTypeEffects,\n    RelationshipEffects,\n    SocketEffects,\n    TagEffects,\n    TaskEffects,\n    TaskAssigneeEffects,\n    TaskFileEffects,\n    TaskNoteEffects,\n    TaskStatusEffects,\n    TaskTagEffects,\n    TaskTimingEffects,\n    TimeEntryEffects,\n    TimeEntrySignoffEffects,\n    UserEffects\n];\n","import { APIBaseEffects } from '../api';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { Effect, ofType } from '@ngrx/effects';\nimport { HttpActions } from '../actions';\nimport { IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { TaskActions } from './../actions/task';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobEffects extends APIBaseEffects {\n    protected url = '/api/jobs/';\n    protected prefix = '[Job]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.job',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobFileEffects extends APIBaseEffects {\n    protected url = '/api/job-files/';\n    protected prefix = '[JobFile]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.jobfile',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobNoteEffects extends APIBaseEffects {\n    protected url = '/api/job-notes/';\n    protected prefix = '[JobNote]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.jobnote',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobRecurringCostEffects extends APIBaseEffects {\n    protected url = '/api/job-recurring-costs/';\n    protected prefix = '[JobRecurringCost]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.jobrecurringcost',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobRelationshipEffects extends APIBaseEffects {\n    protected url = '/api/job-relationships/';\n    protected prefix = '[JobRelationship]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.jobrelationship',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobStatusEffects extends APIBaseEffects {\n    protected url = '/api/job-statuses/';\n    protected prefix = '[JobStatus]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobTimingEffects extends APIBaseEffects {\n    protected url = '/api/job-timings/';\n    protected prefix = '[JobTiming]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.jobtiming',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JobTypeEffects extends APIBaseEffects {\n    protected url = '/api/job-types/';\n    protected prefix = '[JobType]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { Effect, ofType } from '@ngrx/effects';\nimport { HttpActions } from '../actions';\nimport { IActionWithPayload } from '../models';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { TaskActions } from './../actions/task';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MakeCallEffects extends APIBaseEffects {\n    protected url = '/api/make-call/';\n    protected prefix = '[MakeCall]';\n\n    @Effect() call$ = this.updates$.pipe(\n        ofType(`${this.prefix} MAKE_CALL`),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(obj =>\n            this.service$.post(`${this.apiUrl}call/`, obj).pipe(\n                map(data => ({type: `${this.prefix} MAKE_CALL_SUCCESS`, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: {err: res, data: obj}}))\n            )\n        )\n    );\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MeEffects extends APIBaseEffects {\n    protected url = '/api/users/me/';\n    protected prefix = '[Me]';\n\n    @Effect() load$ = this._all$(\n        `${this.prefix} LOAD`,\n        `${this.prefix} LOAD_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PaymentOptionEffects extends APIBaseEffects {\n    protected url = '/api/payment-options/';\n    protected prefix = '[PaymentOption]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PositionEffects extends APIBaseEffects {\n    protected url = '/api/positions/';\n    protected prefix = '[Position]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RecurringCostTypeEffects extends APIBaseEffects {\n    protected url = '/api/recurring-cost-types/';\n    protected prefix = '[RecurringCostType]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RelationshipEffects extends APIBaseEffects {\n    protected url = '/api/relationships/';\n    protected prefix = '[Relationship]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { of } from 'rxjs';\nimport { catchError, delay, filter, map, mergeMap, retryWhen } from 'rxjs/operators';\nimport { webSocket } from 'rxjs/webSocket';\nimport { Globals } from 'src/app/services/globals';\n\nimport { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport { SocketActions } from '../actions/socket';\n\nexport interface ISocketPayload {\n    type: string;\n    action: string;\n    pk: number;\n    model: string;\n    data: any;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SocketEffects {\n\n    @Effect() public start$ = this.updates$.pipe(\n        ofType(SocketActions.START),\n        delay(1),\n        mergeMap(\n            (data) => webSocket(this.glogals.dataSocketUrl).pipe(\n                retryWhen((res) => res.pipe(delay(this.glogals.dataSocketRetryDelay)))\n            )\n        ),\n        catchError(() => of(null)),\n        filter((res) => !!res),\n        map((res: ISocketPayload) => this.actions$.ProcessMessage(res))\n    );\n\n    constructor(\n        private updates$: Actions,\n        private actions$: SocketActions,\n        private glogals: Globals\n    ) {}\n    \n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TagEffects extends APIBaseEffects {\n    protected url = '/api/tags/';\n    protected prefix = '[Tag]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'taggit.tag',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskEffects extends APIBaseEffects {\n    protected url = '/api/tasks/';\n    protected prefix = '[Task]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.task',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`,\n        `${this.prefix} REPLACE_MANY`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskAssigneeEffects extends APIBaseEffects {\n    protected url = '/api/task-assignees/';\n    protected prefix = '[TaskAssignee]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.taskassignee',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskFileEffects extends APIBaseEffects {\n    protected url = '/api/task-files/';\n    protected prefix = '[TaskFile]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.taskfile',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskNoteEffects extends APIBaseEffects {\n    protected url = '/api/task-notes/';\n    protected prefix = '[TaskNote]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.tasknote',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskStatusEffects extends APIBaseEffects {\n    protected url = '/api/task-statuses/';\n    protected prefix = '[TaskStatus]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskTagEffects extends APIBaseEffects {\n    protected url = '/api/task-tags/';\n    protected prefix = '[TaskTag]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'taggit.taggeditem',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskTimingEffects extends APIBaseEffects {\n    protected url = '/api/task-timings/';\n    protected prefix = '[TaskTiming]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.tasktiming',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TimeEntryEffects extends APIBaseEffects {\n    protected url = '/api/time-entries/';\n    protected prefix = '[TimeEntry]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n    @Effect() add$ = this._add$(\n        `${this.prefix} ADD`,\n        `${this.prefix} ADD_SUCCESS`\n    );\n    @Effect() update$ = this._update$(\n        `${this.prefix} UPDATE`,\n        `${this.prefix} UPDATE_SUCCESS`\n    );\n    @Effect() patch$ = this._patch$(\n        `${this.prefix} PATCH`,\n        `${this.prefix} PATCH_SUCCESS`\n    );\n    @Effect() remove$ = this._remove$(\n        `${this.prefix} REMOVE`,\n        `${this.prefix} REMOVE_SUCCESS`\n    );\n    @Effect() public socket$ = this._socket$(\n        'wip.timeentry',\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} REMOVE_SUCCESS`,\n        `${this.prefix} REPLACE_MANY`\n    );\n\n}\n","import { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\nimport { Injectable } from '@angular/core';\nimport { Effect, ofType } from '@ngrx/effects';\n\nimport { HttpActions, TimeEntryActions } from '../actions';\nimport { APIBaseEffects } from '../api';\nimport { IActionWithPayload } from '../models';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TimeEntrySignoffEffects extends APIBaseEffects {\n    protected url = '/api/time-entry-signoff/';\n    protected prefix = '[TimeEntrySignoff]';\n\n    @Effect() signoff$ = this.updates$.pipe(\n        ofType(`${this.prefix} SIGNOFF`),\n        map((action: IActionWithPayload) => action.payload),\n        mergeMap(payload =>\n            this.service$.post(this.apiUrl, payload).pipe(\n                map(data => ({type: TimeEntryActions.REPLACE_MANY, payload: data})),\n                catchError(res => of({type: HttpActions.HTTP_ERROR, payload: res}))\n            )\n        )\n    )\n\n}\n","import { APIBaseEffects } from '../api';\nimport { Effect } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserEffects extends APIBaseEffects {\n    protected url = '/api/users/';\n    protected prefix = '[User]';\n\n    @Effect() all$ = this._all$(\n        `${this.prefix} LOAD_ALL`,\n        `${this.prefix} LOAD_ALL_SUCCESS`\n    );\n    @Effect() one$ = this._one$(\n        `${this.prefix} LOAD_ONE`,\n        `${this.prefix} LOAD_ONE_SUCCESS`\n    );\n\n}\n","import * as _ from 'lodash';\n\nimport { IActionWithPayload } from './models';\n\nexport function reduceState (state: any, action: IActionWithPayload, type: string) {\n    switch (type) {\n        case 'REPLACE_ALL':\n            return action.payload;\n\n        case 'REPLACE_MANY':\n            _.each(action.payload, obj => {\n                const index = _.findIndex(state, { id: obj.id });\n                if (index >= 0) {\n                    state = [\n                        ...state.slice(0, index),\n                        obj,\n                        ...state.slice(index + 1)\n                    ]\n                } else {\n                    state = [...state, obj]\n                }\n            });\n            return [...state];\n\n        case 'REPLACE_ONE':\n            const index = _.findIndex(state, { id: action.payload.id });\n            if (index >= 0) {\n                // only replace the data if its not the same to avoid a state change\n                if (_.isEqual(state[index], action.payload)) {\n                    return state;\n                } else {\n                    return [\n                        ...state.slice(0, index),\n                        action.payload,\n                        ...state.slice(index + 1)\n                    ];\n                }\n            }\n            return [...state, action.payload];\n\n        case 'ADD_ONE':\n            return [...state, action.payload];\n\n        case 'REMOVE_ONE':\n            return _.filter(state, (obj: any) => obj.id !== action.payload.id);\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IBillingFrequency {\n    id?: number;\n    title: string;\n}\n\nexport type State = IBillingFrequency[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[BillingFrequency]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IClient {\n    id?: number;\n    name: string;\n    colour: string;\n    phone_number?: string;\n    email_address?: string;\n    website?: string;\n    address?: string;\n    notes?: string;\n}\n\nexport type State = IClient[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Client]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { IPosition } from './position';\nimport { reduceState } from '../generics';\n\nexport interface IClientContact {\n    id?: number;\n    client: number;\n    first_name: string;\n    last_name: string;\n    phone_number: string;\n    mobile_number: string;\n    email_address: string;\n    address: string;\n    position: string;\n    notes: string;\n    _position?: IPosition;\n}\n\nexport type State = IClientContact[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[ClientContact]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IClientContactTag {\n    id?: number;\n    object_id: number;\n    tag: number;\n}\n\nexport type State = IClientContactTag[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[ClientContactTag]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import * as _ from 'lodash';\n\nexport interface IFilter {\n    client: number;\n    job: number;\n    overdue: boolean;\n    user: number;\n}\n\nexport type State = IFilter;\n\nexport const initialState: State = {\n    client: null,\n    job: null,\n    overdue: null,\n    user: null\n};\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Filter]';\n    \n    switch (action.type) {\n\n        case `${actionPrefix} CLIENT`: {\n            return _.assign({}, state, { client: action.payload })\n        }\n\n        case `${actionPrefix} JOB`: {\n            return _.assign({}, state, { job: action.payload })\n        }\n\n        case `${actionPrefix} OVERDUE`: {\n            return _.assign({}, state, { overdue: action.payload })\n        }\n\n        case `${actionPrefix} USER`: {\n            return _.assign({}, state, { user: action.payload })\n        }\n\n        default:\n            return state;\n    }\n}\n","export interface IHttp {\n    pendingRequests: number;\n}\n\nexport type State = IHttp;\n\nexport const initialState: State = {\n    pendingRequests: 0\n};\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Http]';\n\n    switch (action.type) {\n\n        case `${actionPrefix} INCREMENT_PENDING`: {\n            return {\n                pendingRequests: state.pendingRequests + 1\n            };\n        }\n\n        case `${actionPrefix} DECREMENT_PENDING`: {\n            return {\n                pendingRequests: state.pendingRequests - 1\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n","import { IClient } from './client';\nimport { IJobStatus } from './jobstatus';\nimport { IJobType } from './jobtype';\nimport { reduceState } from '../generics';\n\nexport interface IJob {\n    id?: number;\n    title: string;\n    description?: string;\n    created_at?: string;\n    client: number;\n    type: number;\n    estimated_hours?: string;\n    colour: string;\n    status: number;\n    billed_to?: string;\n    _client?: IClient;\n    _status?: IJobStatus;\n    _type?: IJobType\n    _text_colour?: string;\n}\n\nexport type State = IJob[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Job]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IJobFile {\n    id?: number;\n    job: number;\n    name: string;\n    file: string;\n    size_mb: string;\n    uploaded_by?: number;\n    uploaded_on?: string;\n}\n\nexport type State = IJobFile[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[JobFile]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { IUser } from './user';\nimport { reduceState } from '../generics';\n\nexport interface IJobNote {\n    id?: number;\n    job: number;\n    note: string;\n    user?: number;\n    created_at?: string;\n    updated_at?: string;\n    _user?: IUser; \n}\n\nexport type State = IJobNote[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[JobNote]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { IBillingFrequency } from './billingfrequency';\nimport { IPaymentOption } from './paymentoption';\nimport { IRecurringCostType } from './recurringcosttype';\nimport { reduceState } from '../generics';\n\nexport interface IJobRecurringCost {\n    id?: number;\n    job: number;\n    type: number;\n    last_invoiced_date?: string;\n    billing_interval: number;\n    billing_frequency: number;\n    payment_option: number;\n    _type?: IRecurringCostType;\n    _billing_frequency?: IBillingFrequency;\n    _payment_option?: IPaymentOption;\n}\n\nexport type State = IJobRecurringCost[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[JobRecurringCost]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { IUser } from './user';\nimport { reduceState } from '../generics';\n\nexport interface IJobRelationship {\n    id?: number;\n    job: number;\n    user: number;\n    relationship: number;\n    _user?: IUser;\n    _relationship?: IJobRelationship;\n}\n\nexport type State = IJobRelationship[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[JobRelationship]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IJobStatus {\n    id?: number;\n    title: string;\n    allow_new_timesheet_entries: boolean;\n    closed: boolean;\n    order: number;\n}\n\nexport type State = IJobStatus[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[JobStatus]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IJobTiming {\n    id: number;\n    job: number;\n    time_spent_hours: string;\n    allocated_hours: string;\n    is_over_allocated_hours: boolean;\n}\n\nexport type State = IJobTiming[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[JobTiming]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IJobType {\n    id?: number;\n    title: string;\n}\n\nexport type State = IJobType[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[JobType]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IMe {\n    id: number;\n    full_name: string;\n    initials: string;\n    is_gradwell_enabled: boolean;\n}\n\nexport type State = IMe;\n\nexport const initialState: State = {\n    id: null,\n    full_name: '',\n    initials: '',\n    is_gradwell_enabled: false\n};\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Me]';\n    switch (action.type) {\n\n        // primarily used when state is a single object\n        case `${actionPrefix} LOAD_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IPaymentOption {\n    id?: number;\n    title: string;\n}\n\nexport type State = IPaymentOption[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[PaymentOption]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IPosition {\n    id?: number;\n    title: string;\n}\n\nexport type State = IPosition[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Position]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IRecurringCostType {\n    id?: number;\n    title: string;\n}\n\nexport type State = IRecurringCostType[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[RecurringCostType]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IRelationship {\n    id?: number;\n    title: string;\n}\n\nexport type State = IRelationship[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Relationship]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import * as _ from 'lodash';\n\nexport interface ITab {\n    title: string,\n    active: boolean\n}\n\nexport interface ITabs {\n    client: ITab[],\n    job: ITab[]\n}\n\nexport type State = ITabs;\n\nexport const initialState: State = {\n    client: [\n        { title: 'Detail', active: true },\n        { title: 'Jobs', active: false },\n        { title: 'Closed Jobs', active: false },\n        { title: 'Contacts', active: false }\n    ],\n    job: [\n        { title: 'Detail', active: true },\n        { title: 'Tasks', active: false },\n        { title: 'Notes', active: false },\n        { title: 'Files', active: false },\n        { title: 'Relationships', active: false },\n        { title: 'Recurring Costs', active: false }\n    ]\n};\n\nexport function reducer(state = initialState, action: any): State {\n    let index;\n\n    switch (action.type) {\n    \n        case '[Tabs] CLIENT_ACTIVATE_TAB':\n            index = _.findIndex(state.client, { title: action.payload.title });\n            _.forEach(state.client, (c, i) => { state.client[i].active = false });\n            state.client[index].active = true;\n            return state;\n\n        case '[Tabs] JOB_ACTIVATE_TAB':\n            index = _.findIndex(state.job, { title: action.payload.title });\n            _.forEach(state.job, (c, i) => { state.job[i].active = false });\n            state.job[index].active = true;\n            return state;\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITag {\n    id?: number;\n    name: string;\n    slug?: string;\n}\n\nexport type State = ITag[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Tag]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { IJob } from './job';\nimport { ITaskStatus } from './taskstatus';\nimport { reduceState } from '../generics';\n\nexport interface ITask {\n    id?: number;\n    title: string;\n    description?: string;\n    created_at?: string;\n    job: number;\n    status: number;\n    target_date?: string;\n    closed?: boolean;\n    not_chargeable?: boolean;\n    is_overdue?: boolean;\n    order: number;\n    tags: string[];\n    _job?: IJob;\n    _status?: ITaskStatus;\n}\n\nexport type State = ITask[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[Task]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITaskAssignee {\n    id?: number;\n    task: number;\n    user: number;\n    allocated_hours: string;\n}\n\nexport type State = ITaskAssignee[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TaskAssignee]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITaskFile {\n    id?: number;\n    task: number;\n    name: string;\n    file: string;\n    size_mb: string;\n    uploaded_by?: number;\n    uploaded_on?: string;\n}\n\nexport type State = ITaskFile[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TaskFile]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITaskNote {\n    id?: number;\n    task: number;\n    note: string;\n    user?: number;\n    created_at?: string;\n    updated_at?: string;\n}\n\nexport type State = ITaskNote[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TaskNote]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITaskStatus {\n    id: number;\n    title: string;\n    order: number;\n}\n\nexport type State = ITaskStatus[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TaskStatus]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITaskTag {\n    id?: number;\n    object_id: number;\n    tag: number;\n}\n\nexport type State = ITaskTag[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TaskTag]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITaskTiming {\n    id: number;\n    task: number;\n    time_spent_hours: string;\n    allocated_hours: string;\n    is_over_allocated_hours: boolean;\n}\n\nexport type State = ITaskTiming[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TaskTiming]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface ITimeEntry {\n    id?: number;\n    started_at: string;\n    ended_at: string;\n    comments?: string;\n    task: number;\n    user: number;\n    duration?: string;\n    signed_off: boolean;\n    signed_off_date?: string;\n}\n\nexport type State = ITimeEntry[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[TimeEntry]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} ADD_SUCCESS`: {\n            return reduceState(state, action, 'ADD_ONE');\n        }\n\n        case `${actionPrefix} UPDATE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} PATCH_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        case `${actionPrefix} REMOVE_SUCCESS`: {\n            return reduceState(state, action, 'REMOVE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduceState } from '../generics';\n\nexport interface IUser {\n    id: number;\n    full_name: string;\n    initials: string;\n    is_active: boolean;\n    is_gradwell_enabled: boolean;\n}\n\nexport type State = IUser[];\n\nexport const initialState: State = [];\n\nexport function reducer(state = initialState, action: any): State {\n    const actionPrefix = '[User]';\n    switch (action.type) {\n\n        // Replace objects\n        case `${actionPrefix} LOAD_ALL_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ALL');\n        }\n\n        case `${actionPrefix} REPLACE_MANY`: {\n            return reduceState(state, action, 'REPLACE_MANY');\n        }\n\n        // Basic CRUD actions\n        case `${actionPrefix} LOAD_ONE_SUCCESS`: {\n            return reduceState(state, action, 'REPLACE_ONE');\n        }\n\n        default:\n            return state;\n    }\n}\n","import * as _ from 'lodash';\n\nimport { getClientContactState, getClientState, getPositionState } from '../state';\n\nimport { createSelector } from '@ngrx/store';\nimport { getClientContactTagState } from './../state';\n\nexport const getClientCollection = createSelector(\n    getClientState,\n    (clients) => _.orderBy(clients, ['name'], ['asc'])\n);\n\nexport const getClientCollectionById = (id) => createSelector(\n    getClientCollection,\n    (clients) => _.find(clients, ['id', id])\n);\n\nexport const getClientContactCollection = createSelector(\n    getClientContactState,\n    getPositionState,\n    getClientContactTagState,\n    (contacts, positions, tags) => {\n        const objects = _.map(contacts, (contact) => {\n            return _.assign({}, contact, {\n                _position: _.find(positions, ['id', contact.position]),\n                _tags: _.filter(tags, ['object_id', contact.id])\n            });\n        });\n        return _.orderBy(objects, ['first_name', 'last_name'], ['asc', 'asc']);\n    }\n);\n\nexport const getClientContactCollectionById = (id) => createSelector(\n    getClientContactCollection,\n    (contacts) => _.find(contacts, ['id', id])\n);\n\nexport const getClientContactCollectionForClient = (id) => createSelector(\n    getClientContactCollection,\n    (contacts) => _.filter(contacts, ['client', id])\n);\n","import * as _ from 'lodash';\nimport { createSelector } from '@ngrx/store';\nimport {\n    getBillingFrequencyState,\n    getJobFileState,\n    getJobTimingState,\n    getPaymentOptionState,\n    getRecurringCostTypeState,\n    getUserState\n    } from './../state';\nimport {\n    getClientState,\n    getJobNoteState,\n    getJobRecurringCostState,\n    getJobRelationshipState,\n    getJobState,\n    getJobStatusState,\n    getJobTypeState,\n    getRelationshipState\n    } from '../state';\nimport { readableTextColor } from '../../utils/colour';\n\n\n\nexport const getJobCollection = createSelector(\n    getClientState,\n    getJobState,\n    getJobStatusState,\n    getJobTypeState,\n    (clients, jobs, statuses, types) => {\n        if (_.isEmpty(clients) || _.isEmpty(jobs) || _.isEmpty(statuses) || _.isEmpty(types)) {\n            return [];\n        }\n        \n        const objects = _.map(jobs, (job) => {\n            return _.assign({}, job, {\n                _client: _.find(clients, ['id', job.client]),\n                _status: _.find(statuses, ['id', job.status]),\n                _type: _.find(types, ['id', job.type]),\n                _text_colour: readableTextColor(job.colour)\n            });\n        });\n        return _.orderBy(objects, ['title'], ['asc']);\n    }\n);\n\nexport const getJobCollectionById = (id) => createSelector(\n    getJobCollection,\n    (jobs) => _.find(jobs, ['id', id])\n);\n\nexport const getJobCollectionForClient = (id) => createSelector(\n    getJobCollection,\n    (jobs) => _.filter(jobs, ['client', id])\n);\n\nexport const getJobFilesForJob = (id) => createSelector(\n    getJobFileState,\n    (files) => _.filter(files, ['job', id])\n);\n\nexport const getJobNoteCollection = createSelector(\n    getJobNoteState,\n    getUserState,\n    (notes, users) => {\n        const objects = _.map(notes, (note) => {\n            return _.assign({}, note, {\n                _user: _.find(users, ['id', note.user])\n            });\n        });\n        return _.orderBy(objects, ['updated_at'], ['desc'])\n    }\n);\n\nexport const getJobNoteCollectionForJob = (id) => createSelector(\n    getJobNoteCollection,\n    (notes) => _.filter(notes, ['job', id])\n);\n\nexport const getJobRecurringCostCollection = createSelector(\n    getJobRecurringCostState,\n    getRecurringCostTypeState,\n    getBillingFrequencyState,\n    getPaymentOptionState,\n    (costs, types, frequencies, options) => {\n        const objects = _.map(costs, (cost) => {\n            return _.assign({}, cost, {\n                _type: _.find(types, ['id', cost.type]),\n                _billing_frequency: _.find(frequencies, ['id', cost.billing_frequency]),\n                _payment_option: _.find(options, ['id', cost.payment_option])\n            });\n        });\n        return _.orderBy(objects, ['_type.title'], ['asc']);\n    }\n);\n\nexport const getJobRecurringCostCollectionForJob = (id) => createSelector(\n    getJobRecurringCostCollection,\n    (costs) => _.filter(costs, ['job', id])\n);\n\nexport const getJobRecurringCostCollectionById = (id) => createSelector(\n    getJobRecurringCostCollection,\n    (costs) => _.find(costs, ['id', id])\n);\n\nexport const getJobRelationshipCollection = createSelector(\n    getJobRelationshipState,\n    getUserState,\n    getRelationshipState,\n    (jobRelationships, users, relationships) => {\n        const objects = _.map(jobRelationships, (jobRelationship) => {\n            return _.assign({}, jobRelationship, {\n                _user: _.find(users, ['id', jobRelationship.user]),\n                _relationship: _.find(relationships, ['id', jobRelationship.relationship])\n            });\n        });\n        return _.orderBy(objects, ['_user.full_name'], ['asc']);\n    }\n);\n\nexport const getJobRelationshipCollectionForJob = (id) => createSelector(\n    getJobRelationshipCollection,\n    (relationships) => _.filter(relationships, ['job', id])\n);\n\nexport const getJobRelationshipCollectionById = (id) => createSelector(\n    getJobRelationshipCollection,\n    (relationships) => _.find(relationships, ['id', id])\n);\n\nexport const getJobTimingsById = (id) => createSelector(\n    getJobTimingState,\n    (jobs) => _.find(jobs, ['job', id])\n);","import * as _ from 'lodash';\n\nimport { createSelector } from '@ngrx/store';\nimport { getTagState } from './../state';\n\nexport const getTagCollection = createSelector(\n    getTagState,\n    (tags) => _.orderBy(tags, ['name'], ['asc'])\n);\n\nexport const getTagById = (id) => createSelector(\n    getTagCollection,\n    (tags) => _.find(tags, ['id', id])\n);\n","import * as _ from 'lodash';\nimport { createSelector } from '@ngrx/store';\nimport { getJobCollection } from './job';\nimport { getTaskAssigneeState, getTaskTagState, getTaskTimingState } from './../state';\nimport { getTaskFileState, getTaskNoteState, getTaskState } from '../state';\nimport { getTaskStatusState } from '../state';\n\n\n\nexport const getTaskAssigneesForTask = (id) => createSelector(\n    getTaskAssigneeState,\n    (assignees) => _.filter(assignees, ['task', id])\n);\n\nexport const getTaskById = (id) => createSelector(\n    getTaskState,\n    (tasks) => _.find(tasks, ['id', id])\n);\n\nexport const getTaskCollection = createSelector(\n    getJobCollection,\n    getTaskState,\n    getTaskStatusState,\n    (jobs, tasks, statuses) => {\n        if (_.isEmpty(jobs) || _.isEmpty(tasks) || _.isEmpty(statuses)) {\n            return [];\n        }\n        \n        const objects = _.map(tasks, (task) => {\n            return _.assign({}, task, {\n                _job: _.find(jobs, ['id', task.job]),\n                _status: _.find(statuses, ['id', task.status])\n            });\n        });\n        return _.orderBy(objects, ['order'], ['asc']);\n    }\n);\n\nexport const getTaskCollectionOpen = createSelector(\n    getTaskCollection,\n    (tasks) => _.filter(tasks, t => t.closed == false)\n)\n\nexport const getTaskCollectionById = (id) => createSelector(\n    getTaskCollection,\n    (tasks) => _.find(tasks, ['id', id])\n);\n\nexport const getTaskStateForJob = (id) => createSelector(\n    getTaskState,\n    (tasks) => {\n        const objects = _.filter(tasks, ['job', id]);\n        return _.orderBy(objects, ['order'], ['asc']);\n    }\n);\n\nexport const getTaskFilesForTask = (id) => createSelector(\n    getTaskFileState,\n    (files) => _.filter(files, ['task', id])\n);\n\nexport const getTaskNotes = createSelector(\n    getTaskNoteState,\n    (notes) => _.orderBy(notes, ['updated_at'], ['desc'])\n);\n\nexport const getTaskNotesForTask = (id) => createSelector(\n    getTaskNotes,\n    (notes) => _.filter(notes, ['task', id])\n);\n\nexport const getTaskTagsForTask = (id) => createSelector(\n    getTaskTagState,\n    (tags) => _.filter(tags, ['object_id', id])\n);\n\nexport const getTaskTimingsById = (id) => createSelector(\n    getTaskTimingState,\n    (tasks) => _.find(tasks, ['task', id])\n);","import * as _ from 'lodash';\nimport { createSelector } from '@ngrx/store';\nimport { getMeState, getTaskAssigneeState } from '../state';\nimport { getTaskCollectionOpen } from './task';\n\nexport const getTasksForTaskBoardForUser = createSelector(\n    getTaskCollectionOpen,\n    getTaskAssigneeState,\n    getMeState,\n    (tasks, assignees, me) => {\n        let objs = tasks;\n        \n        // only tasks assigned to user\n        let ids = _.map(_.filter(assignees, ['user', me.id]), 'task');\n        objs = _.filter(objs, o => _.includes(ids, o.id));\n\n        const mappedObjs = _.map(objs, o => _.assign({}, o, {\n            _assignees: _.filter(assignees, ['task', o.id])\n        }))\n\n        return _.orderBy(mappedObjs, ['target_date'], ['asc']);;\n    }\n)","import * as _ from 'lodash';\nimport { createSelector } from '@ngrx/store';\nimport { getTimeEntryState } from '../state';\n\n\nexport const getTimeEntryById = (id) => createSelector(\n    getTimeEntryState,\n    (entries) => _.find(entries, ['id', id])\n);\n","import * as _ from 'lodash';\nimport * as moment from 'moment';\nimport { createSelector } from '@ngrx/store';\nimport { getTaskAssigneeState, getTimeEntryState, getClientState, getJobState } from './../state';\nimport { getTaskCollection, getTaskCollectionOpen } from './task';\nimport { valueOr } from '../../utils/generic';\n\nexport const getEventsForUser = (id: number) => createSelector(\n    getTimeEntryState,\n    getTaskCollection,\n    (entries, tasks) => {\n        const objs = _.filter(entries, ['user', id]);\n        return _.map(objs, (obj) => {\n            const _task = _.find(tasks, ['id', obj.task]);\n            return {\n                id: obj.id.toString(),\n                start: new Date(obj.started_at),\n                end: new Date(obj.ended_at),\n                title: _.get(_task, '_job._client.name', '') + ' - ' +\n                       _.get(_task, '_job.title', '') + ' - ' +\n                       _.get(_task, 'title', ''),\n                backgroundColor: _.get(_task, '_job.colour', ''),\n                borderColor: _.get(_task, '_job.colour', ''),\n                textColor: _.get(_task, '_job._text_colour', ''),\n                allDay: false,\n                extendedProps: {\n                    id: obj.id,\n                    task: obj.task,\n                    signed_off: obj.signed_off\n                }\n            };\n        });\n    }\n);\n\nexport const getTasksForTimeEntry = createSelector(\n    getTaskCollectionOpen,\n    (tasks) => _.filter(tasks, t => t._job._status.allow_new_timesheet_entries == true)\n)\n\nexport const getTasksForUser = (id: number = null, searchTerms: string[] = []) => createSelector(\n    getTasksForTimeEntry,\n    getTaskAssigneeState,\n    getClientState,\n    getJobState,\n    (tasks, assignees, clients, jobs) => {\n\n        let objs = tasks;\n        \n        // apply filters (either search all or only show tasks im assigned to)\n        if (searchTerms.length > 0) {\n            objs = _.filter(objs, obj => {\n                let found = true;\n                _.each(searchTerms, (term) => {\n                    if (!_.includes(valueOr(obj.title).toLowerCase(), term.toLowerCase()) &&\n                        !_.includes(valueOr(obj._job.title).toLowerCase(), term.toLowerCase()) &&\n                        !_.includes(valueOr(obj._job._client.name).toLowerCase(), term.toLowerCase())\n                    ) {\n                        found = false;\n                    }\n                });\n                return found;\n            });\n        } else if (id) {\n            let ids = _.map(_.filter(assignees, ['user', id]), 'task');\n            objs = _.filter(objs, o => _.includes(ids, o.id));\n        }\n\n        // group the tasks by client\n        const byClient = _.groupBy(objs, '_job.client');\n        const byClientByJob = {};\n\n        // then for each client group the tasks by job\n        _.forEach(byClient, (tasks, key) => {\n            const byJob = _.groupBy(tasks, 'job');\n            byClientByJob[key] = {\n                data: _.find(clients, ['id', +key]),\n                jobs: _.transform(\n                    byJob, (result, value, key) => result[key] = {\n                        data: _.find(jobs, ['id', +key]),\n                        tasks: value\n                    }\n                )\n            }\n        })\n\n        return byClientByJob;\n    }\n)\n\nexport const getIsDaySignedOffRequired = (id: number, date: Date) => createSelector(\n    getTimeEntryState,\n    (entries) => {\n        const dt = moment(date).format('YYYY-MM-DD');\n        const objects = _.filter(\n            entries,\n            e => e.user === id\n            && e.signed_off === false\n            && _.startsWith(e.started_at, dt)\n        );\n        return objects.length > 0;\n    }\n)\n\nexport const getDailyTimeTotalForUser = (id: number, date: Date) => createSelector(\n    getTimeEntryState,\n    (entries) => {\n        const dt = moment(date).format('YYYY-MM-DD');\n        const forDay = _.filter(\n            entries,\n            e => e.user === id\n            && _.startsWith(e.started_at, dt)\n        );\n        const durations: string[] = _.map(forDay, 'duration');\n        const totalDurations = durations.slice(1).reduce((prev, cur) => moment.duration(cur).add(prev), moment.duration(durations[0]));\n        return moment.utc(totalDurations.asMilliseconds()).format(\"HH:mm\");\n    }\n)\n","import * as _ from 'lodash';\n\nimport { createSelector } from '@ngrx/store';\nimport { getUserState } from '../state';\n\nexport const getActiveUsers = createSelector(\n  getUserState,\n  (users) => _.filter(users, ['is_active', true])\n);\n\nexport const getUserById = (id) => createSelector(\n  getUserState,\n  (users) => _.find(users, ['id', id])\n);\n","import * as fromBillingFrequency from './reducers/billingfrequency';\nimport * as fromClient from './reducers/client';\nimport * as fromClientContact from './reducers/clientcontact';\nimport * as fromClientContactTag from './reducers/clientcontacttag';\nimport * as fromFilter from './reducers/filter';\nimport * as fromHttp from './reducers/http';\nimport * as fromJob from './reducers/job';\nimport * as fromJobFile from './reducers/jobfile';\nimport * as fromJobNote from './reducers/jobnote';\nimport * as fromJobRecurringCost from './reducers/jobrecurringcost';\nimport * as fromJobRelationship from './reducers/jobrelationship';\nimport * as fromJobStatus from './reducers/jobstatus';\nimport * as fromJobTiming from './reducers/jobtiming';\nimport * as fromJobType from './reducers/jobtype';\nimport * as fromMe from './reducers/me';\nimport * as fromPaymentOption from './reducers/paymentoption';\nimport * as fromPosition from './reducers/position';\nimport * as fromRecurringCostType from './reducers/recurringcosttype';\nimport * as fromRelationship from './reducers/relationship';\nimport * as fromTab from './reducers/tabs';\nimport * as fromTag from './reducers/tag';\nimport * as fromTask from './reducers/task';\nimport * as fromTaskAssignee from './reducers/taskassignee';\nimport * as fromTaskFile from './reducers/taskfile';\nimport * as fromTaskNote from './reducers/tasknote';\nimport * as fromTaskStatus from './reducers/taskstatus';\nimport * as fromTaskTag from './reducers/tasktag';\nimport * as fromTaskTiming from './reducers/tasktiming';\nimport * as fromTimeEntry from './reducers/timeentry';\nimport * as fromUser from './reducers/user';\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\n\n\nexport interface AppState {\n    billing_frequencies: fromBillingFrequency.State;\n    clients: fromClient.State;\n    client_contacts: fromClientContact.State;\n    client_contact_tags: fromClientContactTag.State;\n    filters: fromFilter.State;\n    http: fromHttp.State;\n    jobs: fromJob.State;\n    job_files: fromJobFile.State;\n    job_notes: fromJobNote.State;\n    job_recurring_costs: fromJobRecurringCost.State;\n    job_relationships: fromJobRelationship.State;\n    job_statuses: fromJobStatus.State;\n    job_timings: fromJobTiming.State;\n    job_types: fromJobType.State;\n    me: fromMe.State;\n    payment_options: fromPaymentOption.State;\n    positions: fromPosition.State;\n    recurring_cost_types: fromRecurringCostType.State;\n    relationships: fromRelationship.State;\n    tabs: fromTab.State;\n    tags: fromTag.State;\n    tasks: fromTask.State;\n    task_assignees: fromTaskAssignee.State;\n    task_files: fromTaskFile.State;\n    task_notes: fromTaskNote.State;\n    task_statuses: fromTaskStatus.State;\n    task_tags: fromTaskTag.State;\n    task_timings: fromTaskTiming.State;\n    time_entries: fromTimeEntry.State;\n    users: fromUser.State;\n}\n\nexport const reducers: ActionReducerMap<AppState> = {\n    billing_frequencies: fromBillingFrequency.reducer,\n    clients: fromClient.reducer,\n    client_contacts: fromClientContact.reducer,\n    client_contact_tags: fromClientContactTag.reducer,\n    filters: fromFilter.reducer,\n    http: fromHttp.reducer,\n    jobs: fromJob.reducer,\n    job_files: fromJobFile.reducer,\n    job_notes: fromJobNote.reducer,\n    job_recurring_costs: fromJobRecurringCost.reducer,\n    job_relationships: fromJobRelationship.reducer,\n    job_statuses: fromJobStatus.reducer,\n    job_timings: fromJobTiming.reducer,\n    job_types: fromJobType.reducer,\n    me: fromMe.reducer,\n    payment_options: fromPaymentOption.reducer,\n    positions: fromPosition.reducer,\n    recurring_cost_types: fromRecurringCostType.reducer,\n    relationships: fromRelationship.reducer,\n    tabs: fromTab.reducer,\n    tags: fromTag.reducer,\n    tasks: fromTask.reducer,\n    task_assignees: fromTaskAssignee.reducer,\n    task_files: fromTaskFile.reducer,\n    task_notes: fromTaskNote.reducer,\n    task_statuses: fromTaskStatus.reducer,\n    task_tags: fromTaskTag.reducer,\n    task_timings: fromTaskTiming.reducer,\n    time_entries: fromTimeEntry.reducer,\n    users: fromUser.reducer\n};\n\nexport const getBillingFrequencyState = createFeatureSelector<fromBillingFrequency.State>('billing_frequencies');\nexport const getClientState = createFeatureSelector<fromClient.State>('clients');\nexport const getClientContactState = createFeatureSelector<fromClientContact.State>('client_contacts');\nexport const getClientContactTagState = createFeatureSelector<fromClientContactTag.State>('client_contact_tags');\nexport const getFilterState = createFeatureSelector<fromFilter.State>('filters');\nexport const getHttpState = createFeatureSelector<fromHttp.IHttp>('http');\nexport const getJobState = createFeatureSelector<fromJob.State>('jobs');\nexport const getJobFileState = createFeatureSelector<fromJobFile.State>('job_files');\nexport const getJobNoteState = createFeatureSelector<fromJobNote.State>('job_notes');\nexport const getJobRecurringCostState = createFeatureSelector<fromJobRecurringCost.State>('job_recurring_costs');\nexport const getJobRelationshipState = createFeatureSelector<fromJobRelationship.State>('job_relationships');\nexport const getJobStatusState = createFeatureSelector<fromJobStatus.State>('job_statuses');\nexport const getJobTimingState = createFeatureSelector<fromJobTiming.State>('job_timings');\nexport const getJobTypeState = createFeatureSelector<fromJobType.State>('job_types');\nexport const getMeState = createFeatureSelector<fromMe.State>('me');\nexport const getPaymentOptionState = createFeatureSelector<fromPaymentOption.State>('payment_options');\nexport const getPositionState = createFeatureSelector<fromPosition.State>('positions');\nexport const getRecurringCostTypeState = createFeatureSelector<fromRecurringCostType.State>('recurring_cost_types');\nexport const getRelationshipState = createFeatureSelector<fromRelationship.State>('relationships');\nexport const getTabState = createFeatureSelector<fromTab.State>('tabs');\nexport const getTagState = createFeatureSelector<fromTag.State>('tags');\nexport const getTaskState = createFeatureSelector<fromTask.State>('tasks');\nexport const getTaskAssigneeState = createFeatureSelector<fromTaskAssignee.State>('task_assignees');\nexport const getTaskFileState = createFeatureSelector<fromTaskFile.State>('task_files');\nexport const getTaskNoteState = createFeatureSelector<fromTaskNote.State>('task_notes');\nexport const getTaskStatusState = createFeatureSelector<fromTaskStatus.State>('task_statuses');\nexport const getTaskTagState = createFeatureSelector<fromTaskTag.State>('task_tags');\nexport const getTaskTimingState = createFeatureSelector<fromTaskTiming.State>('task_timings');\nexport const getTimeEntryState = createFeatureSelector<fromTimeEntry.State>('time_entries');\nexport const getUserState = createFeatureSelector<fromUser.State>('users');\n","export const readableTextColor = (color: string) => {\n    if (!color) {\n        return '#000000';\n    }\n    \n    var brightStart = 123;\n    function hexToRgb(hex) {\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n            return r + r + g + g + b + b;\n        });\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    }\n    var colourIsLight = function (r, g, b) {\n        var a = (r * 299 + g * 587 + b * 114) / 1000;\n        return (a > brightStart);\n    };\n    var bgRgb = hexToRgb(color);\n    return colourIsLight(bgRgb.r, bgRgb.g, bgRgb.b) ? 'black' : 'white';\n}","export const getCookie = (name: string) => {\n    let ca: Array<string> = document.cookie.split(';');\n    let caLen: number = ca.length;\n    let cookieName = `${name}=`;\n    let c: string;\n\n    for (let i: number = 0; i < caLen; i += 1) {\n        c = ca[i].replace(/^\\s+/g, '');\n        if (c.indexOf(cookieName) == 0) {\n            return c.substring(cookieName.length, c.length);\n        }\n    }\n    return '';\n}","import * as moment from 'moment';\n\nexport const getDatesBetween = (from: Date, to: Date) => {\n    const dateArray = [];\n    let currentDate = moment(from);\n    const stopDate = moment(to);\n    while (currentDate <= stopDate) {\n        dateArray.push( moment(currentDate).toDate() )\n        currentDate = moment(currentDate).add(1, 'days');\n    }\n    return dateArray;\n}\n\nexport const valueOr = (value: any, ifNull: any = '') => {\n    return value ? value : ifNull;\n};","export const decimal10at2 = '^[0-9]{1,7}(\\\\.[0-9]{0,2})?$';\nexport const hexReg = '#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})';\nexport const integerReg = '^[0-9]*$';\nexport const phoneReg = '[0-9 ]*';\nexport const time24Reg = '([01]?[0-9]|2[0-3]):[0-5][0-9]';\nexport const urlReg = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';","import * as _ from 'lodash';\n\nimport { ITask } from '../state/reducers/task';\n\nexport const calculateOrder = (dropIndex: number, tasks: ITask[], task: ITask) => {\n    const initialOrder = 16384;\n    const lastIndex = _.findLastIndex(tasks);\n    let order = 0;\n    if (tasks.length === 1) {\n        // this is the only task so order is default\n        order = initialOrder;\n    } else if (dropIndex === 0) {\n        // task moved to start so half the next order value\n        order = tasks[dropIndex+1].order / 2;\n    } else if (dropIndex === lastIndex) {\n        // task was moved to the end so add the default to the second from last\n        order = tasks[dropIndex-1].order + initialOrder;\n    } else {\n        // task is in the middle so find the diff between the adjacent tasks\n        const prev = tasks[dropIndex-1].order;\n        const next = tasks[dropIndex+1].order;\n        order = ((next - prev) / 2) + prev;\n    }\n    return order\n}","export const environment = {\n  production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}